Total verification running time: 00:09:07
Result: Proved

[P4 + P4LTL->Boogie]:
P4LTL parsing result: ([]((AP(((meta.id == a) && (nh_avaibility_1[a] == 0))) ==> (X(AP((((meta.id == a) && (nh_avaibility_1[a] == 1)) ==> (sw_sum_0[a] > threshold_registers_0[a]))))))))

P4LTL parsing result: ([](AP(((valid(hdr.tcp) && (meta.use_blink == 1)) && (hdr.ipv4.ttl != 1)))))

//#LTLProperty:
 ([]((AP(((_p4ltl_2 == true) && (_p4ltl_3 == true))) ==> (X(AP((((_p4ltl_2 == true) && (_p4ltl_1 == true)) ==> (_p4ltl_0 == true))))))))
//#LTLFairness:
 ([](AP(((hdr.tcp.valid == true && (_p4ltl_5 == true)) && (_p4ltl_4 == true)))))
backend cpu time 0.031385 s
program cpu time 1.42826 s

[Boogie Line Num]
1290 /home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl

[Boogie->Verified Result]:
This is Ultimate 0.2.2-P4LTL-348d754-m
[2023-01-16 04:04:22,910 INFO  L177        SettingsManager]: Resetting all preferences to default values...
[2023-01-16 04:04:22,914 INFO  L181        SettingsManager]: Resetting UltimateCore preferences to default values
[2023-01-16 04:04:22,964 INFO  L184        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2023-01-16 04:04:22,965 INFO  L181        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2023-01-16 04:04:22,966 INFO  L181        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2023-01-16 04:04:22,968 INFO  L181        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2023-01-16 04:04:22,970 INFO  L181        SettingsManager]: Resetting LassoRanker preferences to default values
[2023-01-16 04:04:22,973 INFO  L181        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2023-01-16 04:04:22,974 INFO  L181        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2023-01-16 04:04:22,975 INFO  L181        SettingsManager]: Resetting Sifa preferences to default values
[2023-01-16 04:04:22,977 INFO  L184        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2023-01-16 04:04:22,977 INFO  L181        SettingsManager]: Resetting LTL2Aut preferences to default values
[2023-01-16 04:04:22,978 INFO  L181        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2023-01-16 04:04:22,979 INFO  L181        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2023-01-16 04:04:22,980 INFO  L181        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2023-01-16 04:04:22,981 INFO  L181        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2023-01-16 04:04:22,982 INFO  L181        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2023-01-16 04:04:22,983 INFO  L181        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2023-01-16 04:04:22,984 INFO  L181        SettingsManager]: Resetting CodeCheck preferences to default values
[2023-01-16 04:04:22,993 INFO  L181        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2023-01-16 04:04:22,995 INFO  L181        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2023-01-16 04:04:22,996 INFO  L181        SettingsManager]: Resetting Referee preferences to default values
[2023-01-16 04:04:22,997 INFO  L181        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2023-01-16 04:04:22,999 INFO  L184        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2023-01-16 04:04:22,999 INFO  L184        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2023-01-16 04:04:23,000 INFO  L181        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2023-01-16 04:04:23,001 INFO  L181        SettingsManager]: Resetting IcfgToChc preferences to default values
[2023-01-16 04:04:23,002 INFO  L181        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2023-01-16 04:04:23,003 INFO  L184        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2023-01-16 04:04:23,003 INFO  L181        SettingsManager]: Resetting ThufvLTL2Aut preferences to default values
[2023-01-16 04:04:23,005 INFO  L181        SettingsManager]: Resetting ThufvSpecLang preferences to default values
[2023-01-16 04:04:23,005 INFO  L181        SettingsManager]: Resetting Boogie Printer preferences to default values
[2023-01-16 04:04:23,006 INFO  L181        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2023-01-16 04:04:23,007 INFO  L181        SettingsManager]: Resetting ReqPrinter preferences to default values
[2023-01-16 04:04:23,008 INFO  L181        SettingsManager]: Resetting Witness Printer preferences to default values
[2023-01-16 04:04:23,009 INFO  L184        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2023-01-16 04:04:23,009 INFO  L181        SettingsManager]: Resetting CDTParser preferences to default values
[2023-01-16 04:04:23,010 INFO  L184        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2023-01-16 04:04:23,010 INFO  L184        SettingsManager]: ReqParser provides no preferences, ignoring...
[2023-01-16 04:04:23,010 INFO  L181        SettingsManager]: Resetting SmtParser preferences to default values
[2023-01-16 04:04:23,011 INFO  L181        SettingsManager]: Resetting Witness Parser preferences to default values
[2023-01-16 04:04:23,012 INFO  L188        SettingsManager]: Finished resetting all preferences to default values...
[2023-01-16 04:04:23,013 INFO  L101        SettingsManager]: Beginning loading settings from /home/p4ltl/Desktop/UP4LTL-linux/config/P4LTL.epf
[2023-01-16 04:04:23,022 INFO  L113        SettingsManager]: Loading preferences was successful
[2023-01-16 04:04:23,023 INFO  L115        SettingsManager]: Preferences different from defaults after loading the file:
[2023-01-16 04:04:23,024 INFO  L136        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2023-01-16 04:04:23,024 INFO  L138        SettingsManager]:  * Read property from file=true
[2023-01-16 04:04:23,024 INFO  L136        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2023-01-16 04:04:23,024 INFO  L138        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2023-01-16 04:04:23,024 INFO  L136        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2023-01-16 04:04:23,024 INFO  L138        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2023-01-16 04:04:23,025 INFO  L138        SettingsManager]:  * Use old map elimination=false
[2023-01-16 04:04:23,025 INFO  L138        SettingsManager]:  * Try twofold refinement=false
[2023-01-16 04:04:23,025 INFO  L136        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Overapproximate operations on floating types=true
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Check division by zero=IGNORE
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Pointer to allocated memory at dereference=IGNORE
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=IGNORE
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Check array bounds for arrays that are off heap=IGNORE
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Check if freed pointer was valid=false
[2023-01-16 04:04:23,028 INFO  L138        SettingsManager]:  * Pointer base address is valid at dereference=IGNORE
[2023-01-16 04:04:23,028 INFO  L136        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * Size of a code block=SingleStatement
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * Remove assume true statements=false
[2023-01-16 04:04:23,029 INFO  L136        SettingsManager]: Preferences of TraceAbstraction differ from their defaults:
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * Compute Interpolants along a Counterexample=FPandBP
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * Trace refinement strategy=CAMEL
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * Command for external solver=z3 SMTLIB2_COMPLIANT=true -memory:2024 -smt2 -in
[2023-01-16 04:04:23,029 INFO  L138        SettingsManager]:  * SMT solver=External_ModelsAndUnsatCoreMode
[2023-01-16 04:04:23,031 INFO  L136        SettingsManager]: Preferences of Boogie Printer differ from their defaults:
[2023-01-16 04:04:23,031 INFO  L138        SettingsManager]:  * Dump path:=C:\Users\Greenie\Desktop\Project\P4LTL\trunk\examples\P4LTL
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1 (file:/home/p4ltl/Desktop/UP4LTL-linux/plugins/com.sun.xml.bind_2.2.0.v201505121915.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[2023-01-16 04:04:23,514 INFO  L75    nceAwareModelManager]: Repository-Root is: /tmp
[2023-01-16 04:04:23,541 INFO  L261   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2023-01-16 04:04:23,543 INFO  L217   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2023-01-16 04:04:23,544 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2023-01-16 04:04:23,546 INFO  L275        PluginConnector]: Boogie PL CUP Parser initialized
[2023-01-16 04:04:23,547 INFO  L432   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl
[2023-01-16 04:04:23,547 INFO  L110           BoogieParser]: Parsing: '/home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl'
[2023-01-16 04:04:23,594 INFO  L299   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2023-01-16 04:04:23,596 INFO  L131        ToolchainWalker]: Walking toolchain with 7 elements.
[2023-01-16 04:04:23,597 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2023-01-16 04:04:23,597 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2023-01-16 04:04:23,597 INFO  L275        PluginConnector]: Boogie Preprocessor initialized
[2023-01-16 04:04:23,616 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,617 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,634 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,635 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,649 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,654 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,681 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,687 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2023-01-16 04:04:23,688 INFO  L113        PluginConnector]: ------------------------ThufvSpecLang----------------------------
[2023-01-16 04:04:23,688 INFO  L271        PluginConnector]: Initializing ThufvSpecLang...
[2023-01-16 04:04:23,698 INFO  L275        PluginConnector]: ThufvSpecLang initialized
[2023-01-16 04:04:23,705 INFO  L185        PluginConnector]: Executing the observer ThufvSpecLangObserver from plugin ThufvSpecLang for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/1) ...
[2023-01-16 04:04:23,709 INFO  L184   hufvSpecLangObserver]: P4LTL Spec is: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_3 == true))) ==> (X(AP((((_p4ltl_2 == true) && (_p4ltl_1 == true)) ==> (_p4ltl_0 == true))))))))
[2023-01-16 04:04:23,710 INFO  L312   hufvSpecLangObserver]: translating P4LTL formula: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_3 == true))) ==> (X(AP((((_p4ltl_2 == true) && (_p4ltl_1 == true)) ==> (_p4ltl_0 == true))))))))
[2023-01-16 04:04:23,710 INFO  L331   hufvSpecLangObserver]: Starting to parse P4LTL Formula to AstNode: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_3 == true))) ==> (X(AP((((_p4ltl_2 == true) && (_p4ltl_1 == true)) ==> (_p4ltl_0 == true))))))))
Token: (
Token: []
Token: (
Token: (
Token: AP
Token: (
Token: (
Token: (
Token: _p4ltl_2
Token: ==
Token: true
Token: )
Token: &&
Token: (
Token: _p4ltl_3
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: ==>
Token: (
Token: X
Token: (
Token: AP
Token: (
Token: (
Token: (
Token: (
Token: _p4ltl_2
Token: ==
Token: true
Token: )
Token: &&
Token: (
Token: _p4ltl_1
Token: ==
Token: true
Token: )
Token: )
Token: ==>
Token: (
Token: _p4ltl_0
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: 
Token: 
[2023-01-16 04:04:23,722 INFO  L336   hufvSpecLangObserver]: Successfully lexed and parsed: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_3 == true))) ==> (X(AP((((_p4ltl_2 == true) && (_p4ltl_1 == true)) ==> (_p4ltl_0 == true))))))))
[2023-01-16 04:04:23,723 INFO  L316   hufvSpecLangObserver]: translated to regular LTL formula: ( [](( AP(( _p4ltl_2==true && _p4ltl_3==true )) ==> ( X(AP(( ( _p4ltl_2==true && _p4ltl_1==true ) ==> _p4ltl_0==true ))) ) )) )
==== class: class ast.UnaryTemporalOperator
==== class: class ast.BinaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.UnaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
[2023-01-16 04:04:23,728 INFO  L218   hufvSpecLangObserver]: P4LTL Fairness Spec is: ([](AP(((hdr.tcp.valid == true && (_p4ltl_5 == true)) && (_p4ltl_4 == true)))))
[2023-01-16 04:04:23,728 INFO  L312   hufvSpecLangObserver]: translating P4LTL formula: ([](AP(((hdr.tcp.valid == true && (_p4ltl_5 == true)) && (_p4ltl_4 == true)))))
[2023-01-16 04:04:23,728 INFO  L331   hufvSpecLangObserver]: Starting to parse P4LTL Formula to AstNode: ([](AP(((hdr.tcp.valid == true && (_p4ltl_5 == true)) && (_p4ltl_4 == true)))))
Token: (
Token: []
Token: (
Token: AP
Token: (
Token: (
Token: (
Token: hdr.tcp.valid
Token: ==
Token: true
Token: &&
Token: (
Token: _p4ltl_5
Token: ==
Token: true
Token: )
Token: )
Token: &&
Token: (
Token: _p4ltl_4
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: )
Token: )
Token: 
Token: 
[2023-01-16 04:04:23,729 INFO  L336   hufvSpecLangObserver]: Successfully lexed and parsed: ([](AP(((hdr.tcp.valid == true && (_p4ltl_5 == true)) && (_p4ltl_4 == true)))))
[2023-01-16 04:04:23,729 INFO  L316   hufvSpecLangObserver]: translated to regular LTL formula: ( [](AP(( ( hdr.tcp.valid==true && _p4ltl_5==true ) && _p4ltl_4==true ))) )
==== class: class ast.UnaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
[2023-01-16 04:04:23,731 INFO  L288   hufvSpecLangObserver]: File already exists and will be overwritten: /home/p4ltl/Desktop/UP4LTL-linux/__p4ltl_ast.json
[2023-01-16 04:04:23,731 INFO  L291   hufvSpecLangObserver]: Writing to file /home/p4ltl/Desktop/UP4LTL-linux/__p4ltl_ast.json
[2023-01-16 04:04:23,733 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.tsinghua.ss.thufv.specLang AST 16.01 04:04:23 PropertyContainer
[2023-01-16 04:04:23,733 INFO  L132        PluginConnector]: ------------------------ END ThufvSpecLang----------------------------
[2023-01-16 04:04:23,734 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2023-01-16 04:04:23,734 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2023-01-16 04:04:23,734 INFO  L275        PluginConnector]: RCFGBuilder initialized
[2023-01-16 04:04:23,736 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/2) ...
[2023-01-16 04:04:23,746 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:04:23,857 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure NoAction_0 given in one single declaration
[2023-01-16 04:04:23,858 INFO  L130     BoogieDeclarations]: Found specification of procedure NoAction_0
[2023-01-16 04:04:23,858 INFO  L138     BoogieDeclarations]: Found implementation of procedure NoAction_0
[2023-01-16 04:04:23,858 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure ULTIMATE.start given in one single declaration
[2023-01-16 04:04:23,859 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2023-01-16 04:04:23,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2023-01-16 04:04:23,859 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure _drop given in one single declaration
[2023-01-16 04:04:23,859 INFO  L130     BoogieDeclarations]: Found specification of procedure _drop
[2023-01-16 04:04:23,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure _drop
[2023-01-16 04:04:23,860 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure _drop_2 given in one single declaration
[2023-01-16 04:04:23,860 INFO  L130     BoogieDeclarations]: Found specification of procedure _drop_2
[2023-01-16 04:04:23,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure _drop_2
[2023-01-16 04:04:23,860 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure _parser_ParserImpl given in one single declaration
[2023-01-16 04:04:23,860 INFO  L130     BoogieDeclarations]: Found specification of procedure _parser_ParserImpl
[2023-01-16 04:04:23,860 INFO  L138     BoogieDeclarations]: Found implementation of procedure _parser_ParserImpl
[2023-01-16 04:04:23,861 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure accept given in one single declaration
[2023-01-16 04:04:23,861 INFO  L130     BoogieDeclarations]: Found specification of procedure accept
[2023-01-16 04:04:23,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure accept
[2023-01-16 04:04:23,861 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure bgp_tag_0.apply given in one single declaration
[2023-01-16 04:04:23,861 INFO  L130     BoogieDeclarations]: Found specification of procedure bgp_tag_0.apply
[2023-01-16 04:04:23,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure bgp_tag_0.apply
[2023-01-16 04:04:23,861 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure computeChecksum given in one single declaration
[2023-01-16 04:04:23,861 INFO  L130     BoogieDeclarations]: Found specification of procedure computeChecksum
[2023-01-16 04:04:23,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure computeChecksum
[2023-01-16 04:04:23,865 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure egress given in one single declaration
[2023-01-16 04:04:23,865 INFO  L130     BoogieDeclarations]: Found specification of procedure egress
[2023-01-16 04:04:23,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure egress
[2023-01-16 04:04:23,865 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_correctness_0.write given in one single declaration
[2023-01-16 04:04:23,865 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_correctness_0.write
[2023-01-16 04:04:23,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_correctness_0.write
[2023-01-16 04:04:23,865 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_fwloops_0.write given in one single declaration
[2023-01-16 04:04:23,865 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_fwloops_0.write
[2023-01-16 04:04:23,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_fwloops_0.write
[2023-01-16 04:04:23,865 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_key_0.write given in one single declaration
[2023-01-16 04:04:23,865 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_key_0.write
[2023-01-16 04:04:23,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_key_0.write
[2023-01-16 04:04:23,866 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_last_ret_0.write given in one single declaration
[2023-01-16 04:04:23,866 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_last_ret_0.write
[2023-01-16 04:04:23,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_last_ret_0.write
[2023-01-16 04:04:23,866 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_last_ret_bin_0.write given in one single declaration
[2023-01-16 04:04:23,866 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_last_ret_bin_0.write
[2023-01-16 04:04:23,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_last_ret_bin_0.write
[2023-01-16 04:04:23,866 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_nep_0.write given in one single declaration
[2023-01-16 04:04:23,866 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_nep_0.write
[2023-01-16 04:04:23,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_nep_0.write
[2023-01-16 04:04:23,866 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure flowselector_ts_0.write given in one single declaration
[2023-01-16 04:04:23,866 INFO  L130     BoogieDeclarations]: Found specification of procedure flowselector_ts_0.write
[2023-01-16 04:04:23,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure flowselector_ts_0.write
[2023-01-16 04:04:23,866 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure havocProcedure given in one single declaration
[2023-01-16 04:04:23,867 INFO  L130     BoogieDeclarations]: Found specification of procedure havocProcedure
[2023-01-16 04:04:23,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure havocProcedure
[2023-01-16 04:04:23,867 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure ingress given in one single declaration
[2023-01-16 04:04:23,867 INFO  L130     BoogieDeclarations]: Found specification of procedure ingress
[2023-01-16 04:04:23,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure ingress
[2023-01-16 04:04:23,867 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure main given in one single declaration
[2023-01-16 04:04:23,867 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2023-01-16 04:04:23,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2023-01-16 04:04:23,867 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure mainProcedure given in one single declaration
[2023-01-16 04:04:23,867 INFO  L130     BoogieDeclarations]: Found specification of procedure mainProcedure
[2023-01-16 04:04:23,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure mainProcedure
[2023-01-16 04:04:23,868 INFO  L130     BoogieDeclarations]: Found specification of procedure mark_to_drop
[2023-01-16 04:04:23,868 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure meta_fwtable_0.apply given in one single declaration
[2023-01-16 04:04:23,868 INFO  L130     BoogieDeclarations]: Found specification of procedure meta_fwtable_0.apply
[2023-01-16 04:04:23,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure meta_fwtable_0.apply
[2023-01-16 04:04:23,868 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure nbflows_progressing_2.write given in one single declaration
[2023-01-16 04:04:23,868 INFO  L130     BoogieDeclarations]: Found specification of procedure nbflows_progressing_2.write
[2023-01-16 04:04:23,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure nbflows_progressing_2.write
[2023-01-16 04:04:23,868 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure nbflows_progressing_3.write given in one single declaration
[2023-01-16 04:04:23,868 INFO  L130     BoogieDeclarations]: Found specification of procedure nbflows_progressing_3.write
[2023-01-16 04:04:23,868 INFO  L138     BoogieDeclarations]: Found implementation of procedure nbflows_progressing_3.write
[2023-01-16 04:04:23,869 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure next_hops_port_0.write given in one single declaration
[2023-01-16 04:04:23,869 INFO  L130     BoogieDeclarations]: Found specification of procedure next_hops_port_0.write
[2023-01-16 04:04:23,869 INFO  L138     BoogieDeclarations]: Found implementation of procedure next_hops_port_0.write
[2023-01-16 04:04:23,869 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure nh_avaibility_1.write given in one single declaration
[2023-01-16 04:04:23,869 INFO  L130     BoogieDeclarations]: Found specification of procedure nh_avaibility_1.write
[2023-01-16 04:04:23,869 INFO  L138     BoogieDeclarations]: Found implementation of procedure nh_avaibility_1.write
[2023-01-16 04:04:23,869 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure nh_avaibility_2.write given in one single declaration
[2023-01-16 04:04:23,869 INFO  L130     BoogieDeclarations]: Found specification of procedure nh_avaibility_2.write
[2023-01-16 04:04:23,869 INFO  L138     BoogieDeclarations]: Found implementation of procedure nh_avaibility_2.write
[2023-01-16 04:04:23,870 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure nh_avaibility_3.write given in one single declaration
[2023-01-16 04:04:23,870 INFO  L130     BoogieDeclarations]: Found specification of procedure nh_avaibility_3.write
[2023-01-16 04:04:23,870 INFO  L138     BoogieDeclarations]: Found implementation of procedure nh_avaibility_3.write
[2023-01-16 04:04:23,870 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_ipv4 given in one single declaration
[2023-01-16 04:04:23,870 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_ipv4
[2023-01-16 04:04:23,870 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_ipv4
[2023-01-16 04:04:23,870 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_tcp given in one single declaration
[2023-01-16 04:04:23,870 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_tcp
[2023-01-16 04:04:23,870 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_tcp
[2023-01-16 04:04:23,870 INFO  L130     BoogieDeclarations]: Found specification of procedure reject
[2023-01-16 04:04:23,871 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure rerouting_ts_0.write given in one single declaration
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure rerouting_ts_0.write
[2023-01-16 04:04:23,871 INFO  L138     BoogieDeclarations]: Found implementation of procedure rerouting_ts_0.write
[2023-01-16 04:04:23,871 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure send_0.apply given in one single declaration
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure send_0.apply
[2023-01-16 04:04:23,871 INFO  L138     BoogieDeclarations]: Found implementation of procedure send_0.apply
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure setInvalid
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure setValid
[2023-01-16 04:04:23,871 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure set_bgp_tag given in one single declaration
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure set_bgp_tag
[2023-01-16 04:04:23,871 INFO  L138     BoogieDeclarations]: Found implementation of procedure set_bgp_tag
[2023-01-16 04:04:23,871 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure set_meta given in one single declaration
[2023-01-16 04:04:23,871 INFO  L130     BoogieDeclarations]: Found specification of procedure set_meta
[2023-01-16 04:04:23,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure set_meta
[2023-01-16 04:04:23,872 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure set_nh given in one single declaration
[2023-01-16 04:04:23,872 INFO  L130     BoogieDeclarations]: Found specification of procedure set_nh
[2023-01-16 04:04:23,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure set_nh
[2023-01-16 04:04:23,872 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure start given in one single declaration
[2023-01-16 04:04:23,872 INFO  L130     BoogieDeclarations]: Found specification of procedure start
[2023-01-16 04:04:23,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure start
[2023-01-16 04:04:23,872 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure sw_0.write given in one single declaration
[2023-01-16 04:04:23,872 INFO  L130     BoogieDeclarations]: Found specification of procedure sw_0.write
[2023-01-16 04:04:23,872 INFO  L138     BoogieDeclarations]: Found implementation of procedure sw_0.write
[2023-01-16 04:04:23,872 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure sw_index_0.write given in one single declaration
[2023-01-16 04:04:23,872 INFO  L130     BoogieDeclarations]: Found specification of procedure sw_index_0.write
[2023-01-16 04:04:23,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure sw_index_0.write
[2023-01-16 04:04:23,873 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure sw_sum_0.write given in one single declaration
[2023-01-16 04:04:23,873 INFO  L130     BoogieDeclarations]: Found specification of procedure sw_sum_0.write
[2023-01-16 04:04:23,873 INFO  L138     BoogieDeclarations]: Found implementation of procedure sw_sum_0.write
[2023-01-16 04:04:23,873 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure sw_time_0.write given in one single declaration
[2023-01-16 04:04:23,874 INFO  L130     BoogieDeclarations]: Found specification of procedure sw_time_0.write
[2023-01-16 04:04:23,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure sw_time_0.write
[2023-01-16 04:04:23,874 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure switch_ip_0.write given in one single declaration
[2023-01-16 04:04:23,874 INFO  L130     BoogieDeclarations]: Found specification of procedure switch_ip_0.write
[2023-01-16 04:04:23,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure switch_ip_0.write
[2023-01-16 04:04:23,874 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure threshold_registers_0.write given in one single declaration
[2023-01-16 04:04:23,874 INFO  L130     BoogieDeclarations]: Found specification of procedure threshold_registers_0.write
[2023-01-16 04:04:23,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure threshold_registers_0.write
[2023-01-16 04:04:23,874 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure timestamp_reference_0.write given in one single declaration
[2023-01-16 04:04:23,874 INFO  L130     BoogieDeclarations]: Found specification of procedure timestamp_reference_0.write
[2023-01-16 04:04:23,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure timestamp_reference_0.write
[2023-01-16 04:04:23,875 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure verifyChecksum given in one single declaration
[2023-01-16 04:04:23,875 INFO  L130     BoogieDeclarations]: Found specification of procedure verifyChecksum
[2023-01-16 04:04:23,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure verifyChecksum
[2023-01-16 04:04:23,964 INFO  L234             CfgBuilder]: Building ICFG
[2023-01-16 04:04:23,967 INFO  L260             CfgBuilder]: Building CFG for each procedure with an implementation
[2023-01-16 04:04:24,715 INFO  L275             CfgBuilder]: Performing block encoding
[2023-01-16 04:04:24,729 INFO  L294             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2023-01-16 04:04:24,729 INFO  L299             CfgBuilder]: Removed 0 assume(true) statements.
[2023-01-16 04:04:24,732 INFO  L202        PluginConnector]: Adding new model p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 16.01 04:04:24 BoogieIcfgContainer
[2023-01-16 04:04:24,733 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 16.01 04:04:23" (2/2) ...
[2023-01-16 04:04:24,733 INFO  L82     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2023-01-16 04:04:24,733 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@212f631a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 16.01 04:04:24, skipping insertion in model container
[2023-01-16 04:04:24,733 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2023-01-16 04:04:24,734 INFO  L113        PluginConnector]: ------------------------ThufvLTL2Aut----------------------------
[2023-01-16 04:04:24,734 INFO  L271        PluginConnector]: Initializing ThufvLTL2Aut...
[2023-01-16 04:04:24,734 INFO  L275        PluginConnector]: ThufvLTL2Aut initialized
[2023-01-16 04:04:24,736 INFO  L185        PluginConnector]: Executing the observer ThufvLTL2AutObserver from plugin ThufvLTL2Aut for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 16.01 04:04:23" (2/3) ...
[2023-01-16 04:04:24,736 INFO  L119   ThufvLTL2AutObserver]: Checking fairness + property: !(( [](AP(( ( hdr.tcp.valid==true && _p4ltl_5==true ) && _p4ltl_4==true ))) )) || ( ( [](( AP(( _p4ltl_2==true && _p4ltl_3==true )) ==> ( X(AP(( ( _p4ltl_2==true && _p4ltl_1==true ) ==> _p4ltl_0==true ))) ) )) ))
[2023-01-16 04:04:24,748 INFO  L189       MonitoredProcess]: No working directory specified, using /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba
[2023-01-16 04:04:24,769 INFO  L229       MonitoredProcess]: Starting monitored process 1 with /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba -f ! ( ! ( ( [] ( a ) ) ) || ( ( [] ( ( b -> ( X ( c ) ) ) ) ) ) )  (exit command is null, workingDir is null)
[2023-01-16 04:04:24,773 INFO  L552       MonitoredProcess]: [MP /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba -f ! ( ! ( ( [] ( a ) ) ) || ( ( [] ( ( b -> ( X ( c ) ) ) ) ) ) )  (1)] Ended with exit code 0
[2023-01-16 04:04:24,806 INFO  L133   ThufvLTL2AutObserver]: LTL Property is: !(( [](((hdr.tcp.valid == true && _p4ltl_5 == true) && _p4ltl_4 == true)) )) || ( ( [](( (_p4ltl_2 == true && _p4ltl_3 == true) ==> ( X((_p4ltl_2 == true && _p4ltl_1 == true ==> _p4ltl_0 == true)) ) )) ))
[2023-01-16 04:04:24,807 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 16.01 04:04:24 NWAContainer
[2023-01-16 04:04:24,807 INFO  L132        PluginConnector]: ------------------------ END ThufvLTL2Aut----------------------------
[2023-01-16 04:04:24,808 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2023-01-16 04:04:24,808 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2023-01-16 04:04:24,809 INFO  L275        PluginConnector]: BÃ¼chi Program Product initialized
[2023-01-16 04:04:24,810 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 16.01 04:04:24" (3/4) ...
[2023-01-16 04:04:24,811 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@525f9bf4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 16.01 04:04:24, skipping insertion in model container
[2023-01-16 04:04:24,811 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 16.01 04:04:24" (4/4) ...
[2023-01-16 04:04:24,813 INFO  L104   BuchiProductObserver]: Initial property automaton 3 locations, 4 edges
[2023-01-16 04:04:24,815 INFO  L110   BuchiProductObserver]: Initial RCFG 522 locations, 703 edges
[2023-01-16 04:04:24,816 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2023-01-16 04:04:24,824 INFO  L170       ProductGenerator]: ----- Annotating TransactionInfo ...
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: nh_avaibility_1.write
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_nep_0.write
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_nep_0.write
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_nep_0.write
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: mainProcedure
[2023-01-16 04:04:24,826 INFO  L189       ProductGenerator]: +++++ Call method name: NoAction_0
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: nbflows_progressing_2.write
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: nbflows_progressing_2.write
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_key_0.write
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_key_0.write
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: main
[2023-01-16 04:04:24,827 INFO  L192       ProductGenerator]: ----- Handling transaction edge from mainEXIT to L1109-1
[2023-01-16 04:04:24,827 INFO  L189       ProductGenerator]: +++++ Call method name: nh_avaibility_3.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: nh_avaibility_3.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: set_bgp_tag
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: _drop_2
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: egress
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,828 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: computeChecksum
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_fwloops_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_fwloops_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_fwloops_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_fwloops_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: parse_tcp
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_index_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: sw_index_0.write
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: set_meta
[2023-01-16 04:04:24,829 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_last_ret_bin_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: nbflows_progressing_3.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: nbflows_progressing_3.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: _drop
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: start
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: timestamp_reference_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: bgp_tag_0.apply
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: meta_fwtable_0.apply
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: accept
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: send_0.apply
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: sw_sum_0.write
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: ingress
[2023-01-16 04:04:24,830 INFO  L189       ProductGenerator]: +++++ Call method name: rerouting_ts_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: _parser_ParserImpl
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_correctness_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_correctness_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_correctness_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: set_nh
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: parse_ipv4
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_last_ret_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_last_ret_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_last_ret_0.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: nh_avaibility_2.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: nh_avaibility_2.write
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: verifyChecksum
[2023-01-16 04:04:24,831 INFO  L189       ProductGenerator]: +++++ Call method name: sw_time_0.write
[2023-01-16 04:04:24,832 INFO  L189       ProductGenerator]: +++++ Call method name: sw_time_0.write
[2023-01-16 04:04:24,832 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_ts_0.write
[2023-01-16 04:04:24,832 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_ts_0.write
[2023-01-16 04:04:24,832 INFO  L189       ProductGenerator]: +++++ Call method name: flowselector_ts_0.write
[2023-01-16 04:04:24,832 INFO  L189       ProductGenerator]: +++++ Call method name: havocProcedure
[2023-01-16 04:04:24,836 INFO  L244       ProductGenerator]: Creating Product States...
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L729
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: next_hops_port_0.writeFINAL
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L577
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L528
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L841
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: havocProcedureEXIT
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: flowselector_fwloops_0.writeENTRY
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L580
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L492
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: sw_sum_0.writeFINAL
[2023-01-16 04:04:24,837 INFO  L277       ProductGenerator]: ==== location: L501
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L784-2
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L596
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L1049
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L911
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: rerouting_ts_0.writeFINAL
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L770
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L511
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: egressFINAL
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L825
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L869-1
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L506
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L809
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: L649
[2023-01-16 04:04:24,838 INFO  L277       ProductGenerator]: ==== location: _drop_2ENTRY
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L797-2
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L557
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: mainProcedureEXIT
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L928
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: computeChecksumEXIT
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L507
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L662
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L725
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L604
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L1095-1
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L936
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L715-1
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L886
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L697
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L646-1
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: L940
[2023-01-16 04:04:24,839 INFO  L277       ProductGenerator]: ==== location: send_0.applyEXIT
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L504
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L1092
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L1022
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L714
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L832
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L689
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L520
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L518
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L621
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: flowselector_last_ret_bin_0.writeEXIT
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L845
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: nh_avaibility_2.writeFINAL
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L570
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L509
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L750
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: NoAction_0FINAL
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: nh_avaibility_2.writeENTRY
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: L1047
[2023-01-16 04:04:24,840 INFO  L277       ProductGenerator]: ==== location: rerouting_ts_0.writeEXIT
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L1229
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L525
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L845-1
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L522
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L1103
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: flowselector_ts_0.writeENTRY
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L765-1
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L894-1
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L830
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L873
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: meta_fwtable_0.applyENTRY
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: L672
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: sw_time_0.writeFINAL
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: next_hops_port_0.writeEXIT
[2023-01-16 04:04:24,841 INFO  L277       ProductGenerator]: ==== location: nbflows_progressing_2.writeEXIT
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: flowselector_correctness_0.writeENTRY
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L717
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L687
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L701
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: havocProcedureFINAL
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L1198
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L776
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: sw_time_0.writeEXIT
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L743
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: bgp_tag_0.applyENTRY
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: startENTRY
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: _dropFINAL
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: L979
[2023-01-16 04:04:24,842 INFO  L277       ProductGenerator]: ==== location: mainEXIT
[2023-01-16 04:04:24,842 INFO  L310       ProductGenerator]: ####final State Node: L1109-1
[2023-01-16 04:04:24,842 INFO  L310       ProductGenerator]: ####final State Node: L1109
[2023-01-16 04:04:24,845 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L1109_accept_S3
[2023-01-16 04:04:24,846 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L1109_accept_S2
[2023-01-16 04:04:24,846 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L1109-1_accept_S3
[2023-01-16 04:04:24,847 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L1109-1_accept_S2
[2023-01-16 04:04:24,849 INFO  L479       ProductGenerator]: L729_accept_S3 --> L729_accept_S3
[2023-01-16 04:04:24,849 INFO  L479       ProductGenerator]: L729_T0_init --> L729_T0_init
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L729_accept_S2 --> L729_accept_S2
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: next_hops_port_0.writeFINAL_accept_S3 --> next_hops_port_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: next_hops_port_0.writeFINAL_T0_init --> next_hops_port_0.writeFINAL_T0_init
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: next_hops_port_0.writeFINAL_accept_S2 --> next_hops_port_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L577_accept_S3 --> L577_accept_S3
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L577_T0_init --> L577_T0_init
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L577_accept_S2 --> L577_accept_S2
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L528_accept_S3 --> L528_accept_S3
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L528_T0_init --> L528_T0_init
[2023-01-16 04:04:24,850 INFO  L479       ProductGenerator]: L528_accept_S2 --> L528_accept_S2
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L841_accept_S3 --> L841_accept_S3
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L841_T0_init --> L841_T0_init
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L841_accept_S2 --> L841_accept_S2
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeENTRY_accept_S3 --> flowselector_fwloops_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeENTRY_T0_init --> flowselector_fwloops_0.writeENTRY_T0_init
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeENTRY_accept_S2 --> flowselector_fwloops_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L580_accept_S3 --> L580_accept_S3
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L580_T0_init --> L580_T0_init
[2023-01-16 04:04:24,851 INFO  L479       ProductGenerator]: L580_accept_S2 --> L580_accept_S2
[2023-01-16 04:04:24,852 INFO  L479       ProductGenerator]: L492_accept_S3 --> L492_accept_S3
[2023-01-16 04:04:24,852 INFO  L479       ProductGenerator]: L492_T0_init --> L492_T0_init
[2023-01-16 04:04:24,852 INFO  L479       ProductGenerator]: L492_accept_S2 --> L492_accept_S2
[2023-01-16 04:04:24,852 INFO  L479       ProductGenerator]: sw_sum_0.writeFINAL_accept_S3 --> sw_sum_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: sw_sum_0.writeFINAL_T0_init --> sw_sum_0.writeFINAL_T0_init
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: sw_sum_0.writeFINAL_accept_S2 --> sw_sum_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L501_accept_S3 --> L501_accept_S3
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L501_T0_init --> L501_T0_init
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L501_accept_S2 --> L501_accept_S2
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L784-2_accept_S3 --> L784-2_accept_S3
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L784-2_T0_init --> L784-2_T0_init
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L784-2_accept_S2 --> L784-2_accept_S2
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L596_accept_S3 --> L596_accept_S3
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L596_T0_init --> L596_T0_init
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L596_accept_S2 --> L596_accept_S2
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L1049_accept_S3 --> L1049_accept_S3
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L1049_T0_init --> L1049_T0_init
[2023-01-16 04:04:24,853 INFO  L479       ProductGenerator]: L1049_accept_S2 --> L1049_accept_S2
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L911_accept_S3 --> L911_accept_S3
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L911_T0_init --> L911_T0_init
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L911_accept_S2 --> L911_accept_S2
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: rerouting_ts_0.writeFINAL_accept_S3 --> rerouting_ts_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: rerouting_ts_0.writeFINAL_T0_init --> rerouting_ts_0.writeFINAL_T0_init
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: rerouting_ts_0.writeFINAL_accept_S2 --> rerouting_ts_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L770_accept_S3 --> L770_accept_S3
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L770_T0_init --> L770_T0_init
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L770_accept_S2 --> L770_accept_S2
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L511_accept_S3 --> L511_accept_S3
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L511_T0_init --> L511_T0_init
[2023-01-16 04:04:24,854 INFO  L479       ProductGenerator]: L511_accept_S2 --> L511_accept_S2
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: egressFINAL_accept_S3 --> egressFINAL_accept_S3
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: egressFINAL_T0_init --> egressFINAL_T0_init
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: egressFINAL_accept_S2 --> egressFINAL_accept_S2
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L825_accept_S3 --> L825_accept_S3
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L825_T0_init --> L825_T0_init
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L825_accept_S2 --> L825_accept_S2
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L869-1_accept_S3 --> L869-1_accept_S3
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L869-1_T0_init --> L869-1_T0_init
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L869-1_accept_S2 --> L869-1_accept_S2
[2023-01-16 04:04:24,855 INFO  L479       ProductGenerator]: L506_accept_S3 --> L506_accept_S3
[2023-01-16 04:04:24,856 INFO  L479       ProductGenerator]: L506_T0_init --> L506_T0_init
[2023-01-16 04:04:24,856 INFO  L479       ProductGenerator]: L506_accept_S2 --> L506_accept_S2
[2023-01-16 04:04:24,856 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, fc_cur_sw_sum);
[2023-01-16 04:04:24,856 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, fc_cur_sw_sum);
[2023-01-16 04:04:24,857 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, fc_cur_sw_sum);
[2023-01-16 04:04:24,857 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.ipv4_icmp); srcloc: L649
[2023-01-16 04:04:24,880 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.ipv4_icmp); srcloc: L649
[2023-01-16 04:04:24,882 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.ipv4_icmp); srcloc: L649
[2023-01-16 04:04:24,883 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _drop_2ENTRY
[2023-01-16 04:04:24,887 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _drop_2ENTRY
[2023-01-16 04:04:24,890 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _drop_2ENTRY
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L797-2_accept_S3 --> L797-2_accept_S3
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L797-2_T0_init --> L797-2_T0_init
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L797-2_accept_S2 --> L797-2_accept_S2
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L557_accept_S3 --> L557_accept_S3
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L557_T0_init --> L557_T0_init
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: L557_accept_S2 --> L557_accept_S2
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: mainProcedureEXIT_accept_S3 --> mainProcedureEXIT_accept_S3
[2023-01-16 04:04:24,900 INFO  L479       ProductGenerator]: mainProcedureEXIT_T0_init --> mainProcedureEXIT_T0_init
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: mainProcedureEXIT_accept_S2 --> mainProcedureEXIT_accept_S2
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L928_accept_S3 --> L928_accept_S3
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L928_T0_init --> L928_T0_init
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L928_accept_S2 --> L928_accept_S2
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L507_accept_S3 --> L507_accept_S3
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L507_T0_init --> L507_T0_init
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L507_accept_S2 --> L507_accept_S2
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L662_accept_S3 --> L662_accept_S3
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L662_T0_init --> L662_T0_init
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L662_accept_S2 --> L662_accept_S2
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L725_accept_S3 --> L725_accept_S3
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L725_T0_init --> L725_T0_init
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L725_accept_S2 --> L725_accept_S2
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L604_accept_S3 --> L604_accept_S3
[2023-01-16 04:04:24,901 INFO  L479       ProductGenerator]: L604_T0_init --> L604_T0_init
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L604_accept_S2 --> L604_accept_S2
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L1095-1_accept_S3 --> L1095-1_accept_S3
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L1095-1_T0_init --> L1095-1_T0_init
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L1095-1_accept_S2 --> L1095-1_accept_S2
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L936_accept_S3 --> L936_accept_S3
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L936_T0_init --> L936_T0_init
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L936_accept_S2 --> L936_accept_S2
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L715-1_accept_S3 --> L715-1_accept_S3
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L715-1_T0_init --> L715-1_T0_init
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L715-1_accept_S2 --> L715-1_accept_S2
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L886_accept_S3 --> L886_accept_S3
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L886_T0_init --> L886_T0_init
[2023-01-16 04:04:24,902 INFO  L479       ProductGenerator]: L886_accept_S2 --> L886_accept_S2
[2023-01-16 04:04:24,902 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 5 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 5 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 5 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call meta_fwtable_0.apply();
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call meta_fwtable_0.apply();
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call meta_fwtable_0.apply();
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L940_accept_S3 --> L940_accept_S3
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L940_T0_init --> L940_T0_init
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L940_accept_S2 --> L940_accept_S2
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L504_accept_S3 --> L504_accept_S3
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L504_T0_init --> L504_T0_init
[2023-01-16 04:04:24,903 INFO  L479       ProductGenerator]: L504_accept_S2 --> L504_accept_S2
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-01-16 04:04:24,903 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L1022_accept_S3 --> L1022_accept_S3
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L1022_T0_init --> L1022_T0_init
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L1022_accept_S2 --> L1022_accept_S2
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L714_accept_S3 --> L714_accept_S3
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L714_T0_init --> L714_T0_init
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L714_accept_S2 --> L714_accept_S2
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_accept_S3 --> L832_accept_S3
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_T0_init --> L832_T0_init
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_accept_S2 --> L832_accept_S2
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_accept_S3 --> L832_accept_S3
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_T0_init --> L832_T0_init
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L832_accept_S2 --> L832_accept_S2
[2023-01-16 04:04:24,904 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 1 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,904 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 1 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,904 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 1 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L520_accept_S3 --> L520_accept_S3
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L520_T0_init --> L520_T0_init
[2023-01-16 04:04:24,904 INFO  L479       ProductGenerator]: L520_accept_S2 --> L520_accept_S2
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L518_accept_S3 --> L518_accept_S3
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L518_T0_init --> L518_T0_init
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L518_accept_S2 --> L518_accept_S2
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L621_accept_S3 --> L621_accept_S3
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L621_T0_init --> L621_T0_init
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L621_accept_S2 --> L621_accept_S2
[2023-01-16 04:04:24,905 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,905 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,905 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: nh_avaibility_2.writeFINAL_accept_S3 --> nh_avaibility_2.writeFINAL_accept_S3
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: nh_avaibility_2.writeFINAL_T0_init --> nh_avaibility_2.writeFINAL_T0_init
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: nh_avaibility_2.writeFINAL_accept_S2 --> nh_avaibility_2.writeFINAL_accept_S2
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L570_accept_S3 --> L570_accept_S3
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L570_T0_init --> L570_T0_init
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L570_accept_S2 --> L570_accept_S2
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L509_accept_S3 --> L509_accept_S3
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L509_T0_init --> L509_T0_init
[2023-01-16 04:04:24,905 INFO  L479       ProductGenerator]: L509_accept_S2 --> L509_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L750_accept_S3 --> L750_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L750_T0_init --> L750_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L750_accept_S2 --> L750_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: NoAction_0FINAL_accept_S3 --> NoAction_0FINAL_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: NoAction_0FINAL_T0_init --> NoAction_0FINAL_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: NoAction_0FINAL_accept_S2 --> NoAction_0FINAL_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: nh_avaibility_2.writeENTRY_accept_S3 --> nh_avaibility_2.writeENTRY_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: nh_avaibility_2.writeENTRY_T0_init --> nh_avaibility_2.writeENTRY_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: nh_avaibility_2.writeENTRY_accept_S2 --> nh_avaibility_2.writeENTRY_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_accept_S3 --> L1047_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_T0_init --> L1047_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_accept_S2 --> L1047_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_accept_S3 --> L1047_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_T0_init --> L1047_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1047_accept_S2 --> L1047_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1229_accept_S3 --> L1229_accept_S3
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1229_T0_init --> L1229_T0_init
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L1229_accept_S2 --> L1229_accept_S2
[2023-01-16 04:04:24,906 INFO  L479       ProductGenerator]: L525_accept_S3 --> L525_accept_S3
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L525_T0_init --> L525_T0_init
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L525_accept_S2 --> L525_accept_S2
[2023-01-16 04:04:24,907 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,907 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,907 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L522_accept_S3 --> L522_accept_S3
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L522_T0_init --> L522_T0_init
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L522_accept_S2 --> L522_accept_S2
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L1103_accept_S3 --> L1103_accept_S3
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L1103_T0_init --> L1103_T0_init
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L1103_accept_S2 --> L1103_accept_S2
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: flowselector_ts_0.writeENTRY_accept_S3 --> flowselector_ts_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: flowselector_ts_0.writeENTRY_T0_init --> flowselector_ts_0.writeENTRY_T0_init
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: flowselector_ts_0.writeENTRY_accept_S2 --> flowselector_ts_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,907 INFO  L479       ProductGenerator]: L765-1_accept_S3 --> L765-1_accept_S3
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L765-1_T0_init --> L765-1_T0_init
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L765-1_accept_S2 --> L765-1_accept_S2
[2023-01-16 04:04:24,908 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_bin_0.write(fc_flowselector_index, fc_index_tmp);
[2023-01-16 04:04:24,908 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_bin_0.write(fc_flowselector_index, fc_index_tmp);
[2023-01-16 04:04:24,908 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_bin_0.write(fc_flowselector_index, fc_index_tmp);
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_accept_S3 --> L830_accept_S3
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_T0_init --> L830_T0_init
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_accept_S2 --> L830_accept_S2
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_accept_S3 --> L830_accept_S3
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_T0_init --> L830_T0_init
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L830_accept_S2 --> L830_accept_S2
[2023-01-16 04:04:24,908 INFO  L479       ProductGenerator]: L873_accept_S3 --> L873_accept_S3
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L873_T0_init --> L873_T0_init
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L873_accept_S2 --> L873_accept_S2
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_accept_S3 --> meta_fwtable_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_T0_init --> meta_fwtable_0.applyENTRY_T0_init
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_accept_S2 --> meta_fwtable_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_accept_S3 --> meta_fwtable_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_T0_init --> meta_fwtable_0.applyENTRY_T0_init
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: meta_fwtable_0.applyENTRY_accept_S2 --> meta_fwtable_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L672_accept_S3 --> L672_accept_S3
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L672_T0_init --> L672_T0_init
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L672_accept_S2 --> L672_accept_S2
[2023-01-16 04:04:24,909 INFO  L479       ProductGenerator]: L672_accept_S3 --> L672_accept_S3
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: L672_T0_init --> L672_T0_init
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: L672_accept_S2 --> L672_accept_S2
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: sw_time_0.writeFINAL_accept_S3 --> sw_time_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: sw_time_0.writeFINAL_T0_init --> sw_time_0.writeFINAL_T0_init
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: sw_time_0.writeFINAL_accept_S2 --> sw_time_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: next_hops_port_0.writeEXIT_accept_S3 --> next_hops_port_0.writeEXIT_accept_S3
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: next_hops_port_0.writeEXIT_T0_init --> next_hops_port_0.writeEXIT_T0_init
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: next_hops_port_0.writeEXIT_accept_S2 --> next_hops_port_0.writeEXIT_accept_S2
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeENTRY_accept_S3 --> flowselector_correctness_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeENTRY_T0_init --> flowselector_correctness_0.writeENTRY_T0_init
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeENTRY_accept_S2 --> flowselector_correctness_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: L717_accept_S3 --> L717_accept_S3
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: L717_T0_init --> L717_T0_init
[2023-01-16 04:04:24,910 INFO  L479       ProductGenerator]: L717_accept_S2 --> L717_accept_S2
[2023-01-16 04:04:24,910 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write(meta.id % 4294967296 * (10 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,910 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write(meta.id % 4294967296 * (10 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,911 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write(meta.id % 4294967296 * (10 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,911 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 7 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,911 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 7 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,911 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 7 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: havocProcedureFINAL_accept_S3 --> havocProcedureFINAL_accept_S3
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: havocProcedureFINAL_T0_init --> havocProcedureFINAL_T0_init
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: havocProcedureFINAL_accept_S2 --> havocProcedureFINAL_accept_S2
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_accept_S3 --> L1198_accept_S3
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_T0_init --> L1198_T0_init
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_accept_S2 --> L1198_accept_S2
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_accept_S3 --> L1198_accept_S3
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_T0_init --> L1198_T0_init
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L1198_accept_S2 --> L1198_accept_S2
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L776_accept_S3 --> L776_accept_S3
[2023-01-16 04:04:24,911 INFO  L479       ProductGenerator]: L776_T0_init --> L776_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L776_accept_S2 --> L776_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L743_accept_S3 --> L743_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L743_T0_init --> L743_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L743_accept_S2 --> L743_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_accept_S3 --> bgp_tag_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_T0_init --> bgp_tag_0.applyENTRY_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_accept_S2 --> bgp_tag_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_accept_S3 --> bgp_tag_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_T0_init --> bgp_tag_0.applyENTRY_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: bgp_tag_0.applyENTRY_accept_S2 --> bgp_tag_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: startENTRY_accept_S3 --> startENTRY_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: startENTRY_T0_init --> startENTRY_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: startENTRY_accept_S2 --> startENTRY_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: _dropFINAL_accept_S3 --> _dropFINAL_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: _dropFINAL_T0_init --> _dropFINAL_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: _dropFINAL_accept_S2 --> _dropFINAL_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L979_accept_S3 --> L979_accept_S3
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L979_T0_init --> L979_T0_init
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L979_accept_S2 --> L979_accept_S2
[2023-01-16 04:04:24,912 INFO  L479       ProductGenerator]: L1083_accept_S3 --> L1083_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L1083_T0_init --> L1083_T0_init
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L1083_accept_S2 --> L1083_accept_S2
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_accept_S3 --> L991_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_T0_init --> L991_T0_init
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_accept_S2 --> L991_accept_S2
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_accept_S3 --> L991_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_T0_init --> L991_T0_init
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L991_accept_S2 --> L991_accept_S2
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L901_accept_S3 --> L901_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L901_T0_init --> L901_T0_init
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L901_accept_S2 --> L901_accept_S2
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L782_accept_S3 --> L782_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L782_T0_init --> L782_T0_init
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L782_accept_S2 --> L782_accept_S2
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L586_accept_S3 --> L586_accept_S3
[2023-01-16 04:04:24,913 INFO  L479       ProductGenerator]: L586_T0_init --> L586_T0_init
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L586_accept_S2 --> L586_accept_S2
[2023-01-16 04:04:24,914 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,914 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,914 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: acceptFINAL_accept_S3 --> acceptFINAL_accept_S3
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: acceptFINAL_T0_init --> acceptFINAL_T0_init
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: acceptFINAL_accept_S2 --> acceptFINAL_accept_S2
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L523_accept_S3 --> L523_accept_S3
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L523_T0_init --> L523_T0_init
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L523_accept_S2 --> L523_accept_S2
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L724_accept_S3 --> L724_accept_S3
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L724_T0_init --> L724_T0_init
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L724_accept_S2 --> L724_accept_S2
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L724_accept_S3 --> L724_accept_S3
[2023-01-16 04:04:24,914 INFO  L479       ProductGenerator]: L724_T0_init --> L724_T0_init
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L724_accept_S2 --> L724_accept_S2
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L513_accept_S3 --> L513_accept_S3
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L513_T0_init --> L513_T0_init
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L513_accept_S2 --> L513_accept_S2
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L1019_accept_S3 --> L1019_accept_S3
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L1019_T0_init --> L1019_T0_init
[2023-01-16 04:04:24,915 INFO  L479       ProductGenerator]: L1019_accept_S2 --> L1019_accept_S2
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-01-16 04:04:24,915 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L834_accept_S3 --> L834_accept_S3
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L834_T0_init --> L834_T0_init
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L834_accept_S2 --> L834_accept_S2
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: sw_index_0.writeFINAL_accept_S3 --> sw_index_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: sw_index_0.writeFINAL_T0_init --> sw_index_0.writeFINAL_T0_init
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: sw_index_0.writeFINAL_accept_S2 --> sw_index_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,916 INFO  L483       ProductGenerator]: Handling product edge call: call set_bgp_tag(bgp_tag_0.set_bgp_tag.neighbor_bgp_type);
[2023-01-16 04:04:24,916 INFO  L483       ProductGenerator]: Handling product edge call: call set_bgp_tag(bgp_tag_0.set_bgp_tag.neighbor_bgp_type);
[2023-01-16 04:04:24,916 INFO  L483       ProductGenerator]: Handling product edge call: call set_bgp_tag(bgp_tag_0.set_bgp_tag.neighbor_bgp_type);
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_accept_S3 --> L797_accept_S3
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_T0_init --> L797_T0_init
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_accept_S2 --> L797_accept_S2
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_accept_S3 --> L797_accept_S3
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_T0_init --> L797_T0_init
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L797_accept_S2 --> L797_accept_S2
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L658_accept_S3 --> L658_accept_S3
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L658_T0_init --> L658_T0_init
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L658_accept_S2 --> L658_accept_S2
[2023-01-16 04:04:24,916 INFO  L479       ProductGenerator]: L933_accept_S3 --> L933_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L933_T0_init --> L933_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L933_accept_S2 --> L933_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L791-1_accept_S3 --> L791-1_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L791-1_T0_init --> L791-1_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L791-1_accept_S2 --> L791-1_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_accept_S3 --> L988_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_T0_init --> L988_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_accept_S2 --> L988_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_accept_S3 --> L988_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_T0_init --> L988_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L988_accept_S2 --> L988_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_accept_S3 --> L903_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_T0_init --> L903_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_accept_S2 --> L903_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_accept_S3 --> L903_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_T0_init --> L903_T0_init
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L903_accept_S2 --> L903_accept_S2
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L1057_accept_S3 --> L1057_accept_S3
[2023-01-16 04:04:24,917 INFO  L479       ProductGenerator]: L1057_T0_init --> L1057_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L1057_accept_S2 --> L1057_accept_S2
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L1057_accept_S3 --> L1057_accept_S3
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L1057_T0_init --> L1057_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L1057_accept_S2 --> L1057_accept_S2
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: mainFINAL_accept_S3 --> mainFINAL_accept_S3
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: mainFINAL_T0_init --> mainFINAL_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: mainFINAL_accept_S2 --> mainFINAL_accept_S2
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L645_accept_S3 --> L645_accept_S3
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L645_T0_init --> L645_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L645_accept_S2 --> L645_accept_S2
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L644_accept_S3 --> L644_accept_S3
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L644_T0_init --> L644_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L644_accept_S2 --> L644_accept_S2
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L589_accept_S3 --> L589_accept_S3
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L589_T0_init --> L589_T0_init
[2023-01-16 04:04:24,918 INFO  L479       ProductGenerator]: L589_accept_S2 --> L589_accept_S2
[2023-01-16 04:04:24,919 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,919 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,919 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L664_accept_S3 --> L664_accept_S3
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L664_T0_init --> L664_T0_init
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L664_accept_S2 --> L664_accept_S2
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L619_accept_S3 --> L619_accept_S3
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L619_T0_init --> L619_T0_init
[2023-01-16 04:04:24,919 INFO  L479       ProductGenerator]: L619_accept_S2 --> L619_accept_S2
[2023-01-16 04:04:24,919 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,920 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,920 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L650_accept_S3 --> L650_accept_S3
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L650_T0_init --> L650_T0_init
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L650_accept_S2 --> L650_accept_S2
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L1230_accept_S3 --> L1230_accept_S3
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L1230_T0_init --> L1230_T0_init
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L1230_accept_S2 --> L1230_accept_S2
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L573_accept_S3 --> L573_accept_S3
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L573_T0_init --> L573_T0_init
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L573_accept_S2 --> L573_accept_S2
[2023-01-16 04:04:24,920 INFO  L479       ProductGenerator]: L657_accept_S3 --> L657_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L657_T0_init --> L657_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L657_accept_S2 --> L657_accept_S2
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L598_accept_S3 --> L598_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L598_T0_init --> L598_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L598_accept_S2 --> L598_accept_S2
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: timestamp_reference_0.writeFINAL_accept_S3 --> timestamp_reference_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: timestamp_reference_0.writeFINAL_T0_init --> timestamp_reference_0.writeFINAL_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: timestamp_reference_0.writeFINAL_accept_S2 --> timestamp_reference_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L1232_accept_S3 --> L1232_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L1232_T0_init --> L1232_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L1232_accept_S2 --> L1232_accept_S2
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L990_accept_S3 --> L990_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L990_T0_init --> L990_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L990_accept_S2 --> L990_accept_S2
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L534_accept_S3 --> L534_accept_S3
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L534_T0_init --> L534_T0_init
[2023-01-16 04:04:24,921 INFO  L479       ProductGenerator]: L534_accept_S2 --> L534_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L868_accept_S3 --> L868_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L868_T0_init --> L868_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L868_accept_S2 --> L868_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_accept_S3 --> L1094_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_T0_init --> L1094_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_accept_S2 --> L1094_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_accept_S3 --> L1094_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_T0_init --> L1094_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1094_accept_S2 --> L1094_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1198-1_accept_S3 --> L1198-1_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1198-1_T0_init --> L1198-1_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L1198-1_accept_S2 --> L1198-1_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L563_accept_S3 --> L563_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L563_T0_init --> L563_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L563_accept_S2 --> L563_accept_S2
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L503_accept_S3 --> L503_accept_S3
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L503_T0_init --> L503_T0_init
[2023-01-16 04:04:24,922 INFO  L479       ProductGenerator]: L503_accept_S2 --> L503_accept_S2
[2023-01-16 04:04:24,922 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-01-16 04:04:24,923 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-01-16 04:04:24,923 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L545_accept_S3 --> L545_accept_S3
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L545_T0_init --> L545_T0_init
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L545_accept_S2 --> L545_accept_S2
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeFINAL_accept_S3 --> flowselector_last_ret_bin_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeFINAL_T0_init --> flowselector_last_ret_bin_0.writeFINAL_T0_init
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeFINAL_accept_S2 --> flowselector_last_ret_bin_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L567_accept_S3 --> L567_accept_S3
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L567_T0_init --> L567_T0_init
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L567_accept_S2 --> L567_accept_S2
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L1169_accept_S3 --> L1169_accept_S3
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L1169_T0_init --> L1169_T0_init
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L1169_accept_S2 --> L1169_accept_S2
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L1169_accept_S3 --> L1169_accept_S3
[2023-01-16 04:04:24,923 INFO  L479       ProductGenerator]: L1169_T0_init --> L1169_T0_init
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L1169_accept_S2 --> L1169_accept_S2
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, 1);
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, 1);
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, 1);
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L602_accept_S3 --> L602_accept_S3
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L602_T0_init --> L602_T0_init
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L602_accept_S2 --> L602_accept_S2
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L566_accept_S3 --> L566_accept_S3
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L566_T0_init --> L566_T0_init
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L566_accept_S2 --> L566_accept_S2
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-01-16 04:04:24,924 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-01-16 04:04:24,924 INFO  L479       ProductGenerator]: L541_accept_S3 --> L541_accept_S3
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L541_T0_init --> L541_T0_init
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L541_accept_S2 --> L541_accept_S2
[2023-01-16 04:04:24,925 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 4 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,925 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 4 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,925 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 4 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L778-1_accept_S3 --> L778-1_accept_S3
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L778-1_T0_init --> L778-1_T0_init
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L778-1_accept_S2 --> L778-1_accept_S2
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_accept_S3 --> L745_accept_S3
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_T0_init --> L745_T0_init
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_accept_S2 --> L745_accept_S2
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_accept_S3 --> L745_accept_S3
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_T0_init --> L745_T0_init
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L745_accept_S2 --> L745_accept_S2
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L512_accept_S3 --> L512_accept_S3
[2023-01-16 04:04:24,925 INFO  L479       ProductGenerator]: L512_T0_init --> L512_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L512_accept_S2 --> L512_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L614_accept_S3 --> L614_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L614_T0_init --> L614_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L614_accept_S2 --> L614_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: sw_0.writeFINAL_accept_S3 --> sw_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: sw_0.writeFINAL_T0_init --> sw_0.writeFINAL_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: sw_0.writeFINAL_accept_S2 --> sw_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeFINAL_accept_S3 --> nbflows_progressing_3.writeFINAL_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeFINAL_T0_init --> nbflows_progressing_3.writeFINAL_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeFINAL_accept_S2 --> nbflows_progressing_3.writeFINAL_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_accept_S3 --> L899_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_T0_init --> L899_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_accept_S2 --> L899_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_accept_S3 --> L899_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_T0_init --> L899_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L899_accept_S2 --> L899_accept_S2
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L905_accept_S3 --> L905_accept_S3
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L905_T0_init --> L905_T0_init
[2023-01-16 04:04:24,926 INFO  L479       ProductGenerator]: L905_accept_S2 --> L905_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L1037_accept_S3 --> L1037_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L1037_T0_init --> L1037_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L1037_accept_S2 --> L1037_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L527_accept_S3 --> L527_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L527_T0_init --> L527_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L527_accept_S2 --> L527_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L548_accept_S3 --> L548_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L548_T0_init --> L548_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L548_accept_S2 --> L548_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L556_accept_S3 --> L556_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L556_T0_init --> L556_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L556_accept_S2 --> L556_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_accept_S3 --> L869_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_T0_init --> L869_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_accept_S2 --> L869_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_accept_S3 --> L869_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_T0_init --> L869_T0_init
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L869_accept_S2 --> L869_accept_S2
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L1240_accept_S3 --> L1240_accept_S3
[2023-01-16 04:04:24,927 INFO  L479       ProductGenerator]: L1240_T0_init --> L1240_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1240_accept_S2 --> L1240_accept_S2
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1240_accept_S3 --> L1240_accept_S3
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1240_T0_init --> L1240_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1240_accept_S2 --> L1240_accept_S2
[2023-01-16 04:04:24,928 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, fc_last_sw_time);
[2023-01-16 04:04:24,928 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, fc_last_sw_time);
[2023-01-16 04:04:24,928 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, fc_last_sw_time);
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L494_accept_S3 --> L494_accept_S3
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L494_T0_init --> L494_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L494_accept_S2 --> L494_accept_S2
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_accept_S3 --> L715_accept_S3
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_T0_init --> L715_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_accept_S2 --> L715_accept_S2
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_accept_S3 --> L715_accept_S3
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_T0_init --> L715_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L715_accept_S2 --> L715_accept_S2
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1231_accept_S3 --> L1231_accept_S3
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1231_T0_init --> L1231_T0_init
[2023-01-16 04:04:24,928 INFO  L479       ProductGenerator]: L1231_accept_S2 --> L1231_accept_S2
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: L818_accept_S3 --> L818_accept_S3
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: L818_T0_init --> L818_T0_init
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: L818_accept_S2 --> L818_accept_S2
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeFINAL_accept_S3 --> nbflows_progressing_2.writeFINAL_accept_S3
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeFINAL_T0_init --> nbflows_progressing_2.writeFINAL_T0_init
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeFINAL_accept_S2 --> nbflows_progressing_2.writeFINAL_accept_S2
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: set_bgp_tagFINAL_accept_S3 --> set_bgp_tagFINAL_accept_S3
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: set_bgp_tagFINAL_T0_init --> set_bgp_tagFINAL_T0_init
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: set_bgp_tagFINAL_accept_S2 --> set_bgp_tagFINAL_accept_S2
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: threshold_registers_0.writeENTRY_accept_S3 --> threshold_registers_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: threshold_registers_0.writeENTRY_T0_init --> threshold_registers_0.writeENTRY_T0_init
[2023-01-16 04:04:24,929 INFO  L479       ProductGenerator]: threshold_registers_0.writeENTRY_accept_S2 --> threshold_registers_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,929 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-01-16 04:04:24,929 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-01-16 04:04:24,929 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: verifyChecksumFINAL_accept_S3 --> verifyChecksumFINAL_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: verifyChecksumFINAL_T0_init --> verifyChecksumFINAL_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: verifyChecksumFINAL_accept_S2 --> verifyChecksumFINAL_accept_S2
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_accept_S3 --> L1035_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_T0_init --> L1035_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_accept_S2 --> L1035_accept_S2
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_accept_S3 --> L1035_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_T0_init --> L1035_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L1035_accept_S2 --> L1035_accept_S2
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L578_accept_S3 --> L578_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L578_T0_init --> L578_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L578_accept_S2 --> L578_accept_S2
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_accept_S3 --> L771_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_T0_init --> L771_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_accept_S2 --> L771_accept_S2
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_accept_S3 --> L771_accept_S3
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_T0_init --> L771_T0_init
[2023-01-16 04:04:24,930 INFO  L479       ProductGenerator]: L771_accept_S2 --> L771_accept_S2
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L665_accept_S3 --> L665_accept_S3
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L665_T0_init --> L665_T0_init
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L665_accept_S2 --> L665_accept_S2
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L875_accept_S3 --> L875_accept_S3
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L875_T0_init --> L875_T0_init
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L875_accept_S2 --> L875_accept_S2
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L620_accept_S3 --> L620_accept_S3
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L620_T0_init --> L620_T0_init
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L620_accept_S2 --> L620_accept_S2
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L756_accept_S3 --> L756_accept_S3
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L756_T0_init --> L756_T0_init
[2023-01-16 04:04:24,931 INFO  L479       ProductGenerator]: L756_accept_S2 --> L756_accept_S2
[2023-01-16 04:04:24,931 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,931 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,931 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: switch_ip_0.writeENTRY_accept_S3 --> switch_ip_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: switch_ip_0.writeENTRY_T0_init --> switch_ip_0.writeENTRY_T0_init
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: switch_ip_0.writeENTRY_accept_S2 --> switch_ip_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,932 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,932 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,932 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_accept_S3 --> L671_accept_S3
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_T0_init --> L671_T0_init
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_accept_S2 --> L671_accept_S2
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_accept_S3 --> L671_accept_S3
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_T0_init --> L671_T0_init
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L671_accept_S2 --> L671_accept_S2
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L606_accept_S3 --> L606_accept_S3
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L606_T0_init --> L606_T0_init
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L606_accept_S2 --> L606_accept_S2
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L624_accept_S3 --> L624_accept_S3
[2023-01-16 04:04:24,932 INFO  L479       ProductGenerator]: L624_T0_init --> L624_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L624_accept_S2 --> L624_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L652_accept_S3 --> L652_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L652_T0_init --> L652_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L652_accept_S2 --> L652_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L571_accept_S3 --> L571_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L571_T0_init --> L571_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L571_accept_S2 --> L571_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L568_accept_S3 --> L568_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L568_T0_init --> L568_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L568_accept_S2 --> L568_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L558_accept_S3 --> L558_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L558_T0_init --> L558_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L558_accept_S2 --> L558_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: parse_tcpFINAL_accept_S3 --> parse_tcpFINAL_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: parse_tcpFINAL_T0_init --> parse_tcpFINAL_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: parse_tcpFINAL_accept_S2 --> parse_tcpFINAL_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L552_accept_S3 --> L552_accept_S3
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L552_T0_init --> L552_T0_init
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L552_accept_S2 --> L552_accept_S2
[2023-01-16 04:04:24,933 INFO  L479       ProductGenerator]: L789_accept_S3 --> L789_accept_S3
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L789_T0_init --> L789_T0_init
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L789_accept_S2 --> L789_accept_S2
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L655_accept_S3 --> L655_accept_S3
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L655_T0_init --> L655_T0_init
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L655_accept_S2 --> L655_accept_S2
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: parse_tcpENTRY_accept_S3 --> parse_tcpENTRY_accept_S3
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: parse_tcpENTRY_T0_init --> parse_tcpENTRY_T0_init
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: parse_tcpENTRY_accept_S2 --> parse_tcpENTRY_accept_S2
[2023-01-16 04:04:24,934 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,934 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,934 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L890_accept_S3 --> L890_accept_S3
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L890_T0_init --> L890_T0_init
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L890_accept_S2 --> L890_accept_S2
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L771-2_accept_S3 --> L771-2_accept_S3
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L771-2_T0_init --> L771-2_T0_init
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L771-2_accept_S2 --> L771-2_accept_S2
[2023-01-16 04:04:24,934 INFO  L479       ProductGenerator]: L983_accept_S3 --> L983_accept_S3
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L983_T0_init --> L983_T0_init
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L983_accept_S2 --> L983_accept_S2
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L544_accept_S3 --> L544_accept_S3
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L544_T0_init --> L544_T0_init
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L544_accept_S2 --> L544_accept_S2
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: set_bgp_tagENTRY_accept_S3 --> set_bgp_tagENTRY_accept_S3
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: set_bgp_tagENTRY_T0_init --> set_bgp_tagENTRY_T0_init
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: set_bgp_tagENTRY_accept_S2 --> set_bgp_tagENTRY_accept_S2
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L755-1_accept_S3 --> L755-1_accept_S3
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L755-1_T0_init --> L755-1_T0_init
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L755-1_accept_S2 --> L755-1_accept_S2
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L755-1_accept_S3 --> L755-1_accept_S3
[2023-01-16 04:04:24,935 INFO  L479       ProductGenerator]: L755-1_T0_init --> L755-1_T0_init
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L755-1_accept_S2 --> L755-1_accept_S2
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_accept_S3 --> L781-1_accept_S3
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_T0_init --> L781-1_T0_init
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_accept_S2 --> L781-1_accept_S2
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_accept_S3 --> L781-1_accept_S3
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_T0_init --> L781-1_T0_init
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L781-1_accept_S2 --> L781-1_accept_S2
[2023-01-16 04:04:24,936 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,936 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,936 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L768-1_accept_S3 --> L768-1_accept_S3
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L768-1_T0_init --> L768-1_T0_init
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L768-1_accept_S2 --> L768-1_accept_S2
[2023-01-16 04:04:24,936 INFO  L479       ProductGenerator]: L768-1_accept_S3 --> L768-1_accept_S3
[2023-01-16 04:04:24,937 INFO  L479       ProductGenerator]: L768-1_T0_init --> L768-1_T0_init
[2023-01-16 04:04:24,937 INFO  L479       ProductGenerator]: L768-1_accept_S2 --> L768-1_accept_S2
[2023-01-16 04:04:24,937 INFO  L479       ProductGenerator]: L827_accept_S3 --> L827_accept_S3
[2023-01-16 04:04:24,937 INFO  L479       ProductGenerator]: L827_T0_init --> L827_T0_init
[2023-01-16 04:04:24,937 INFO  L479       ProductGenerator]: L827_accept_S2 --> L827_accept_S2
[2023-01-16 04:04:24,941 INFO  L483       ProductGenerator]: Handling product edge call: call send_0.apply();
[2023-01-16 04:04:24,941 INFO  L483       ProductGenerator]: Handling product edge call: call send_0.apply();
[2023-01-16 04:04:24,941 INFO  L483       ProductGenerator]: Handling product edge call: call send_0.apply();
[2023-01-16 04:04:24,941 INFO  L479       ProductGenerator]: nh_avaibility_3.writeENTRY_accept_S3 --> nh_avaibility_3.writeENTRY_accept_S3
[2023-01-16 04:04:24,941 INFO  L479       ProductGenerator]: nh_avaibility_3.writeENTRY_T0_init --> nh_avaibility_3.writeENTRY_T0_init
[2023-01-16 04:04:24,941 INFO  L479       ProductGenerator]: nh_avaibility_3.writeENTRY_accept_S2 --> nh_avaibility_3.writeENTRY_accept_S2
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1220_accept_S3 --> L1220_accept_S3
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1220_T0_init --> L1220_T0_init
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1220_accept_S2 --> L1220_accept_S2
[2023-01-16 04:04:24,942 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,942 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,942 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_accept_S3 --> L1006_accept_S3
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_T0_init --> L1006_T0_init
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_accept_S2 --> L1006_accept_S2
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_accept_S3 --> L1006_accept_S3
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_T0_init --> L1006_T0_init
[2023-01-16 04:04:24,942 INFO  L479       ProductGenerator]: L1006_accept_S2 --> L1006_accept_S2
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L996-1_accept_S3 --> L996-1_accept_S3
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L996-1_T0_init --> L996-1_T0_init
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L996-1_accept_S2 --> L996-1_accept_S2
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L964_accept_S3 --> L964_accept_S3
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L964_T0_init --> L964_T0_init
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: L964_accept_S2 --> L964_accept_S2
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: next_hops_port_0.writeENTRY_accept_S3 --> next_hops_port_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: next_hops_port_0.writeENTRY_T0_init --> next_hops_port_0.writeENTRY_T0_init
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: next_hops_port_0.writeENTRY_accept_S2 --> next_hops_port_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeENTRY_accept_S3 --> flowselector_last_ret_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,943 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeENTRY_T0_init --> flowselector_last_ret_0.writeENTRY_T0_init
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeENTRY_accept_S2 --> flowselector_last_ret_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: flowselector_nep_0.writeFINAL_accept_S3 --> flowselector_nep_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: flowselector_nep_0.writeFINAL_T0_init --> flowselector_nep_0.writeFINAL_T0_init
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: flowselector_nep_0.writeFINAL_accept_S2 --> flowselector_nep_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_accept_S3 --> L863_accept_S3
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_T0_init --> L863_T0_init
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_accept_S2 --> L863_accept_S2
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_accept_S3 --> L863_accept_S3
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_T0_init --> L863_T0_init
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L863_accept_S2 --> L863_accept_S2
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L603_accept_S3 --> L603_accept_S3
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L603_T0_init --> L603_T0_init
[2023-01-16 04:04:24,944 INFO  L479       ProductGenerator]: L603_accept_S2 --> L603_accept_S2
[2023-01-16 04:04:24,945 INFO  L483       ProductGenerator]: Handling product edge call: call set_nh(send_0.set_nh.port, send_0.set_nh.smac, send_0.set_nh.dmac);
[2023-01-16 04:04:24,945 INFO  L483       ProductGenerator]: Handling product edge call: call set_nh(send_0.set_nh.port, send_0.set_nh.smac, send_0.set_nh.dmac);
[2023-01-16 04:04:24,945 INFO  L483       ProductGenerator]: Handling product edge call: call set_nh(send_0.set_nh.port, send_0.set_nh.smac, send_0.set_nh.dmac);
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_accept_S3 --> L1052_accept_S3
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_T0_init --> L1052_T0_init
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_accept_S2 --> L1052_accept_S2
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_accept_S3 --> L1052_accept_S3
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_T0_init --> L1052_T0_init
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1052_accept_S2 --> L1052_accept_S2
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1063_accept_S3 --> L1063_accept_S3
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1063_T0_init --> L1063_T0_init
[2023-01-16 04:04:24,945 INFO  L479       ProductGenerator]: L1063_accept_S2 --> L1063_accept_S2
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L1101_accept_S3 --> L1101_accept_S3
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L1101_T0_init --> L1101_T0_init
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L1101_accept_S2 --> L1101_accept_S2
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: set_nhFINAL_accept_S3 --> set_nhFINAL_accept_S3
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: set_nhFINAL_T0_init --> set_nhFINAL_T0_init
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: set_nhFINAL_accept_S2 --> set_nhFINAL_accept_S2
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L554_accept_S3 --> L554_accept_S3
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L554_T0_init --> L554_T0_init
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L554_accept_S2 --> L554_accept_S2
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L647_accept_S3 --> L647_accept_S3
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L647_T0_init --> L647_T0_init
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L647_accept_S2 --> L647_accept_S2
[2023-01-16 04:04:24,946 INFO  L479       ProductGenerator]: L647_accept_S3 --> L647_accept_S3
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L647_T0_init --> L647_T0_init
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L647_accept_S2 --> L647_accept_S2
[2023-01-16 04:04:24,947 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,947 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,947 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L601_accept_S3 --> L601_accept_S3
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L601_T0_init --> L601_T0_init
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L601_accept_S2 --> L601_accept_S2
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L654_accept_S3 --> L654_accept_S3
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L654_T0_init --> L654_T0_init
[2023-01-16 04:04:24,947 INFO  L479       ProductGenerator]: L654_accept_S2 --> L654_accept_S2
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L515_accept_S3 --> L515_accept_S3
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L515_T0_init --> L515_T0_init
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L515_accept_S2 --> L515_accept_S2
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L560_accept_S3 --> L560_accept_S3
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L560_T0_init --> L560_T0_init
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L560_accept_S2 --> L560_accept_S2
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L994_accept_S3 --> L994_accept_S3
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L994_T0_init --> L994_T0_init
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L994_accept_S2 --> L994_accept_S2
[2023-01-16 04:04:24,948 INFO  L479       ProductGenerator]: L994_accept_S3 --> L994_accept_S3
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L994_T0_init --> L994_T0_init
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L994_accept_S2 --> L994_accept_S2
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L539_accept_S3 --> L539_accept_S3
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L539_T0_init --> L539_T0_init
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L539_accept_S2 --> L539_accept_S2
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L547_accept_S3 --> L547_accept_S3
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L547_T0_init --> L547_T0_init
[2023-01-16 04:04:24,949 INFO  L479       ProductGenerator]: L547_accept_S2 --> L547_accept_S2
[2023-01-16 04:04:24,949 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,949 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,949 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L561_accept_S3 --> L561_accept_S3
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L561_T0_init --> L561_T0_init
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L561_accept_S2 --> L561_accept_S2
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L981_accept_S3 --> L981_accept_S3
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L981_T0_init --> L981_T0_init
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L981_accept_S2 --> L981_accept_S2
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: rerouting_ts_0.writeENTRY_accept_S3 --> rerouting_ts_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: rerouting_ts_0.writeENTRY_T0_init --> rerouting_ts_0.writeENTRY_T0_init
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: rerouting_ts_0.writeENTRY_accept_S2 --> rerouting_ts_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L1057-2_accept_S3 --> L1057-2_accept_S3
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L1057-2_T0_init --> L1057-2_T0_init
[2023-01-16 04:04:24,950 INFO  L479       ProductGenerator]: L1057-2_accept_S2 --> L1057-2_accept_S2
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L1057-2_accept_S3 --> L1057-2_accept_S3
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L1057-2_T0_init --> L1057-2_T0_init
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L1057-2_accept_S2 --> L1057-2_accept_S2
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: flowselector_nep_0.writeENTRY_accept_S3 --> flowselector_nep_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: flowselector_nep_0.writeENTRY_T0_init --> flowselector_nep_0.writeENTRY_T0_init
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: flowselector_nep_0.writeENTRY_accept_S2 --> flowselector_nep_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L884_accept_S3 --> L884_accept_S3
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L884_T0_init --> L884_T0_init
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L884_accept_S2 --> L884_accept_S2
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L732-2_accept_S3 --> L732-2_accept_S3
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L732-2_T0_init --> L732-2_T0_init
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L732-2_accept_S2 --> L732-2_accept_S2
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L732-2_accept_S3 --> L732-2_accept_S3
[2023-01-16 04:04:24,951 INFO  L479       ProductGenerator]: L732-2_T0_init --> L732-2_T0_init
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L732-2_accept_S2 --> L732-2_accept_S2
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L565_accept_S3 --> L565_accept_S3
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L565_T0_init --> L565_T0_init
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L565_accept_S2 --> L565_accept_S2
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L490_accept_S3 --> L490_accept_S3
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L490_T0_init --> L490_T0_init
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L490_accept_S2 --> L490_accept_S2
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L763_accept_S3 --> L763_accept_S3
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L763_T0_init --> L763_T0_init
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L763_accept_S2 --> L763_accept_S2
[2023-01-16 04:04:24,952 INFO  L479       ProductGenerator]: L927-1_accept_S3 --> L927-1_accept_S3
[2023-01-16 04:04:24,953 INFO  L479       ProductGenerator]: L927-1_T0_init --> L927-1_T0_init
[2023-01-16 04:04:24,953 INFO  L479       ProductGenerator]: L927-1_accept_S2 --> L927-1_accept_S2
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_3.write(meta.id, 1);
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, fc_newflow_key);
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, fc_newflow_key);
[2023-01-16 04:04:24,953 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_key_0.write(fc_flowselector_index, fc_newflow_key);
[2023-01-16 04:04:24,953 INFO  L479       ProductGenerator]: L495_accept_S3 --> L495_accept_S3
[2023-01-16 04:04:24,953 INFO  L479       ProductGenerator]: L495_T0_init --> L495_T0_init
[2023-01-16 04:04:24,953 INFO  L479       ProductGenerator]: L495_accept_S2 --> L495_accept_S2
[2023-01-16 04:04:24,954 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.icmp); srcloc: L649-1
[2023-01-16 04:04:24,955 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.icmp); srcloc: L649-1
[2023-01-16 04:04:24,956 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call setValid(hdr.icmp); srcloc: L649-1
[2023-01-16 04:04:24,957 INFO  L479       ProductGenerator]: L532_accept_S3 --> L532_accept_S3
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L532_T0_init --> L532_T0_init
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L532_accept_S2 --> L532_accept_S2
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: sw_sum_0.writeENTRY_accept_S3 --> sw_sum_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: sw_sum_0.writeENTRY_T0_init --> sw_sum_0.writeENTRY_T0_init
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: sw_sum_0.writeENTRY_accept_S2 --> sw_sum_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: _drop_2FINAL_accept_S3 --> _drop_2FINAL_accept_S3
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: _drop_2FINAL_T0_init --> _drop_2FINAL_T0_init
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: _drop_2FINAL_accept_S2 --> _drop_2FINAL_accept_S2
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L517_accept_S3 --> L517_accept_S3
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L517_T0_init --> L517_T0_init
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L517_accept_S2 --> L517_accept_S2
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L742-1_accept_S3 --> L742-1_accept_S3
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L742-1_T0_init --> L742-1_T0_init
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L742-1_accept_S2 --> L742-1_accept_S2
[2023-01-16 04:04:24,958 INFO  L479       ProductGenerator]: L742-1_accept_S3 --> L742-1_accept_S3
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L742-1_T0_init --> L742-1_T0_init
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L742-1_accept_S2 --> L742-1_accept_S2
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L579_accept_S3 --> L579_accept_S3
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L579_T0_init --> L579_T0_init
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L579_accept_S2 --> L579_accept_S2
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L676_accept_S3 --> L676_accept_S3
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L676_T0_init --> L676_T0_init
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L676_accept_S2 --> L676_accept_S2
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L866_accept_S3 --> L866_accept_S3
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L866_T0_init --> L866_T0_init
[2023-01-16 04:04:24,959 INFO  L479       ProductGenerator]: L866_accept_S2 --> L866_accept_S2
[2023-01-16 04:04:24,959 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:24,959 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:24,959 INFO  L483       ProductGenerator]: Handling product edge call: call sw_time_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L745-2_accept_S3 --> L745-2_accept_S3
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L745-2_T0_init --> L745-2_T0_init
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L745-2_accept_S2 --> L745-2_accept_S2
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L757_accept_S3 --> L757_accept_S3
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L757_T0_init --> L757_T0_init
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L757_accept_S2 --> L757_accept_S2
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L616_accept_S3 --> L616_accept_S3
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L616_T0_init --> L616_T0_init
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L616_accept_S2 --> L616_accept_S2
[2023-01-16 04:04:24,960 INFO  L479       ProductGenerator]: L1020_accept_S3 --> L1020_accept_S3
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L1020_T0_init --> L1020_T0_init
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L1020_accept_S2 --> L1020_accept_S2
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L1020_accept_S3 --> L1020_accept_S3
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L1020_T0_init --> L1020_T0_init
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L1020_accept_S2 --> L1020_accept_S2
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L746_accept_S3 --> L746_accept_S3
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L746_T0_init --> L746_T0_init
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L746_accept_S2 --> L746_accept_S2
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L607_accept_S3 --> L607_accept_S3
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L607_T0_init --> L607_T0_init
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: L607_accept_S2 --> L607_accept_S2
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: set_metaENTRY_accept_S3 --> set_metaENTRY_accept_S3
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: set_metaENTRY_T0_init --> set_metaENTRY_T0_init
[2023-01-16 04:04:24,961 INFO  L479       ProductGenerator]: set_metaENTRY_accept_S2 --> set_metaENTRY_accept_S2
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L823_accept_S3 --> L823_accept_S3
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L823_T0_init --> L823_T0_init
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L823_accept_S2 --> L823_accept_S2
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_accept_S3 --> L934_accept_S3
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_T0_init --> L934_T0_init
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_accept_S2 --> L934_accept_S2
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_accept_S3 --> L934_accept_S3
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_T0_init --> L934_T0_init
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L934_accept_S2 --> L934_accept_S2
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L499_accept_S3 --> L499_accept_S3
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L499_T0_init --> L499_T0_init
[2023-01-16 04:04:24,962 INFO  L479       ProductGenerator]: L499_accept_S2 --> L499_accept_S2
[2023-01-16 04:04:24,962 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 3 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,962 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 3 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,963 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 3 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L772_accept_S3 --> L772_accept_S3
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L772_T0_init --> L772_T0_init
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L772_accept_S2 --> L772_accept_S2
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L829_accept_S3 --> L829_accept_S3
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L829_T0_init --> L829_T0_init
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: L829_accept_S2 --> L829_accept_S2
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: mainProcedureFINAL_accept_S3 --> mainProcedureFINAL_accept_S3
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: mainProcedureFINAL_T0_init --> mainProcedureFINAL_T0_init
[2023-01-16 04:04:24,963 INFO  L479       ProductGenerator]: mainProcedureFINAL_accept_S2 --> mainProcedureFINAL_accept_S2
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L497_accept_S3 --> L497_accept_S3
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L497_T0_init --> L497_T0_init
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L497_accept_S2 --> L497_accept_S2
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L542_accept_S3 --> L542_accept_S3
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L542_T0_init --> L542_T0_init
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L542_accept_S2 --> L542_accept_S2
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L1228_accept_S3 --> L1228_accept_S3
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L1228_T0_init --> L1228_T0_init
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L1228_accept_S2 --> L1228_accept_S2
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L929_accept_S3 --> L929_accept_S3
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L929_T0_init --> L929_T0_init
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L929_accept_S2 --> L929_accept_S2
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L929_accept_S3 --> L929_accept_S3
[2023-01-16 04:04:24,964 INFO  L479       ProductGenerator]: L929_T0_init --> L929_T0_init
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L929_accept_S2 --> L929_accept_S2
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L535_accept_S3 --> L535_accept_S3
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L535_T0_init --> L535_T0_init
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L535_accept_S2 --> L535_accept_S2
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L613_accept_S3 --> L613_accept_S3
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L613_T0_init --> L613_T0_init
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L613_accept_S2 --> L613_accept_S2
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L502_accept_S3 --> L502_accept_S3
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L502_T0_init --> L502_T0_init
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: L502_accept_S2 --> L502_accept_S2
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: flowselector_key_0.writeENTRY_accept_S3 --> flowselector_key_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,965 INFO  L479       ProductGenerator]: flowselector_key_0.writeENTRY_T0_init --> flowselector_key_0.writeENTRY_T0_init
[2023-01-16 04:04:24,966 INFO  L479       ProductGenerator]: flowselector_key_0.writeENTRY_accept_S2 --> flowselector_key_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,966 INFO  L479       ProductGenerator]: L820_accept_S3 --> L820_accept_S3
[2023-01-16 04:04:24,966 INFO  L479       ProductGenerator]: L820_T0_init --> L820_T0_init
[2023-01-16 04:04:24,966 INFO  L479       ProductGenerator]: L820_accept_S2 --> L820_accept_S2
[2023-01-16 04:04:24,966 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-01-16 04:04:24,966 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-01-16 04:04:24,966 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-01-16 04:04:24,966 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,966 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,967 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_accept_S3 --> L965_accept_S3
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_T0_init --> L965_T0_init
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_accept_S2 --> L965_accept_S2
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_accept_S3 --> L965_accept_S3
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_T0_init --> L965_T0_init
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L965_accept_S2 --> L965_accept_S2
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L839_accept_S3 --> L839_accept_S3
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L839_T0_init --> L839_T0_init
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L839_accept_S2 --> L839_accept_S2
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L605_accept_S3 --> L605_accept_S3
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L605_T0_init --> L605_T0_init
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: L605_accept_S2 --> L605_accept_S2
[2023-01-16 04:04:24,967 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeENTRY_accept_S3 --> nbflows_progressing_3.writeENTRY_accept_S3
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeENTRY_T0_init --> nbflows_progressing_3.writeENTRY_T0_init
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: nbflows_progressing_3.writeENTRY_accept_S2 --> nbflows_progressing_3.writeENTRY_accept_S2
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L564_accept_S3 --> L564_accept_S3
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L564_T0_init --> L564_T0_init
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L564_accept_S2 --> L564_accept_S2
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L831_accept_S3 --> L831_accept_S3
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L831_T0_init --> L831_T0_init
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L831_accept_S2 --> L831_accept_S2
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L985_accept_S3 --> L985_accept_S3
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L985_T0_init --> L985_T0_init
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L985_accept_S2 --> L985_accept_S2
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L1059_accept_S3 --> L1059_accept_S3
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L1059_T0_init --> L1059_T0_init
[2023-01-16 04:04:24,968 INFO  L479       ProductGenerator]: L1059_accept_S2 --> L1059_accept_S2
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L627_accept_S3 --> L627_accept_S3
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L627_T0_init --> L627_T0_init
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L627_accept_S2 --> L627_accept_S2
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L752-1_accept_S3 --> L752-1_accept_S3
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L752-1_T0_init --> L752-1_T0_init
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L752-1_accept_S2 --> L752-1_accept_S2
[2023-01-16 04:04:24,969 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, 0);
[2023-01-16 04:04:24,969 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, 0);
[2023-01-16 04:04:24,969 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, 0);
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L1041_accept_S3 --> L1041_accept_S3
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L1041_T0_init --> L1041_T0_init
[2023-01-16 04:04:24,969 INFO  L479       ProductGenerator]: L1041_accept_S2 --> L1041_accept_S2
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1008_accept_S3 --> L1008_accept_S3
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1008_T0_init --> L1008_T0_init
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1008_accept_S2 --> L1008_accept_S2
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1071-1_accept_S3 --> L1071-1_accept_S3
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1071-1_T0_init --> L1071-1_T0_init
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L1071-1_accept_S2 --> L1071-1_accept_S2
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: sw_time_0.writeENTRY_accept_S3 --> sw_time_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: sw_time_0.writeENTRY_T0_init --> sw_time_0.writeENTRY_T0_init
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: sw_time_0.writeENTRY_accept_S2 --> sw_time_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L574_accept_S3 --> L574_accept_S3
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L574_T0_init --> L574_T0_init
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L574_accept_S2 --> L574_accept_S2
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L530_accept_S3 --> L530_accept_S3
[2023-01-16 04:04:24,970 INFO  L479       ProductGenerator]: L530_T0_init --> L530_T0_init
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L530_accept_S2 --> L530_accept_S2
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L572_accept_S3 --> L572_accept_S3
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L572_T0_init --> L572_T0_init
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L572_accept_S2 --> L572_accept_S2
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_accept_S3 --> L732_accept_S3
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_T0_init --> L732_T0_init
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_accept_S2 --> L732_accept_S2
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_accept_S3 --> L732_accept_S3
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_T0_init --> L732_T0_init
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L732_accept_S2 --> L732_accept_S2
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L1054_accept_S3 --> L1054_accept_S3
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L1054_T0_init --> L1054_T0_init
[2023-01-16 04:04:24,971 INFO  L479       ProductGenerator]: L1054_accept_S2 --> L1054_accept_S2
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_accept_S3 --> send_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_T0_init --> send_0.applyENTRY_T0_init
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_accept_S2 --> send_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_accept_S3 --> send_0.applyENTRY_accept_S3
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_T0_init --> send_0.applyENTRY_T0_init
[2023-01-16 04:04:24,972 INFO  L479       ProductGenerator]: send_0.applyENTRY_accept_S2 --> send_0.applyENTRY_accept_S2
[2023-01-16 04:04:24,972 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-01-16 04:04:24,973 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-01-16 04:04:24,973 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-01-16 04:04:24,973 INFO  L479       ProductGenerator]: L510_accept_S3 --> L510_accept_S3
[2023-01-16 04:04:24,973 INFO  L479       ProductGenerator]: L510_T0_init --> L510_T0_init
[2023-01-16 04:04:24,973 INFO  L479       ProductGenerator]: L510_accept_S2 --> L510_accept_S2
[2023-01-16 04:04:24,973 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,973 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,973 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_fwloops_0.write((meta.id * 64 % 64 % 4294967296 + meta.flowselector_cellid % 4294967296) % 4294967296, (flowselector_fwloops_tmp_0 % 4 + 1 % 4) % 4);
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L493_accept_S3 --> L493_accept_S3
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L493_T0_init --> L493_T0_init
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L493_accept_S2 --> L493_accept_S2
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L783_accept_S3 --> L783_accept_S3
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L783_T0_init --> L783_T0_init
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L783_accept_S2 --> L783_accept_S2
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L656_accept_S3 --> L656_accept_S3
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L656_T0_init --> L656_T0_init
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L656_accept_S2 --> L656_accept_S2
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L1070_accept_S3 --> L1070_accept_S3
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L1070_T0_init --> L1070_T0_init
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L1070_accept_S2 --> L1070_accept_S2
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L626_accept_S3 --> L626_accept_S3
[2023-01-16 04:04:24,974 INFO  L479       ProductGenerator]: L626_T0_init --> L626_T0_init
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L626_accept_S2 --> L626_accept_S2
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_accept_S3 --> L1071_accept_S3
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_T0_init --> L1071_T0_init
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_accept_S2 --> L1071_accept_S2
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_accept_S3 --> L1071_accept_S3
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_T0_init --> L1071_T0_init
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1071_accept_S2 --> L1071_accept_S2
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1100_accept_S3 --> L1100_accept_S3
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1100_T0_init --> L1100_T0_init
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1100_accept_S2 --> L1100_accept_S2
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1169-1_accept_S3 --> L1169-1_accept_S3
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1169-1_T0_init --> L1169-1_T0_init
[2023-01-16 04:04:24,975 INFO  L479       ProductGenerator]: L1169-1_accept_S2 --> L1169-1_accept_S2
[2023-01-16 04:04:24,975 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,976 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,976 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L540_accept_S3 --> L540_accept_S3
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L540_T0_init --> L540_T0_init
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L540_accept_S2 --> L540_accept_S2
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L629_accept_S3 --> L629_accept_S3
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L629_T0_init --> L629_T0_init
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L629_accept_S2 --> L629_accept_S2
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L759_accept_S3 --> L759_accept_S3
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L759_T0_init --> L759_T0_init
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L759_accept_S2 --> L759_accept_S2
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L653_accept_S3 --> L653_accept_S3
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L653_T0_init --> L653_T0_init
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L653_accept_S2 --> L653_accept_S2
[2023-01-16 04:04:24,976 INFO  L479       ProductGenerator]: L618_accept_S3 --> L618_accept_S3
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L618_T0_init --> L618_T0_init
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L618_accept_S2 --> L618_accept_S2
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_accept_S3 --> L716_accept_S3
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_T0_init --> L716_T0_init
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_accept_S2 --> L716_accept_S2
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_accept_S3 --> L716_accept_S3
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_T0_init --> L716_T0_init
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: L716_accept_S2 --> L716_accept_S2
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_accept_S3 --> parse_ipv4ENTRY_accept_S3
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_T0_init --> parse_ipv4ENTRY_T0_init
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_accept_S2 --> parse_ipv4ENTRY_accept_S2
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeFINAL_accept_S3 --> flowselector_correctness_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeFINAL_T0_init --> flowselector_correctness_0.writeFINAL_T0_init
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: flowselector_correctness_0.writeFINAL_accept_S2 --> flowselector_correctness_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,977 INFO  L479       ProductGenerator]: sw_index_0.writeENTRY_accept_S3 --> sw_index_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: sw_index_0.writeENTRY_T0_init --> sw_index_0.writeENTRY_T0_init
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: sw_index_0.writeENTRY_accept_S2 --> sw_index_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,978 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, fc_cur_sw_index);
[2023-01-16 04:04:24,978 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, fc_cur_sw_index);
[2023-01-16 04:04:24,978 INFO  L483       ProductGenerator]: Handling product edge call: call sw_index_0.write(meta.id, fc_cur_sw_index);
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L521_accept_S3 --> L521_accept_S3
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L521_T0_init --> L521_T0_init
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L521_accept_S2 --> L521_accept_S2
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L681-1_accept_S3 --> L681-1_accept_S3
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L681-1_T0_init --> L681-1_T0_init
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L681-1_accept_S2 --> L681-1_accept_S2
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L795_accept_S3 --> L795_accept_S3
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L795_T0_init --> L795_T0_init
[2023-01-16 04:04:24,978 INFO  L479       ProductGenerator]: L795_accept_S2 --> L795_accept_S2
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: nh_avaibility_1.writeFINAL_accept_S3 --> nh_avaibility_1.writeFINAL_accept_S3
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: nh_avaibility_1.writeFINAL_T0_init --> nh_avaibility_1.writeFINAL_T0_init
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: nh_avaibility_1.writeFINAL_accept_S2 --> nh_avaibility_1.writeFINAL_accept_S2
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L553_accept_S3 --> L553_accept_S3
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L553_T0_init --> L553_T0_init
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L553_accept_S2 --> L553_accept_S2
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L550_accept_S3 --> L550_accept_S3
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L550_T0_init --> L550_T0_init
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L550_accept_S2 --> L550_accept_S2
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L591_accept_S3 --> L591_accept_S3
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L591_T0_init --> L591_T0_init
[2023-01-16 04:04:24,979 INFO  L479       ProductGenerator]: L591_accept_S2 --> L591_accept_S2
[2023-01-16 04:04:24,980 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,980 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,980 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L592_accept_S3 --> L592_accept_S3
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L592_T0_init --> L592_T0_init
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L592_accept_S2 --> L592_accept_S2
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L514_accept_S3 --> L514_accept_S3
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L514_T0_init --> L514_T0_init
[2023-01-16 04:04:24,980 INFO  L479       ProductGenerator]: L514_accept_S2 --> L514_accept_S2
[2023-01-16 04:04:24,980 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,981 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,981 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_ts_0.write(fc_flowselector_index, meta.ingress_timestamp_second);
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: switch_ip_0.writeFINAL_accept_S3 --> switch_ip_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: switch_ip_0.writeFINAL_T0_init --> switch_ip_0.writeFINAL_T0_init
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: switch_ip_0.writeFINAL_accept_S2 --> switch_ip_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L543_accept_S3 --> L543_accept_S3
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L543_T0_init --> L543_T0_init
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L543_accept_S2 --> L543_accept_S2
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L597_accept_S3 --> L597_accept_S3
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L597_T0_init --> L597_T0_init
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L597_accept_S2 --> L597_accept_S2
[2023-01-16 04:04:24,981 INFO  L483       ProductGenerator]: Handling product edge call: call _drop_2();
[2023-01-16 04:04:24,981 INFO  L483       ProductGenerator]: Handling product edge call: call _drop_2();
[2023-01-16 04:04:24,981 INFO  L483       ProductGenerator]: Handling product edge call: call _drop_2();
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L661_accept_S3 --> L661_accept_S3
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L661_T0_init --> L661_T0_init
[2023-01-16 04:04:24,981 INFO  L479       ProductGenerator]: L661_accept_S2 --> L661_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L815_accept_S3 --> L815_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L815_T0_init --> L815_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L815_accept_S2 --> L815_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_accept_S3 --> L728_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_T0_init --> L728_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_accept_S2 --> L728_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_accept_S3 --> L728_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_T0_init --> L728_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L728_accept_S2 --> L728_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L588_accept_S3 --> L588_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L588_T0_init --> L588_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L588_accept_S2 --> L588_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L798_accept_S3 --> L798_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L798_T0_init --> L798_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L798_accept_S2 --> L798_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L538_accept_S3 --> L538_accept_S3
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L538_T0_init --> L538_T0_init
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L538_accept_S2 --> L538_accept_S2
[2023-01-16 04:04:24,982 INFO  L479       ProductGenerator]: L611_accept_S3 --> L611_accept_S3
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L611_T0_init --> L611_T0_init
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L611_accept_S2 --> L611_accept_S2
[2023-01-16 04:04:24,983 INFO  L483       ProductGenerator]: Handling product edge call: call timestamp_reference_0.write(0, standard_metadata.ingress_global_timestamp);
[2023-01-16 04:04:24,983 INFO  L483       ProductGenerator]: Handling product edge call: call timestamp_reference_0.write(0, standard_metadata.ingress_global_timestamp);
[2023-01-16 04:04:24,983 INFO  L483       ProductGenerator]: Handling product edge call: call timestamp_reference_0.write(0, standard_metadata.ingress_global_timestamp);
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_accept_S3 --> L671-1_accept_S3
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_T0_init --> L671-1_T0_init
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_accept_S2 --> L671-1_accept_S2
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_accept_S3 --> L671-1_accept_S3
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_T0_init --> L671-1_T0_init
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L671-1_accept_S2 --> L671-1_accept_S2
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L600_accept_S3 --> L600_accept_S3
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L600_T0_init --> L600_T0_init
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L600_accept_S2 --> L600_accept_S2
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L537_accept_S3 --> L537_accept_S3
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L537_T0_init --> L537_T0_init
[2023-01-16 04:04:24,983 INFO  L479       ProductGenerator]: L537_accept_S2 --> L537_accept_S2
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: havocProcedureENTRY_accept_S3 --> havocProcedureENTRY_accept_S3
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: havocProcedureENTRY_T0_init --> havocProcedureENTRY_T0_init
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: havocProcedureENTRY_accept_S2 --> havocProcedureENTRY_accept_S2
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,984 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: L583_accept_S3 --> L583_accept_S3
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: L583_T0_init --> L583_T0_init
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: L583_accept_S2 --> L583_accept_S2
[2023-01-16 04:04:24,984 INFO  L479       ProductGenerator]: L1123-1_accept_S3 --> L1123-1_accept_S3
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L1123-1_T0_init --> L1123-1_T0_init
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L1123-1_accept_S2 --> L1123-1_accept_S2
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L712_accept_S3 --> L712_accept_S3
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L712_T0_init --> L712_T0_init
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L712_accept_S2 --> L712_accept_S2
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: threshold_registers_0.writeEXIT_accept_S3 --> threshold_registers_0.writeEXIT_accept_S3
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: threshold_registers_0.writeEXIT_T0_init --> threshold_registers_0.writeEXIT_T0_init
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: threshold_registers_0.writeEXIT_accept_S2 --> threshold_registers_0.writeEXIT_accept_S2
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L593_accept_S3 --> L593_accept_S3
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L593_T0_init --> L593_T0_init
[2023-01-16 04:04:24,985 INFO  L479       ProductGenerator]: L593_accept_S2 --> L593_accept_S2
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L744_accept_S3 --> L744_accept_S3
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L744_T0_init --> L744_T0_init
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L744_accept_S2 --> L744_accept_S2
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L1102_accept_S3 --> L1102_accept_S3
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L1102_T0_init --> L1102_T0_init
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L1102_accept_S2 --> L1102_accept_S2
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L610_accept_S3 --> L610_accept_S3
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L610_T0_init --> L610_T0_init
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L610_accept_S2 --> L610_accept_S2
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L638-1_accept_S3 --> L638-1_accept_S3
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L638-1_T0_init --> L638-1_T0_init
[2023-01-16 04:04:24,986 INFO  L479       ProductGenerator]: L638-1_accept_S2 --> L638-1_accept_S2
[2023-01-16 04:04:24,987 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, 0);
[2023-01-16 04:04:24,987 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, 0);
[2023-01-16 04:04:24,987 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, 0);
[2023-01-16 04:04:24,987 INFO  L479       ProductGenerator]: L491_accept_S3 --> L491_accept_S3
[2023-01-16 04:04:24,987 INFO  L479       ProductGenerator]: L491_T0_init --> L491_T0_init
[2023-01-16 04:04:24,987 INFO  L479       ProductGenerator]: L491_accept_S2 --> L491_accept_S2
[2023-01-16 04:04:24,987 INFO  L479       ProductGenerator]: L837_accept_S3 --> L837_accept_S3
[2023-01-16 04:04:24,987 INFO  L479       ProductGenerator]: L837_T0_init --> L837_T0_init
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L837_accept_S2 --> L837_accept_S2
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L837_accept_S3 --> L837_accept_S3
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L837_T0_init --> L837_T0_init
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L837_accept_S2 --> L837_accept_S2
[2023-01-16 04:04:24,988 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-01-16 04:04:24,988 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-01-16 04:04:24,988 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L1012_accept_S3 --> L1012_accept_S3
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L1012_T0_init --> L1012_T0_init
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L1012_accept_S2 --> L1012_accept_S2
[2023-01-16 04:04:24,988 INFO  L479       ProductGenerator]: L821_accept_S3 --> L821_accept_S3
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L821_T0_init --> L821_T0_init
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L821_accept_S2 --> L821_accept_S2
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L938_accept_S3 --> L938_accept_S3
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L938_T0_init --> L938_T0_init
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L938_accept_S2 --> L938_accept_S2
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeENTRY_accept_S3 --> flowselector_last_ret_bin_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeENTRY_T0_init --> flowselector_last_ret_bin_0.writeENTRY_T0_init
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: flowselector_last_ret_bin_0.writeENTRY_accept_S2 --> flowselector_last_ret_bin_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L575_accept_S3 --> L575_accept_S3
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L575_T0_init --> L575_T0_init
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L575_accept_S2 --> L575_accept_S2
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L562_accept_S3 --> L562_accept_S3
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L562_T0_init --> L562_T0_init
[2023-01-16 04:04:24,989 INFO  L479       ProductGenerator]: L562_accept_S2 --> L562_accept_S2
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_accept_S3 --> L1109-1_accept_S3
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_T0_init --> L1109-1_T0_init
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_accept_S2 --> L1109-1_accept_S2
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_accept_S3 --> L1109-1_accept_S3
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_T0_init --> L1109-1_T0_init
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L1109-1_accept_S2 --> L1109-1_accept_S2
[2023-01-16 04:04:24,990 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_1.write(meta.id, 1);
[2023-01-16 04:04:24,990 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_1.write(meta.id, 1);
[2023-01-16 04:04:24,990 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_1.write(meta.id, 1);
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L516_accept_S3 --> L516_accept_S3
[2023-01-16 04:04:24,990 INFO  L479       ProductGenerator]: L516_T0_init --> L516_T0_init
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L516_accept_S2 --> L516_accept_S2
[2023-01-16 04:04:24,991 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-01-16 04:04:24,991 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-01-16 04:04:24,991 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L931_accept_S3 --> L931_accept_S3
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L931_T0_init --> L931_T0_init
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L931_accept_S2 --> L931_accept_S2
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L569_accept_S3 --> L569_accept_S3
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L569_T0_init --> L569_T0_init
[2023-01-16 04:04:24,991 INFO  L479       ProductGenerator]: L569_accept_S2 --> L569_accept_S2
[2023-01-16 04:04:24,991 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,992 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,992 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_2.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:24,992 INFO  L483       ProductGenerator]: Handling product edge call: call _drop();
[2023-01-16 04:04:24,992 INFO  L483       ProductGenerator]: Handling product edge call: call _drop();
[2023-01-16 04:04:24,992 INFO  L483       ProductGenerator]: Handling product edge call: call _drop();
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L663_accept_S3 --> L663_accept_S3
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L663_T0_init --> L663_T0_init
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L663_accept_S2 --> L663_accept_S2
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L508_accept_S3 --> L508_accept_S3
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L508_T0_init --> L508_T0_init
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L508_accept_S2 --> L508_accept_S2
[2023-01-16 04:04:24,992 INFO  L479       ProductGenerator]: L680_accept_S3 --> L680_accept_S3
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L680_T0_init --> L680_T0_init
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L680_accept_S2 --> L680_accept_S2
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L536_accept_S3 --> L536_accept_S3
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L536_T0_init --> L536_T0_init
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L536_accept_S2 --> L536_accept_S2
[2023-01-16 04:04:24,993 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-01-16 04:04:24,993 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-01-16 04:04:24,993 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L660_accept_S3 --> L660_accept_S3
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L660_T0_init --> L660_T0_init
[2023-01-16 04:04:24,993 INFO  L479       ProductGenerator]: L660_accept_S2 --> L660_accept_S2
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: flowselector_key_0.writeFINAL_accept_S3 --> flowselector_key_0.writeFINAL_accept_S3
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: flowselector_key_0.writeFINAL_T0_init --> flowselector_key_0.writeFINAL_T0_init
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: flowselector_key_0.writeFINAL_accept_S2 --> flowselector_key_0.writeFINAL_accept_S2
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L1025-1_accept_S3 --> L1025-1_accept_S3
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L1025-1_T0_init --> L1025-1_T0_init
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L1025-1_accept_S2 --> L1025-1_accept_S2
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L720_accept_S3 --> L720_accept_S3
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L720_T0_init --> L720_T0_init
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L720_accept_S2 --> L720_accept_S2
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L720_accept_S3 --> L720_accept_S3
[2023-01-16 04:04:24,994 INFO  L479       ProductGenerator]: L720_T0_init --> L720_T0_init
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L720_accept_S2 --> L720_accept_S2
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: nh_avaibility_3.writeFINAL_accept_S3 --> nh_avaibility_3.writeFINAL_accept_S3
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: nh_avaibility_3.writeFINAL_T0_init --> nh_avaibility_3.writeFINAL_T0_init
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: nh_avaibility_3.writeFINAL_accept_S2 --> nh_avaibility_3.writeFINAL_accept_S2
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L498_accept_S3 --> L498_accept_S3
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L498_T0_init --> L498_T0_init
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L498_accept_S2 --> L498_accept_S2
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_accept_S3 --> L986_accept_S3
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_T0_init --> L986_T0_init
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_accept_S2 --> L986_accept_S2
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_accept_S3 --> L986_accept_S3
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_T0_init --> L986_T0_init
[2023-01-16 04:04:24,995 INFO  L479       ProductGenerator]: L986_accept_S2 --> L986_accept_S2
[2023-01-16 04:04:24,995 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:24,996 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:24,996 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L993_accept_S3 --> L993_accept_S3
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L993_T0_init --> L993_T0_init
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L993_accept_S2 --> L993_accept_S2
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L519_accept_S3 --> L519_accept_S3
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L519_T0_init --> L519_T0_init
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L519_accept_S2 --> L519_accept_S2
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L802_accept_S3 --> L802_accept_S3
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L802_T0_init --> L802_T0_init
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: L802_accept_S2 --> L802_accept_S2
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: nh_avaibility_1.writeENTRY_accept_S3 --> nh_avaibility_1.writeENTRY_accept_S3
[2023-01-16 04:04:24,996 INFO  L479       ProductGenerator]: nh_avaibility_1.writeENTRY_T0_init --> nh_avaibility_1.writeENTRY_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: nh_avaibility_1.writeENTRY_accept_S2 --> nh_avaibility_1.writeENTRY_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L871_accept_S3 --> L871_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L871_T0_init --> L871_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L871_accept_S2 --> L871_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L533_accept_S3 --> L533_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L533_T0_init --> L533_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L533_accept_S2 --> L533_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L819_accept_S3 --> L819_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L819_T0_init --> L819_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L819_accept_S2 --> L819_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L608_accept_S3 --> L608_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L608_T0_init --> L608_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L608_accept_S2 --> L608_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L1017_accept_S3 --> L1017_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L1017_T0_init --> L1017_T0_init
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L1017_accept_S2 --> L1017_accept_S2
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L1017_accept_S3 --> L1017_accept_S3
[2023-01-16 04:04:24,997 INFO  L479       ProductGenerator]: L1017_T0_init --> L1017_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L1017_accept_S2 --> L1017_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L622_accept_S3 --> L622_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L622_T0_init --> L622_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L622_accept_S2 --> L622_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L721_accept_S3 --> L721_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L721_T0_init --> L721_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L721_accept_S2 --> L721_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L581_accept_S3 --> L581_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L581_T0_init --> L581_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L581_accept_S2 --> L581_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L733_accept_S3 --> L733_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L733_T0_init --> L733_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L733_accept_S2 --> L733_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L500_accept_S3 --> L500_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L500_T0_init --> L500_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L500_accept_S2 --> L500_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L843_accept_S3 --> L843_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L843_T0_init --> L843_T0_init
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L843_accept_S2 --> L843_accept_S2
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L585_accept_S3 --> L585_accept_S3
[2023-01-16 04:04:24,998 INFO  L479       ProductGenerator]: L585_T0_init --> L585_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L585_accept_S2 --> L585_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: timestamp_reference_0.writeENTRY_accept_S3 --> timestamp_reference_0.writeENTRY_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: timestamp_reference_0.writeENTRY_T0_init --> timestamp_reference_0.writeENTRY_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: timestamp_reference_0.writeENTRY_accept_S2 --> timestamp_reference_0.writeENTRY_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_accept_S3 --> L1077_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_T0_init --> L1077_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_accept_S2 --> L1077_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_accept_S3 --> L1077_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_T0_init --> L1077_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L1077_accept_S2 --> L1077_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_accept_S3 --> L987_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_T0_init --> L987_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_accept_S2 --> L987_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_accept_S3 --> L987_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_T0_init --> L987_T0_init
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L987_accept_S2 --> L987_accept_S2
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L864_accept_S3 --> L864_accept_S3
[2023-01-16 04:04:24,999 INFO  L479       ProductGenerator]: L864_T0_init --> L864_T0_init
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L864_accept_S2 --> L864_accept_S2
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L1096_accept_S3 --> L1096_accept_S3
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L1096_T0_init --> L1096_T0_init
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L1096_accept_S2 --> L1096_accept_S2
[2023-01-16 04:04:25,000 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 8 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,000 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 8 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,000 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 8 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L1123_accept_S3 --> L1123_accept_S3
[2023-01-16 04:04:25,000 INFO  L479       ProductGenerator]: L1123_T0_init --> L1123_T0_init
[2023-01-16 04:04:25,001 INFO  L479       ProductGenerator]: L1123_accept_S2 --> L1123_accept_S2
[2023-01-16 04:04:25,001 INFO  L479       ProductGenerator]: L1123_accept_S3 --> L1123_accept_S3
[2023-01-16 04:04:25,001 INFO  L479       ProductGenerator]: L1123_T0_init --> L1123_T0_init
[2023-01-16 04:04:25,001 INFO  L479       ProductGenerator]: L1123_accept_S2 --> L1123_accept_S2
[2023-01-16 04:04:25,001 INFO  L483       ProductGenerator]: Handling product edge call: call rerouting_ts_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,001 INFO  L483       ProductGenerator]: Handling product edge call: call rerouting_ts_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,001 INFO  L483       ProductGenerator]: Handling product edge call: call rerouting_ts_0.write(meta.id, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,001 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, 0);
[2023-01-16 04:04:25,001 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, 0);
[2023-01-16 04:04:25,002 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, 0);
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: threshold_registers_0.writeFINAL_accept_S3 --> threshold_registers_0.writeFINAL_accept_S3
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: threshold_registers_0.writeFINAL_T0_init --> threshold_registers_0.writeFINAL_T0_init
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: threshold_registers_0.writeFINAL_accept_S2 --> threshold_registers_0.writeFINAL_accept_S2
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L546_accept_S3 --> L546_accept_S3
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L546_T0_init --> L546_T0_init
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L546_accept_S2 --> L546_accept_S2
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L736_accept_S3 --> L736_accept_S3
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L736_T0_init --> L736_T0_init
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L736_accept_S2 --> L736_accept_S2
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L769_accept_S3 --> L769_accept_S3
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L769_T0_init --> L769_T0_init
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: L769_accept_S2 --> L769_accept_S2
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: set_nhENTRY_accept_S3 --> set_nhENTRY_accept_S3
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: set_nhENTRY_T0_init --> set_nhENTRY_T0_init
[2023-01-16 04:04:25,002 INFO  L479       ProductGenerator]: set_nhENTRY_accept_S2 --> set_nhENTRY_accept_S2
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call bgp_tag_0.apply();
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call bgp_tag_0.apply();
[2023-01-16 04:04:25,003 INFO  L483       ProductGenerator]: Handling product edge call: call bgp_tag_0.apply();
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L628_accept_S3 --> L628_accept_S3
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L628_T0_init --> L628_T0_init
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L628_accept_S2 --> L628_accept_S2
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L555_accept_S3 --> L555_accept_S3
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L555_T0_init --> L555_T0_init
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L555_accept_S2 --> L555_accept_S2
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L1240-1_accept_S3 --> L1240-1_accept_S3
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L1240-1_T0_init --> L1240-1_T0_init
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L1240-1_accept_S2 --> L1240-1_accept_S2
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L582_accept_S3 --> L582_accept_S3
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L582_T0_init --> L582_T0_init
[2023-01-16 04:04:25,003 INFO  L479       ProductGenerator]: L582_accept_S2 --> L582_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: switch_ip_0.writeEXIT_accept_S3 --> switch_ip_0.writeEXIT_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: switch_ip_0.writeEXIT_T0_init --> switch_ip_0.writeEXIT_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: switch_ip_0.writeEXIT_accept_S2 --> switch_ip_0.writeEXIT_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_accept_S3 --> L1023_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_T0_init --> L1023_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_accept_S2 --> L1023_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_accept_S3 --> L1023_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_T0_init --> L1023_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L1023_accept_S2 --> L1023_accept_S2
[2023-01-16 04:04:25,004 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,004 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,004 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_last_ret_0.write(fc_flowselector_index, meta.ingress_timestamp_millisecond);
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L673_accept_S3 --> L673_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L673_T0_init --> L673_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L673_accept_S2 --> L673_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L576_accept_S3 --> L576_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L576_T0_init --> L576_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L576_accept_S2 --> L576_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L529_accept_S3 --> L529_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L529_T0_init --> L529_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L529_accept_S2 --> L529_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L681_accept_S3 --> L681_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L681_T0_init --> L681_T0_init
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L681_accept_S2 --> L681_accept_S2
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L681_accept_S3 --> L681_accept_S3
[2023-01-16 04:04:25,004 INFO  L479       ProductGenerator]: L681_T0_init --> L681_T0_init
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L681_accept_S2 --> L681_accept_S2
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L625_accept_S3 --> L625_accept_S3
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L625_T0_init --> L625_T0_init
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L625_accept_S2 --> L625_accept_S2
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L670_accept_S3 --> L670_accept_S3
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L670_T0_init --> L670_T0_init
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: L670_accept_S2 --> L670_accept_S2
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: ingressENTRY_accept_S3 --> ingressENTRY_accept_S3
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: ingressENTRY_T0_init --> ingressENTRY_T0_init
[2023-01-16 04:04:25,008 INFO  L479       ProductGenerator]: ingressENTRY_accept_S2 --> ingressENTRY_accept_S2
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 9 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 9 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 9 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L758-2_accept_S3 --> L758-2_accept_S3
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L758-2_T0_init --> L758-2_T0_init
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L758-2_accept_S2 --> L758-2_accept_S2
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L496_accept_S3 --> L496_accept_S3
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L496_T0_init --> L496_T0_init
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: L496_accept_S2 --> L496_accept_S2
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: computeChecksumFINAL_accept_S3 --> computeChecksumFINAL_accept_S3
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: computeChecksumFINAL_T0_init --> computeChecksumFINAL_T0_init
[2023-01-16 04:04:25,009 INFO  L479       ProductGenerator]: computeChecksumFINAL_accept_S2 --> computeChecksumFINAL_accept_S2
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, 0);
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, 0);
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, 0);
[2023-01-16 04:04:25,009 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_tmp % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,010 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_tmp % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,010 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_tmp % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L796_accept_S3 --> L796_accept_S3
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L796_T0_init --> L796_T0_init
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L796_accept_S2 --> L796_accept_S2
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L427-1_accept_S3 --> L427-1_accept_S3
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L427-1_T0_init --> L427-1_T0_init
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L427-1_accept_S2 --> L427-1_accept_S2
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_accept_S3 --> L784_accept_S3
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_T0_init --> L784_T0_init
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_accept_S2 --> L784_accept_S2
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_accept_S3 --> L784_accept_S3
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_T0_init --> L784_T0_init
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L784_accept_S2 --> L784_accept_S2
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L559_accept_S3 --> L559_accept_S3
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L559_T0_init --> L559_T0_init
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: L559_accept_S2 --> L559_accept_S2
[2023-01-16 04:04:25,010 INFO  L479       ProductGenerator]: set_metaFINAL_accept_S3 --> set_metaFINAL_accept_S3
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: set_metaFINAL_T0_init --> set_metaFINAL_T0_init
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: set_metaFINAL_accept_S2 --> set_metaFINAL_accept_S2
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_accept_S3 --> _parser_ParserImplFINAL_accept_S3
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_T0_init --> _parser_ParserImplFINAL_T0_init
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_accept_S2 --> _parser_ParserImplFINAL_accept_S2
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: L623_accept_S3 --> L623_accept_S3
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: L623_T0_init --> L623_T0_init
[2023-01-16 04:04:25,011 INFO  L479       ProductGenerator]: L623_accept_S2 --> L623_accept_S2
[2023-01-16 04:04:25,011 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _dropENTRY
[2023-01-16 04:04:25,015 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _dropENTRY
[2023-01-16 04:04:25,018 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: _dropENTRY
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeENTRY_accept_S3 --> nbflows_progressing_2.writeENTRY_accept_S3
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeENTRY_T0_init --> nbflows_progressing_2.writeENTRY_T0_init
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: nbflows_progressing_2.writeENTRY_accept_S2 --> nbflows_progressing_2.writeENTRY_accept_S2
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L1099_accept_S3 --> L1099_accept_S3
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L1099_T0_init --> L1099_T0_init
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L1099_accept_S2 --> L1099_accept_S2
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L617_accept_S3 --> L617_accept_S3
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L617_T0_init --> L617_T0_init
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L617_accept_S2 --> L617_accept_S2
[2023-01-16 04:04:25,021 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,021 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,021 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,021 INFO  L479       ProductGenerator]: L594_accept_S3 --> L594_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L594_T0_init --> L594_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L594_accept_S2 --> L594_accept_S2
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_accept_S3 --> L638_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_T0_init --> L638_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_accept_S2 --> L638_accept_S2
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_accept_S3 --> L638_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_T0_init --> L638_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L638_accept_S2 --> L638_accept_S2
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L785_accept_S3 --> L785_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L785_T0_init --> L785_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L785_accept_S2 --> L785_accept_S2
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: flowselector_ts_0.writeFINAL_accept_S3 --> flowselector_ts_0.writeFINAL_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: flowselector_ts_0.writeFINAL_T0_init --> flowselector_ts_0.writeFINAL_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: flowselector_ts_0.writeFINAL_accept_S2 --> flowselector_ts_0.writeFINAL_accept_S2
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L549_accept_S3 --> L549_accept_S3
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L549_T0_init --> L549_T0_init
[2023-01-16 04:04:25,022 INFO  L479       ProductGenerator]: L549_accept_S2 --> L549_accept_S2
[2023-01-16 04:04:25,022 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,022 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,022 INFO  L483       ProductGenerator]: Handling product edge call: call sw_sum_0.write(meta.id, (fc_sum_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_accept_S3 --> L927_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_T0_init --> L927_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_accept_S2 --> L927_accept_S2
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_accept_S3 --> L927_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_T0_init --> L927_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L927_accept_S2 --> L927_accept_S2
[2023-01-16 04:04:25,023 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,023 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,023 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_index_prev % 4294967296) % 4294967296, (fc_bin_value_tmp % 64 + 63 % 64) % 64);
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_accept_S3 --> L672-2_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_T0_init --> L672-2_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_accept_S2 --> L672-2_accept_S2
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_accept_S3 --> L672-2_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_T0_init --> L672-2_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L672-2_accept_S2 --> L672-2_accept_S2
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L551_accept_S3 --> L551_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L551_T0_init --> L551_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: L551_accept_S2 --> L551_accept_S2
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeFINAL_accept_S3 --> flowselector_last_ret_0.writeFINAL_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeFINAL_T0_init --> flowselector_last_ret_0.writeFINAL_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_last_ret_0.writeFINAL_accept_S2 --> flowselector_last_ret_0.writeFINAL_accept_S2
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeFINAL_accept_S3 --> flowselector_fwloops_0.writeFINAL_accept_S3
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeFINAL_T0_init --> flowselector_fwloops_0.writeFINAL_T0_init
[2023-01-16 04:04:25,023 INFO  L479       ProductGenerator]: flowselector_fwloops_0.writeFINAL_accept_S2 --> flowselector_fwloops_0.writeFINAL_accept_S2
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L612_accept_S3 --> L612_accept_S3
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L612_T0_init --> L612_T0_init
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L612_accept_S2 --> L612_accept_S2
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_nep_0.write(fc_flowselector_index, (hdr.tcp.seqNo % 4294967296 + meta.tcp_payload_len % 4294967296) % 4294967296);
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L526_accept_S3 --> L526_accept_S3
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L526_T0_init --> L526_T0_init
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L526_accept_S2 --> L526_accept_S2
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,024 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_accept_S3 --> L758_accept_S3
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_T0_init --> L758_T0_init
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_accept_S2 --> L758_accept_S2
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_accept_S3 --> L758_accept_S3
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_T0_init --> L758_T0_init
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L758_accept_S2 --> L758_accept_S2
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L427_accept_S3 --> L427_accept_S3
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L427_T0_init --> L427_T0_init
[2023-01-16 04:04:25,024 INFO  L479       ProductGenerator]: L427_accept_S2 --> L427_accept_S2
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L427_accept_S3 --> L427_accept_S3
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L427_T0_init --> L427_T0_init
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L427_accept_S2 --> L427_accept_S2
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L1219_accept_S3 --> L1219_accept_S3
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L1219_T0_init --> L1219_T0_init
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L1219_accept_S2 --> L1219_accept_S2
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nbflows_progressing_3.write(meta.id, (fc_correctness_tmp % 64 + 1 % 64) % 64);
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call nh_avaibility_2.write(meta.id, 1);
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L524_accept_S3 --> L524_accept_S3
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L524_T0_init --> L524_T0_init
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L524_accept_S2 --> L524_accept_S2
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: sw_0.writeENTRY_accept_S3 --> sw_0.writeENTRY_accept_S3
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: sw_0.writeENTRY_T0_init --> sw_0.writeENTRY_T0_init
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: sw_0.writeENTRY_accept_S2 --> sw_0.writeENTRY_accept_S2
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L836_accept_S3 --> L836_accept_S3
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L836_T0_init --> L836_T0_init
[2023-01-16 04:04:25,025 INFO  L479       ProductGenerator]: L836_accept_S2 --> L836_accept_S2
[2023-01-16 04:04:25,025 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-01-16 04:04:25,026 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-01-16 04:04:25,026 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L599_accept_S3 --> L599_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L599_T0_init --> L599_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L599_accept_S2 --> L599_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L816_accept_S3 --> L816_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L816_T0_init --> L816_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L816_accept_S2 --> L816_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L505_accept_S3 --> L505_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L505_T0_init --> L505_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L505_accept_S2 --> L505_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L587_accept_S3 --> L587_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L587_T0_init --> L587_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L587_accept_S2 --> L587_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L615_accept_S3 --> L615_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L615_T0_init --> L615_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L615_accept_S2 --> L615_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L902_accept_S3 --> L902_accept_S3
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L902_T0_init --> L902_T0_init
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L902_accept_S2 --> L902_accept_S2
[2023-01-16 04:04:25,026 INFO  L479       ProductGenerator]: L902_accept_S3 --> L902_accept_S3
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L902_T0_init --> L902_T0_init
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L902_accept_S2 --> L902_accept_S2
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + fc_cur_sw_index % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L531_accept_S3 --> L531_accept_S3
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L531_T0_init --> L531_T0_init
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L531_accept_S2 --> L531_accept_S2
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L609_accept_S3 --> L609_accept_S3
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L609_T0_init --> L609_T0_init
[2023-01-16 04:04:25,027 INFO  L479       ProductGenerator]: L609_accept_S2 --> L609_accept_S2
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 6 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 6 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 6 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call flowselector_correctness_0.write(fc_flowselector_index, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 2 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 2 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call sw_0.write((meta.id % 4294967296 * (10 % 4294967296) % 4294967296 % 4294967296 + 2 % 4294967296) % 4294967296, 0);
[2023-01-16 04:04:25,027 INFO  L483       ProductGenerator]: Handling product edge call: call set_meta(meta_fwtable_0.set_meta.id, meta_fwtable_0.set_meta.use_blink, meta_fwtable_0.set_meta.default_nexthop_port);
[2023-01-16 04:04:25,028 INFO  L483       ProductGenerator]: Handling product edge call: call set_meta(meta_fwtable_0.set_meta.id, meta_fwtable_0.set_meta.use_blink, meta_fwtable_0.set_meta.default_nexthop_port);
[2023-01-16 04:04:25,028 INFO  L483       ProductGenerator]: Handling product edge call: call set_meta(meta_fwtable_0.set_meta.id, meta_fwtable_0.set_meta.use_blink, meta_fwtable_0.set_meta.default_nexthop_port);
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L584_accept_S3 --> L584_accept_S3
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L584_T0_init --> L584_T0_init
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L584_accept_S2 --> L584_accept_S2
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L590_accept_S3 --> L590_accept_S3
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L590_T0_init --> L590_T0_init
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L590_accept_S2 --> L590_accept_S2
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L595_accept_S3 --> L595_accept_S3
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L595_T0_init --> L595_T0_init
[2023-01-16 04:04:25,028 INFO  L479       ProductGenerator]: L595_accept_S2 --> L595_accept_S2
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from havocProcedureEXIT to L1089
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from mainProcedureEXIT to ULTIMATE.startFINAL
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from computeChecksumEXIT to L1094
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from send_0.applyEXIT to L1083
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_last_ret_bin_0.writeEXIT to L899-1
[2023-01-16 04:04:25,028 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from rerouting_ts_0.writeEXIT to L671-1
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nbflows_progressing_2.writeEXIT to L902-1
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nbflows_progressing_2.writeEXIT to L969
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_time_0.writeEXIT to L683-1
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_time_0.writeEXIT to L807
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from mainEXIT to L1109-1
[2023-01-16 04:04:25,029 INFO  L749       ProductGenerator]: ==== Handling return program step: #778#return;
[2023-01-16 04:04:25,029 INFO  L749       ProductGenerator]: ==== Handling return program step: #778#return;
[2023-01-16 04:04:25,029 INFO  L749       ProductGenerator]: ==== Handling return program step: #778#return;
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L689
[2023-01-16 04:04:25,029 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L691
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L693
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L695
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L697
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L699
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L701
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L703
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L705
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L681-1
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L752-1
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L765-1
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L778-1
[2023-01-16 04:04:25,030 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L791-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L794
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L845-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L877-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L888-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_0.writeEXIT to L942-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from set_nhEXIT to L1198-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_nep_0.writeEXIT to L852
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_nep_0.writeEXIT to L927-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_nep_0.writeEXIT to L950
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from verifyChecksumEXIT to L1091
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from _parser_ParserImplEXIT to L1090
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_fwloops_0.writeEXIT to L927-1
[2023-01-16 04:04:25,031 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_fwloops_0.writeEXIT to L927-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_fwloops_0.writeEXIT to L1057-2
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_fwloops_0.writeEXIT to L1057-2
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from set_bgp_tagEXIT to L427-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L687
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L715-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L837-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L869-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L890
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_sum_0.writeEXIT to L929-1
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from acceptEXIT to parse_tcpFINAL
[2023-01-16 04:04:25,032 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_ts_0.writeEXIT to L854
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_ts_0.writeEXIT to L921
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_ts_0.writeEXIT to L952
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from meta_fwtable_0.applyEXIT to L647
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nh_avaibility_3.writeEXIT to L1025-1
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nh_avaibility_3.writeEXIT to L977
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_last_ret_0.writeEXIT to L856
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_last_ret_0.writeEXIT to L894-1
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_last_ret_0.writeEXIT to L954
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from set_metaEXIT to L1123-1
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nbflows_progressing_3.writeEXIT to L902-1
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nbflows_progressing_3.writeEXIT to L971
[2023-01-16 04:04:25,033 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_index_0.writeEXIT to L685
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from sw_index_0.writeEXIT to L809
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from timestamp_reference_0.writeEXIT to L638-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from startEXIT to _parser_ParserImplFINAL
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from NoAction_0EXIT to L427-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nh_avaibility_1.writeEXIT to L967-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from bgp_tag_0.applyEXIT to L646-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_tcpEXIT to L1169-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nh_avaibility_2.writeEXIT to L996-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from nh_avaibility_2.writeEXIT to L1071-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_ipv4EXIT to L1240-1
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from ingressEXIT to L1092
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_key_0.writeEXIT to L850
[2023-01-16 04:04:25,034 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_key_0.writeEXIT to L948
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from egressEXIT to L1093
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from _drop_2EXIT to L1198-1
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_correctness_0.writeEXIT to L858
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_correctness_0.writeEXIT to L899-1
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from flowselector_correctness_0.writeEXIT to L956
[2023-01-16 04:04:25,035 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from _dropEXIT to L1123-1
[2023-01-16 04:04:25,698 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2023-01-16 04:04:25,701 INFO  L110   BuchiProductObserver]: BuchiProgram size 2037 locations, 2820 edges
[2023-01-16 04:04:25,701 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 16.01 04:04:25 BoogieIcfgContainer
[2023-01-16 04:04:25,701 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2023-01-16 04:04:25,702 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2023-01-16 04:04:25,702 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2023-01-16 04:04:25,705 INFO  L275        PluginConnector]: BlockEncodingV2 initialized
[2023-01-16 04:04:25,705 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 16.01 04:04:25" (1/1) ...
[2023-01-16 04:04:25,790 INFO  L313           BlockEncoder]: Initial Icfg 2037 locations, 2820 edges
[2023-01-16 04:04:25,790 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2023-01-16 04:04:25,791 INFO  L263           BlockEncoder]: Using Maximize final states
[2023-01-16 04:04:25,792 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=false
[2023-01-16 04:04:25,792 INFO  L296           BlockEncoder]: Using Remove sink states
[2023-01-16 04:04:25,792 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2023-01-16 04:04:25,801 INFO  L70    emoveInfeasibleEdges]: Removed 6 edges and 3 locations because of local infeasibility
[2023-01-16 04:04:25,835 INFO  L71     MaximizeFinalStates]: 130 new accepting states
[2023-01-16 04:04:25,839 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2023-01-16 04:04:25,844 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2023-01-16 04:04:25,845 INFO  L71     MaximizeFinalStates]: 0 new accepting states
[2023-01-16 04:04:25,847 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2023-01-16 04:04:25,853 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2023-01-16 04:04:25,854 INFO  L68        ParallelComposer]: Creating parallel compositions
[2023-01-16 04:04:25,859 INFO  L313           BlockEncoder]: Encoded RCFG 2026 locations, 2804 edges
[2023-01-16 04:04:25,860 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 16.01 04:04:25 BasicIcfg
[2023-01-16 04:04:25,860 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2023-01-16 04:04:25,861 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2023-01-16 04:04:25,861 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2023-01-16 04:04:25,865 INFO  L275        PluginConnector]: BuchiAutomizer initialized
[2023-01-16 04:04:25,866 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,866 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 16.01 04:04:23" (1/6) ...
[2023-01-16 04:04:25,868 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74bab55f and model type p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 16.01 04:04:25, skipping insertion in model container
[2023-01-16 04:04:25,868 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,869 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 16.01 04:04:23" (2/6) ...
[2023-01-16 04:04:25,869 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74bab55f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 16.01 04:04:25, skipping insertion in model container
[2023-01-16 04:04:25,869 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,869 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 16.01 04:04:24" (3/6) ...
[2023-01-16 04:04:25,869 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74bab55f and model type p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 16.01 04:04:25, skipping insertion in model container
[2023-01-16 04:04:25,869 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,869 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 16.01 04:04:24" (4/6) ...
[2023-01-16 04:04:25,869 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74bab55f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 16.01 04:04:25, skipping insertion in model container
[2023-01-16 04:04:25,869 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,870 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 16.01 04:04:25" (5/6) ...
[2023-01-16 04:04:25,870 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74bab55f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 16.01 04:04:25, skipping insertion in model container
[2023-01-16 04:04:25,870 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-01-16 04:04:25,870 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 16.01 04:04:25" (6/6) ...
[2023-01-16 04:04:25,871 INFO  L354   chiAutomizerObserver]: Analyzing ICFG p4ltl_boogie.bpl_BEv2
[2023-01-16 04:04:25,952 INFO  L255   stractBuchiCegarLoop]: Interprodecural is true
[2023-01-16 04:04:25,953 INFO  L256   stractBuchiCegarLoop]: Hoare is false
[2023-01-16 04:04:25,953 INFO  L257   stractBuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2023-01-16 04:04:25,953 INFO  L258   stractBuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2023-01-16 04:04:25,953 INFO  L259   stractBuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2023-01-16 04:04:25,953 INFO  L260   stractBuchiCegarLoop]: Difference is false
[2023-01-16 04:04:25,953 INFO  L261   stractBuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2023-01-16 04:04:25,953 INFO  L265   stractBuchiCegarLoop]: ======== Iteration 0 == of CEGAR loop == BuchiAutomatonCegarLoop ========
[2023-01-16 04:04:25,962 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 2026 states, 1674 states have (on average 1.1081242532855435) internal successors, (1855), 1551 states have internal predecessors, (1855), 238 states have call successors, (238), 238 states have call predecessors, (238), 114 states have return successors, (711), 237 states have call predecessors, (711), 237 states have call successors, (711)
[2023-01-16 04:04:26,013 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:26,014 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:04:26,014 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:04:26,032 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:26,033 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:26,033 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 1 ============
[2023-01-16 04:04:26,038 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 2026 states, 1674 states have (on average 1.1081242532855435) internal successors, (1855), 1551 states have internal predecessors, (1855), 238 states have call successors, (238), 238 states have call predecessors, (238), 114 states have return successors, (711), 237 states have call predecessors, (711), 237 states have call successors, (711)
[2023-01-16 04:04:26,055 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:26,056 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:04:26,056 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:04:26,061 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:26,061 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:26,080 INFO  L752   eck$LassoCheckResult]: Stem: 1114#ULTIMATE.startENTRY_NONWAtrue [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 552#L1109-1_T0_inittrue [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 93#L1109_T0_inittrue [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1483#L1109_T0_init-D107true [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1504#mainENTRY_T0_inittrue [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1607#mainENTRY_T0_init-D50true [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 260#havocProcedureENTRY_T0_inittrue [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 54#L490_T0_inittrue [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 1958#L491_T0_inittrue [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 1956#L492_T0_inittrue [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 1023#L493_T0_inittrue [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 1836#L494_T0_inittrue [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 60#L495_T0_inittrue [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 1105#L496_T0_inittrue [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 1434#L497_T0_inittrue [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 1824#L498_T0_inittrue [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 295#L499_T0_inittrue [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 1717#L500_T0_inittrue [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 860#L501_T0_inittrue [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 774#L502_T0_inittrue [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 1668#L503_T0_inittrue [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 1513#L504_T0_inittrue [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 50#L505_T0_inittrue [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 1827#L506_T0_inittrue [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 1540#L507_T0_inittrue [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 1739#L508_T0_inittrue [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 1988#L509_T0_inittrue [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 1121#L510_T0_inittrue [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 1470#L511_T0_inittrue [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 195#L512_T0_inittrue [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 711#L513_T0_inittrue [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 309#L514_T0_inittrue [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 1408#L515_T0_inittrue [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 1811#L516_T0_inittrue [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 463#L517_T0_inittrue [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 544#L518_T0_inittrue [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 311#L519_T0_inittrue [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 152#L520_T0_inittrue [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 1342#L521_T0_inittrue [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 1759#L522_T0_inittrue [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 1226#L523_T0_inittrue [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 1034#L524_T0_inittrue [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 149#L525_T0_inittrue [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 1520#L526_T0_inittrue [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 1348#L527_T0_inittrue [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 1484#L528_T0_inittrue [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 1581#L529_T0_inittrue [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 1223#L530_T0_inittrue [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 1057#L531_T0_inittrue [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 1984#L532_T0_inittrue [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 1915#L533_T0_inittrue [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 1225#L534_T0_inittrue [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 1938#L535_T0_inittrue [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 1253#L536_T0_inittrue [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 1582#L537_T0_inittrue [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 568#L538_T0_inittrue [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 998#L539_T0_inittrue [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 1644#L540_T0_inittrue [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 861#L541_T0_inittrue [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 1845#L542_T0_inittrue [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 1853#L543_T0_inittrue [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 897#L544_T0_inittrue [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 637#L545_T0_inittrue [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 1019#L546_T0_inittrue [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 1647#L547_T0_inittrue [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 457#L548_T0_inittrue [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 1948#L549_T0_inittrue [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 935#L550_T0_inittrue [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 464#L551_T0_inittrue [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 1103#L552_T0_inittrue [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 1242#L553_T0_inittrue [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 1088#L554_T0_inittrue [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 333#L555_T0_inittrue [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 767#L556_T0_inittrue [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 841#L557_T0_inittrue [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 1592#L558_T0_inittrue [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 336#L559_T0_inittrue [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 1693#L560_T0_inittrue [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 1292#L561_T0_inittrue [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 137#L562_T0_inittrue [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 1645#L563_T0_inittrue [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 1120#L564_T0_inittrue [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 813#L565_T0_inittrue [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 1339#L566_T0_inittrue [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 1617#L567_T0_inittrue [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 508#L568_T0_inittrue [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 306#L569_T0_inittrue [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 527#L570_T0_inittrue [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 1487#L571_T0_inittrue [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 1077#L572_T0_inittrue [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 1945#L573_T0_inittrue [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 1005#L574_T0_inittrue [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 1209#L575_T0_inittrue [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 1313#L576_T0_inittrue [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 577#L577_T0_inittrue [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 929#L578_T0_inittrue [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 1329#L579_T0_inittrue [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 1056#L580_T0_inittrue [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 925#L581_T0_inittrue [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 1498#L582_T0_inittrue [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 1126#L583_T0_inittrue [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 1750#L584_T0_inittrue [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 1857#L585_T0_inittrue [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 1653#L586_T0_inittrue [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 1690#L587_T0_inittrue [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 903#L588_T0_inittrue [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 17#L589_T0_inittrue [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 1548#L590_T0_inittrue [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 1279#L591_T0_inittrue [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 1867#L592_T0_inittrue [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 608#L593_T0_inittrue [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 1169#L594_T0_inittrue [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 646#L595_T0_inittrue [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 791#L596_T0_inittrue [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 66#L597_T0_inittrue [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 83#L598_T0_inittrue [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 1050#L599_T0_inittrue [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 364#L600_T0_inittrue [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 361#L601_T0_inittrue [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 1508#L602_T0_inittrue [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 1293#L603_T0_inittrue [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 390#L604_T0_inittrue [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 346#L605_T0_inittrue [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 328#L606_T0_inittrue [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 145#L607_T0_inittrue [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 40#L608_T0_inittrue [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 1658#L609_T0_inittrue [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 169#L610_T0_inittrue [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 470#L611_T0_inittrue [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 485#L612_T0_inittrue [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 243#L613_T0_inittrue [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 242#L614_T0_inittrue [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 706#L615_T0_inittrue [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 1305#L616_T0_inittrue [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 140#L617_T0_inittrue [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 1134#L618_T0_inittrue [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 923#L619_T0_inittrue [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 300#L620_T0_inittrue [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 915#L621_T0_inittrue [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 143#L622_T0_inittrue [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 1553#L623_T0_inittrue [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 578#L624_T0_inittrue [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 958#L625_T0_inittrue [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 1583#L626_T0_inittrue [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 1801#L627_T0_inittrue [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 2020#L628_T0_inittrue [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 545#L629_T0_inittrue [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 1963#havocProcedureFINAL_T0_inittrue [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1193#havocProcedureEXIT_T0_inittrue >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 423#L1089-D239true [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 61#L1089_T0_inittrue [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1083#L1089_T0_init-D140true [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1562#_parser_ParserImplENTRY_T0_inittrue [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 858#_parser_ParserImplENTRY_T0_init-D164true [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 709#startENTRY_T0_inittrue [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 1913#L1240_T0_inittrue [5819] L1240_T0_init-->L1240-1_T0_init: Formula: (not (= v_hdr.ethernet.etherType_20 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_20}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_20}  AuxVars[]  AssignedVars[] 267#L1240-1_T0_inittrue [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1217#startEXIT_T0_inittrue >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 612#_parser_ParserImplFINAL-D428true [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 575#_parser_ParserImplFINAL_T0_inittrue [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 491#_parser_ParserImplEXIT_T0_inittrue >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 369#L1090-D344true [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 355#L1090_T0_inittrue [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 352#L1090_T0_init-D116true [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1089#verifyChecksumFINAL_T0_inittrue [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1600#verifyChecksumEXIT_T0_inittrue >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 963#L1091-D341true [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1648#L1091_T0_inittrue [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1438#L1091_T0_init-D221true [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64#ingressENTRY_T0_inittrue [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 379#L638_T0_inittrue [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 1192#L638-1_T0_inittrue [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 743#L644_T0_inittrue [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 1476#L645_T0_inittrue [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 1090#L646_T0_inittrue [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1175#L646_T0_init-D185true [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1907#bgp_tag_0.applyENTRY_T0_inittrue [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 1063#L427_T0_inittrue [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 158#L427-1_T0_inittrue [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 424#bgp_tag_0.applyEXIT_T0_inittrue >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 162#L646-1-D437true [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 566#L646-1_T0_inittrue [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 74#L646-1_T0_init-D8true [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1551#meta_fwtable_0.applyENTRY_T0_inittrue [5436] meta_fwtable_0.applyENTRY_T0_init-->L1123_T0_init: Formula: (not (= v_meta_fwtable_0.action_run_18 meta_fwtable_0.action.set_meta))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_18}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_18}  AuxVars[]  AssignedVars[] 651#L1123_T0_inittrue [4503] L1123_T0_init-->L1123-1_T0_init: Formula: (not (= meta_fwtable_0.action._drop v_meta_fwtable_0.action_run_22))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_22}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_22}  AuxVars[]  AssignedVars[] 889#L1123-1_T0_inittrue [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1761#meta_fwtable_0.applyEXIT_T0_inittrue >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1045#L647-D392true [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 739#L647_T0_inittrue [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 277#L670_T0_inittrue [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 164#L671_T0_inittrue [3995] L671_T0_init-->L671-1_T0_init: Formula: (or (not v_hdr.tcp.valid_26) (not (= v_meta.use_blink_31 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_26, meta.use_blink=v_meta.use_blink_31}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_26, meta.use_blink=v_meta.use_blink_31}  AuxVars[]  AssignedVars[] 534#L671-1_T0_inittrue [4377] L671-1_T0_init-->L977_T0_init: Formula: (not (= v_meta.use_blink_21 1))  InVars {meta.use_blink=v_meta.use_blink_21}  OutVars{meta.use_blink=v_meta.use_blink_21}  AuxVars[]  AssignedVars[] 634#L977_T0_inittrue [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 953#L977_T0_init-D80true [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1287#send_0.applyENTRY_T0_inittrue [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 529#L1198_T0_inittrue [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 714#L1198-1_T0_inittrue [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 412#send_0.applyEXIT_T0_inittrue >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 4#L1083-D248true [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1298#L1083_T0_inittrue [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1897#ingressEXIT_T0_inittrue >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 247#L1092-D452true [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1131#L1092_T0_inittrue [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 957#L1092_T0_init-D11true [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1815#egressFINAL_T0_inittrue [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13#egressEXIT_T0_inittrue >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 492#L1093-D461true [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1712#L1093_T0_inittrue [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 888#L1093_T0_init-D155true [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1698#computeChecksumFINAL_T0_inittrue [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 509#computeChecksumEXIT_T0_inittrue >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1601#L1094-D245true [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1269#L1094_T0_inittrue [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 38#L1095-1_T0_inittrue [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 1231#L1099_T0_inittrue [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 1466#L1100_T0_inittrue [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 1701#L1101_T0_inittrue [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 1309#L1102_T0_inittrue [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 1059#L1103_T0_inittrue [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 1753#mainFINAL_T0_inittrue [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 782#mainEXIT_T0_inittrue >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1891#L1109-1-D269true [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 1576#L1109-1_accept_S2true [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 754#L1109_accept_S2true [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 426#L1109_accept_S2-D108true [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 526#mainENTRY_accept_S2true [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 698#mainENTRY_accept_S2-D51true [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 314#havocProcedureENTRY_accept_S2true [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 1041#L490_accept_S2true [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 1987#L491_accept_S2true [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 1830#L492_accept_S2true [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 561#L493_accept_S2true [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 1694#L494_accept_S2true [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 1507#L495_accept_S2true [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 845#L496_accept_S2true [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 1233#L497_accept_S2true [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 1330#L498_accept_S2true [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 1153#L499_accept_S2true [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 1240#L500_accept_S2true [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 1638#L501_accept_S2true [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 1503#L502_accept_S2true [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 1889#L503_accept_S2true [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 586#L504_accept_S2true [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 256#L505_accept_S2true [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 1525#L506_accept_S2true [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 1959#L507_accept_S2true [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 290#L508_accept_S2true [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 993#L509_accept_S2true [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 385#L510_accept_S2true [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 349#L511_accept_S2true [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 1042#L512_accept_S2true [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 556#L513_accept_S2true [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 299#L514_accept_S2true [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 1930#L515_accept_S2true [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 406#L516_accept_S2true [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 371#L517_accept_S2true [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 1301#L518_accept_S2true [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 712#L519_accept_S2true [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 1550#L520_accept_S2true [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 1367#L521_accept_S2true [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 1977#L522_accept_S2true [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 1382#L523_accept_S2true [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 503#L524_accept_S2true [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 1718#L525_accept_S2true [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 898#L526_accept_S2true [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 647#L527_accept_S2true [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 268#L528_accept_S2true [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 489#L529_accept_S2true [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 179#L530_accept_S2true [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 864#L531_accept_S2true [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 461#L532_accept_S2true [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 623#L533_accept_S2true [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 1369#L534_accept_S2true [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 213#L535_accept_S2true [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 1942#L536_accept_S2true [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 1459#L537_accept_S2true [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 674#L538_accept_S2true [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 1597#L539_accept_S2true [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 517#L540_accept_S2true [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 488#L541_accept_S2true [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 486#L542_accept_S2true [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 1469#L543_accept_S2true [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 852#L544_accept_S2true [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 635#L545_accept_S2true [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 1512#L546_accept_S2true [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 80#L547_accept_S2true [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 783#L548_accept_S2true [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 150#L549_accept_S2true [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 659#L550_accept_S2true [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 835#L551_accept_S2true [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 907#L552_accept_S2true [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 1629#L553_accept_S2true [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 870#L554_accept_S2true [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 1573#L555_accept_S2true [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 497#L556_accept_S2true [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 792#L557_accept_S2true [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 1097#L558_accept_S2true [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 1286#L559_accept_S2true [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 11#L560_accept_S2true [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 1708#L561_accept_S2true [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 1584#L562_accept_S2true [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 734#L563_accept_S2true [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 793#L564_accept_S2true [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 12#L565_accept_S2true [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 206#L566_accept_S2true [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 1797#L567_accept_S2true [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 374#L568_accept_S2true [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 1027#L569_accept_S2true [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 1448#L570_accept_S2true [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 947#L571_accept_S2true [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 223#L572_accept_S2true [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 514#L573_accept_S2true [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 1810#L574_accept_S2true [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 1939#L575_accept_S2true [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 989#L576_accept_S2true [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 415#L577_accept_S2true [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 1328#L578_accept_S2true [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 1780#L579_accept_S2true [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 1999#L580_accept_S2true [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 296#L581_accept_S2true [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 645#L582_accept_S2true [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 965#L583_accept_S2true [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 917#L584_accept_S2true [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 1406#L585_accept_S2true [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 1273#L586_accept_S2true [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 1710#L587_accept_S2true [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 683#L588_accept_S2true [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 1415#L589_accept_S2true [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 1049#L590_accept_S2true [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 259#L591_accept_S2true [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 1985#L592_accept_S2true [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 1218#L593_accept_S2true [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 1734#L594_accept_S2true [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 1625#L595_accept_S2true [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 1486#L596_accept_S2true [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 1124#L597_accept_S2true [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 1994#L598_accept_S2true [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 402#L599_accept_S2true [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 339#L600_accept_S2true [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 391#L601_accept_S2true [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 39#L602_accept_S2true [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 2022#L603_accept_S2true [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 425#L604_accept_S2true [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 588#L605_accept_S2true [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 1343#L606_accept_S2true [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 1843#L607_accept_S2true [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 1972#L608_accept_S2true [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 748#L609_accept_S2true [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 1684#L610_accept_S2true [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 1515#L611_accept_S2true [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 895#L612_accept_S2true [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 496#L613_accept_S2true [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 2004#L614_accept_S2true [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 1069#L615_accept_S2true [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 1046#L616_accept_S2true [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 2016#L617_accept_S2true [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 1535#L618_accept_S2true [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 168#L619_accept_S2true [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 591#L620_accept_S2true [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 971#L621_accept_S2true [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 590#L622_accept_S2true [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 15#L623_accept_S2true [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 1274#L624_accept_S2true [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 806#L625_accept_S2true [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 600#L626_accept_S2true [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 394#L627_accept_S2true [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 512#L628_accept_S2true [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 1654#L629_accept_S2true [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 1796#havocProcedureFINAL_accept_S2true [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 244#havocProcedureEXIT_accept_S2true >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 592#L1089-D240true [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 900#L1089_accept_S2true [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1989#L1089_accept_S2-D141true [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 733#_parser_ParserImplENTRY_accept_S2true [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 636#_parser_ParserImplENTRY_accept_S2-D165true [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 531#startENTRY_accept_S2true [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 47#L1240_accept_S2true [3873] L1240_accept_S2-->L1240-1_accept_S2: Formula: (not (= v_hdr.ethernet.etherType_22 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_22}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_22}  AuxVars[]  AssignedVars[] 191#L1240-1_accept_S2true [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 648#startEXIT_accept_S2true >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 987#_parser_ParserImplFINAL-D429true [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1951#_parser_ParserImplFINAL_accept_S2true [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1511#_parser_ParserImplEXIT_accept_S2true >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1291#L1090-D345true [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 187#L1090_accept_S2true [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 388#L1090_accept_S2-D117true [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1117#verifyChecksumFINAL_accept_S2true [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1661#verifyChecksumEXIT_accept_S2true >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1729#L1091-D342true [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 487#L1091_accept_S2true [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 194#L1091_accept_S2-D222true [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1802#ingressENTRY_accept_S2true [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 440#L638_accept_S2true [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 1961#L638-1_accept_S2true [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 660#L644_accept_S2true [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 1028#L645_accept_S2true [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 1180#L646_accept_S2true [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 442#L646_accept_S2-D186true [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1545#bgp_tag_0.applyENTRY_accept_S2true [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 1799#L427_accept_S2true [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 1494#L427-1_accept_S2true [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 747#bgp_tag_0.applyEXIT_accept_S2true >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1307#L646-1-D438true [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1002#L646-1_accept_S2true [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 102#L646-1_accept_S2-D9true [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2018#meta_fwtable_0.applyENTRY_accept_S2true [5925] meta_fwtable_0.applyENTRY_accept_S2-->L1123_accept_S2: Formula: (not (= v_meta_fwtable_0.action_run_24 meta_fwtable_0.action.set_meta))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_24}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_24}  AuxVars[]  AssignedVars[] 1904#L1123_accept_S2true [5806] L1123_accept_S2-->L1123-1_accept_S2: Formula: (not (= meta_fwtable_0.action._drop v_meta_fwtable_0.action_run_16))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_16}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_16}  AuxVars[]  AssignedVars[] 597#L1123-1_accept_S2true [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92#meta_fwtable_0.applyEXIT_accept_S2true >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 940#L647-D393true [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 574#L647_accept_S2true [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 192#L670_accept_S2true [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 1789#L671_accept_S2true [5678] L671_accept_S2-->L671-1_accept_S2: Formula: (or (not (= v_meta.use_blink_27 1)) (not v_hdr.tcp.valid_22))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_22, meta.use_blink=v_meta.use_blink_27}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_22, meta.use_blink=v_meta.use_blink_27}  AuxVars[]  AssignedVars[] 729#L671-1_accept_S2true [4588] L671-1_accept_S2-->L977_accept_S2: Formula: (not (= v_meta.use_blink_25 1))  InVars {meta.use_blink=v_meta.use_blink_25}  OutVars{meta.use_blink=v_meta.use_blink_25}  AuxVars[]  AssignedVars[] 1862#L977_accept_S2true [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 342#L977_accept_S2-D81true [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1326#send_0.applyENTRY_accept_S2true [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 589#L1198_accept_S2true [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 1276#L1198-1_accept_S2true [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1990#send_0.applyEXIT_accept_S2true >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 890#L1083-D249true [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8#L1083_accept_S2true [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1848#ingressEXIT_accept_S2true >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1003#L1092-D453true [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1532#L1092_accept_S2true [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 875#L1092_accept_S2-D12true [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1184#egressFINAL_accept_S2true [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1534#egressEXIT_accept_S2true >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 723#L1093-D462true [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1641#L1093_accept_S2true [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 765#L1093_accept_S2-D156true [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 108#computeChecksumFINAL_accept_S2true [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 844#computeChecksumEXIT_accept_S2true >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1833#L1094-D246true [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 638#L1094_accept_S2true [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 764#L1095-1_accept_S2true [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 972#L1099_accept_S2true [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 1706#L1100_accept_S2true [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 663#L1101_accept_S2true [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 435#L1102_accept_S2true [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 226#L1103_accept_S2true [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 171#mainFINAL_accept_S2true [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1944#mainEXIT_accept_S2true >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 360#L1109-1-D270true [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 620#L1109-1_accept_S3true 
[2023-01-16 04:04:26,089 INFO  L754   eck$LassoCheckResult]: Loop: 620#L1109-1_accept_S3true [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1198#L1109_accept_S3true [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1316#L1109_accept_S3-D106true [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1394#mainENTRY_accept_S3true [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1420#mainENTRY_accept_S3-D49true [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1991#havocProcedureENTRY_accept_S3true [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 621#L490_accept_S3true [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 1359#L491_accept_S3true [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 1141#L492_accept_S3true [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 322#L493_accept_S3true [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 1723#L494_accept_S3true [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 609#L495_accept_S3true [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 1236#L496_accept_S3true [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 100#L497_accept_S3true [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 225#L498_accept_S3true [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 840#L499_accept_S3true [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 1659#L500_accept_S3true [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 863#L501_accept_S3true [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 1986#L502_accept_S3true [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 90#L503_accept_S3true [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 502#L504_accept_S3true [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 1306#L505_accept_S3true [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 209#L506_accept_S3true [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 882#L507_accept_S3true [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 1324#L508_accept_S3true [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 1563#L509_accept_S3true [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 1373#L510_accept_S3true [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 375#L511_accept_S3true [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 1035#L512_accept_S3true [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 1112#L513_accept_S3true [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 1674#L514_accept_S3true [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 1465#L515_accept_S3true [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 1251#L516_accept_S3true [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 1952#L517_accept_S3true [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 1819#L518_accept_S3true [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 400#L519_accept_S3true [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 1319#L520_accept_S3true [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 1246#L521_accept_S3true [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 1398#L522_accept_S3true [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 866#L523_accept_S3true [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 800#L524_accept_S3true [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 283#L525_accept_S3true [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 78#L526_accept_S3true [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 1770#L527_accept_S3true [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 1205#L528_accept_S3true [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 1650#L529_accept_S3true [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 1395#L530_accept_S3true [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 1786#L531_accept_S3true [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 1161#L532_accept_S3true [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 85#L533_accept_S3true [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 1602#L534_accept_S3true [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 353#L535_accept_S3true [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 1075#L536_accept_S3true [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 1852#L537_accept_S3true [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 1642#L538_accept_S3true [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 603#L539_accept_S3true [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 308#L540_accept_S3true [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 241#L541_accept_S3true [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 1771#L542_accept_S3true [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 1522#L543_accept_S3true [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 1106#L544_accept_S3true [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 1586#L545_accept_S3true [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 1509#L546_accept_S3true [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 113#L547_accept_S3true [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 96#L548_accept_S3true [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 138#L549_accept_S3true [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 468#L550_accept_S3true [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 735#L551_accept_S3true [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 805#L552_accept_S3true [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 1609#L553_accept_S3true [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 1201#L554_accept_S3true [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 281#L555_accept_S3true [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 202#L556_accept_S3true [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 112#L557_accept_S3true [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 926#L558_accept_S3true [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 1289#L559_accept_S3true [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 1567#L560_accept_S3true [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 174#L561_accept_S3true [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 1490#L562_accept_S3true [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 284#L563_accept_S3true [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 1927#L564_accept_S3true [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 134#L565_accept_S3true [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 335#L566_accept_S3true [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 1806#L567_accept_S3true [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 896#L568_accept_S3true [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 465#L569_accept_S3true [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 653#L570_accept_S3true [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 939#L571_accept_S3true [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 1060#L572_accept_S3true [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 151#L573_accept_S3true [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 1542#L574_accept_S3true [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 691#L575_accept_S3true [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 949#L576_accept_S3true [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 14#L577_accept_S3true [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 716#L578_accept_S3true [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 1865#L579_accept_S3true [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 1196#L580_accept_S3true [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 1884#L581_accept_S3true [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 2026#L582_accept_S3true [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 887#L583_accept_S3true [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 1748#L584_accept_S3true [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 231#L585_accept_S3true [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 372#L586_accept_S3true [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 1234#L587_accept_S3true [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 1849#L588_accept_S3true [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 1764#L589_accept_S3true [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 1495#L590_accept_S3true [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 1790#L591_accept_S3true [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 316#L592_accept_S3true [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 1187#L593_accept_S3true [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 35#L594_accept_S3true [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 1392#L595_accept_S3true [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 493#L596_accept_S3true [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 1794#L597_accept_S3true [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 991#L598_accept_S3true [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 1816#L599_accept_S3true [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 1135#L600_accept_S3true [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 393#L601_accept_S3true [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 160#L602_accept_S3true [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 218#L603_accept_S3true [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 429#L604_accept_S3true [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 417#L605_accept_S3true [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 654#L606_accept_S3true [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 1191#L607_accept_S3true [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 1541#L608_accept_S3true [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 498#L609_accept_S3true [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 817#L610_accept_S3true [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 703#L611_accept_S3true [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 1518#L612_accept_S3true [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 1536#L613_accept_S3true [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 398#L614_accept_S3true [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 1791#L615_accept_S3true [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 1950#L616_accept_S3true [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 21#L617_accept_S3true [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 1611#L618_accept_S3true [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 872#L619_accept_S3true [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 210#L620_accept_S3true [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 1256#L621_accept_S3true [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 124#L622_accept_S3true [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 1700#L623_accept_S3true [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 772#L624_accept_S3true [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 1921#L625_accept_S3true [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 833#L626_accept_S3true [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 1079#L627_accept_S3true [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 891#L628_accept_S3true [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 814#L629_accept_S3true [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 120#havocProcedureFINAL_accept_S3true [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 549#havocProcedureEXIT_accept_S3true >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 5#L1089-D238true [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 114#L1089_accept_S3true [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 570#L1089_accept_S3-D139true [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1864#_parser_ParserImplENTRY_accept_S3true [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1018#_parser_ParserImplENTRY_accept_S3-D163true [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 924#startENTRY_accept_S3true [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 1577#L1240_accept_S3true [5464] L1240_accept_S3-->L1240-1_accept_S3: Formula: (not (= v_hdr.ethernet.etherType_18 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_18}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_18}  AuxVars[]  AssignedVars[] 979#L1240-1_accept_S3true [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 944#startEXIT_accept_S3true >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 376#_parser_ParserImplFINAL-D427true [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 850#_parser_ParserImplFINAL_accept_S3true [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 528#_parser_ParserImplEXIT_accept_S3true >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 876#L1090-D343true [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1185#L1090_accept_S3true [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 190#L1090_accept_S3-D115true [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1445#verifyChecksumFINAL_accept_S3true [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1016#verifyChecksumEXIT_accept_S3true >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 182#L1091-D340true [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1974#L1091_accept_S3true [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 219#L1091_accept_S3-D220true [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1821#ingressENTRY_accept_S3true [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 1087#L638_accept_S3true [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 1937#L638-1_accept_S3true [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 99#L644_accept_S3true [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 173#L645_accept_S3true [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 41#L646_accept_S3true [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1656#L646_accept_S3-D184true [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 781#bgp_tag_0.applyENTRY_accept_S3true [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 1182#L427_accept_S3true [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 1341#L427-1_accept_S3true [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1317#bgp_tag_0.applyEXIT_accept_S3true >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1366#L646-1-D436true [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1820#L646-1_accept_S3true [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 237#L646-1_accept_S3-D7true [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 28#meta_fwtable_0.applyENTRY_accept_S3true [3847] meta_fwtable_0.applyENTRY_accept_S3-->L1123_accept_S3: Formula: (not (= v_meta_fwtable_0.action_run_26 meta_fwtable_0.action.set_meta))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_26}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_26}  AuxVars[]  AssignedVars[] 1053#L1123_accept_S3true [4914] L1123_accept_S3-->L1123-1_accept_S3: Formula: (not (= meta_fwtable_0.action._drop v_meta_fwtable_0.action_run_20))  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_20}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_20}  AuxVars[]  AssignedVars[] 836#L1123-1_accept_S3true [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 786#meta_fwtable_0.applyEXIT_accept_S3true >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1775#L647-D391true [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 203#L647_accept_S3true [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 669#L670_accept_S3true [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 1047#L671_accept_S3true [4907] L671_accept_S3-->L671-1_accept_S3: Formula: (or (not v_hdr.tcp.valid_24) (not (= v_meta.use_blink_29 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_24, meta.use_blink=v_meta.use_blink_29}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_24, meta.use_blink=v_meta.use_blink_29}  AuxVars[]  AssignedVars[] 1678#L671-1_accept_S3true [5566] L671-1_accept_S3-->L977_accept_S3: Formula: (not (= v_meta.use_blink_23 1))  InVars {meta.use_blink=v_meta.use_blink_23}  OutVars{meta.use_blink=v_meta.use_blink_23}  AuxVars[]  AssignedVars[] 1667#L977_accept_S3true [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1311#L977_accept_S3-D79true [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1303#send_0.applyENTRY_accept_S3true [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 466#L1198_accept_S3true [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 1475#L1198-1_accept_S3true [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1731#send_0.applyEXIT_accept_S3true >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 331#L1083-D247true [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1754#L1083_accept_S3true [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 851#ingressEXIT_accept_S3true >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 821#L1092-D451true [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1521#L1092_accept_S3true [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1410#L1092_accept_S3-D10true [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 396#egressFINAL_accept_S3true [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 434#egressEXIT_accept_S3true >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1772#L1093-D460true [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 262#L1093_accept_S3true [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1554#L1093_accept_S3-D154true [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 571#computeChecksumFINAL_accept_S3true [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1110#computeChecksumEXIT_accept_S3true >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 119#L1094-D244true [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 501#L1094_accept_S3true [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 165#L1095-1_accept_S3true [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 1152#L1099_accept_S3true [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 816#L1100_accept_S3true [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 983#L1101_accept_S3true [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 1757#L1102_accept_S3true [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 975#L1103_accept_S3true [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 1139#mainFINAL_accept_S3true [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1004#mainEXIT_accept_S3true >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1686#L1109-1-D268true [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 620#L1109-1_accept_S3true 
[2023-01-16 04:04:26,100 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:04:26,101 INFO  L85        PathProgramCache]: Analyzing trace with hash -1319625880, now seen corresponding path program 1 times
[2023-01-16 04:04:26,113 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:04:26,113 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [887295121]
[2023-01-16 04:04:26,113 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:04:26,114 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:04:26,307 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:26,972 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:27,004 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,211 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:27,239 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,278 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:27,280 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,294 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:27,295 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,298 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 159
[2023-01-16 04:04:27,300 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,390 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 164
[2023-01-16 04:04:27,402 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,422 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:27,425 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,440 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:27,443 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,464 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 24
[2023-01-16 04:04:27,467 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,470 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 199
[2023-01-16 04:04:27,477 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,481 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 204
[2023-01-16 04:04:27,486 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,496 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 223
[2023-01-16 04:04:27,521 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,555 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:27,566 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,587 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:27,590 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,593 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:27,595 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,597 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 159
[2023-01-16 04:04:27,600 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,603 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 164
[2023-01-16 04:04:27,610 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,619 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:27,622 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,624 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:27,627 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,629 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 24
[2023-01-16 04:04:27,631 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,634 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 199
[2023-01-16 04:04:27,638 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,640 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 204
[2023-01-16 04:04:27,643 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:27,648 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:04:27,648 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:04:27,649 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [887295121]
[2023-01-16 04:04:27,649 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [887295121] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:04:27,650 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:04:27,650 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2023-01-16 04:04:27,652 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [2077913535]
[2023-01-16 04:04:27,653 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:04:27,659 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:04:27,661 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:04:27,716 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2023-01-16 04:04:27,716 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=37, Invalid=95, Unknown=0, NotChecked=0, Total=132
[2023-01-16 04:04:27,723 INFO  L87              Difference]: Start difference. First operand  has 2026 states, 1674 states have (on average 1.1081242532855435) internal successors, (1855), 1551 states have internal predecessors, (1855), 238 states have call successors, (238), 238 states have call predecessors, (238), 114 states have return successors, (711), 237 states have call predecessors, (711), 237 states have call successors, (711) Second operand  has 12 states, 12 states have (on average 33.166666666666664) internal successors, (398), 4 states have internal predecessors, (398), 3 states have call successors, (23), 9 states have call predecessors, (23), 3 states have return successors, (22), 4 states have call predecessors, (22), 3 states have call successors, (22)
[2023-01-16 04:04:38,258 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:04:38,258 INFO  L93              Difference]: Finished difference Result 3465 states and 4176 transitions.
[2023-01-16 04:04:38,260 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 28 states. 
[2023-01-16 04:04:38,266 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3465 states and 4176 transitions.
[2023-01-16 04:04:38,286 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:38,307 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3465 states to 2928 states and 3557 transitions.
[2023-01-16 04:04:38,308 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 208
[2023-01-16 04:04:38,309 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 208
[2023-01-16 04:04:38,309 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2928 states and 3557 transitions.
[2023-01-16 04:04:38,318 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:04:38,318 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2928 states and 3557 transitions.
[2023-01-16 04:04:38,335 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2928 states and 3557 transitions.
[2023-01-16 04:04:38,374 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2928 to 2005.
[2023-01-16 04:04:38,376 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 2005 states, 1659 states have (on average 1.103676913803496) internal successors, (1831), 1536 states have internal predecessors, (1831), 235 states have call successors, (235), 235 states have call predecessors, (235), 111 states have return successors, (234), 234 states have call predecessors, (234), 234 states have call successors, (234)
[2023-01-16 04:04:38,380 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2005 states to 2005 states and 2300 transitions.
[2023-01-16 04:04:38,381 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 2005 states and 2300 transitions.
[2023-01-16 04:04:38,381 INFO  L399   stractBuchiCegarLoop]: Abstraction has 2005 states and 2300 transitions.
[2023-01-16 04:04:38,381 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 2 ============
[2023-01-16 04:04:38,381 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2005 states and 2300 transitions.
[2023-01-16 04:04:38,386 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:38,386 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:04:38,386 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:04:38,388 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:38,389 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:38,392 INFO  L752   eck$LassoCheckResult]: Stem: 6652#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7432#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6530#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6653#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6479#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8333#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7001#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 6570#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 6571#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 8439#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7996#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7997#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 6581#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 6582#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 8064#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 8298#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 7057#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 7058#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 7822#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 7725#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 7726#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 8337#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 6558#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 6559#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 8349#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 8350#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 8408#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 8077#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 8078#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 6868#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 6869#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 7086#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 7087#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 8287#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 7321#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 7322#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 7090#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 6778#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 6779#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 8255#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 8171#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 8010#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 6772#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 6773#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 8260#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 8261#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 8321#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 8166#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 8027#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 8028#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 8438#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 8167#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 8168#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 8195#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 8196#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 7451#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 7452#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 7976#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 7823#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 7824#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 8429#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 7867#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 7547#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 7548#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 7992#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 7314#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 7315#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 7920#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 7323#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 7324#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 8063#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 8051#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 7126#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 7127#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 7715#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 7801#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 7136#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 7137#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 8224#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 6754#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 6755#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 8076#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 7769#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 7770#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 8254#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 7375#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7082#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 7083#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 7394#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 8044#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 8045#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 7982#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 7983#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 8155#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 7463#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 7464#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 7897#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 8026#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 7893#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 7894#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 8083#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 8084#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 8411#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 8382#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 8383#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 7872#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 6478#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 6480#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 8213#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 8214#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 7510#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 7511#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 7558#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 7559#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 6593#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 6594#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 6634#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 7184#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 7179#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 7180#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 8225#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 7225#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 7151#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 7119#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 6769#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 6534#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 6535#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 6815#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 6816#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 7332#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 6970#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 6968#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 6969#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 7640#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 6756#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 6757#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 7891#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 7064#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 7065#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 6762#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 6763#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 7465#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 7466#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 7944#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 8361#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 8418#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 7421#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 7422#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8144#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7274#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6583#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6584#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7012#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7820#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7641#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 7642#L1240_T0_init [5819] L1240_T0_init-->L1240-1_T0_init: Formula: (not (= v_hdr.ethernet.etherType_20 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_20}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_20}  AuxVars[]  AssignedVars[] 7011#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7013#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7516#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7462#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7356#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7192#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7162#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7161#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7163#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8052#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7948#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6441#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8300#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6591#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 6592#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 7209#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 7685#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 7686#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 6793#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8053#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8133#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 8034#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 6792#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6794#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6802#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6614#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6613#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6615#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 7869#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 7870#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8299#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 7895#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 7896#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 8322#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8328#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 8202#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7858#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7859#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8018#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7682#L647_T0_init [4598] L647_T0_init-->L649_T0_init: Formula: (and (= v_hdr.ipv4.ttl_20 1) v_hdr.tcp.valid_27 v_hdr.ipv4.valid_17)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_27, hdr.ipv4.valid=v_hdr.ipv4.valid_17, hdr.ipv4.ttl=v_hdr.ipv4.ttl_20}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_27, hdr.ipv4.valid=v_hdr.ipv4.valid_17, hdr.ipv4.ttl=v_hdr.ipv4.ttl_20}  AuxVars[]  AssignedVars[] 6654#L649_T0_init [3921] L649_T0_init-->L649-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6655#L649-1_T0_init [4994] L649-1_T0_init-->L650_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8082#L650_T0_init [5324] L650_T0_init-->L652_T0_init: Formula: (= v_standard_metadata.ingress_port_10 v_standard_metadata.egress_spec_16)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_10}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_10, standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7043#L652_T0_init [4119] L652_T0_init-->L653_T0_init: Formula: (= v_standard_metadata.ingress_port_13 v_standard_metadata.egress_port_16)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16, standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7044#L653_T0_init [4678] L653_T0_init-->L654_T0_init: Formula: v_forward_18  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 6507#L654_T0_init [3850] L654_T0_init-->L655_T0_init: Formula: (= v_hdr.ethernet.srcAddr_20 v_tmp_mac_0_14)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_20}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_20, tmp_mac_0=v_tmp_mac_0_14}  AuxVars[]  AssignedVars[tmp_mac_0] 6508#L655_T0_init [5000] L655_T0_init-->L656_T0_init: Formula: (= v_hdr.ethernet.srcAddr_19 v_hdr.ethernet.dstAddr_20)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_20}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_19, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_20}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 8097#L656_T0_init [5307] L656_T0_init-->L657_T0_init: Formula: (= v_hdr.ethernet.dstAddr_19 v_tmp_mac_0_13)  InVars {tmp_mac_0=v_tmp_mac_0_13}  OutVars{tmp_mac_0=v_tmp_mac_0_13, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 7505#L657_T0_init [4451] L657_T0_init-->L658_T0_init: Formula: (= v_hdr.ipv4_icmp_10 v_hdr.ipv4_3)  InVars {hdr.ipv4=v_hdr.ipv4_3}  OutVars{hdr.ipv4=v_hdr.ipv4_3, hdr.ipv4_icmp=v_hdr.ipv4_icmp_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 7506#L658_T0_init [5697] L658_T0_init-->L660_T0_init: Formula: (= v_hdr.ipv4.srcAddr_11 v_hdr.ipv4_icmp.dstAddr_13)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_13, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 6476#L660_T0_init [3835] L660_T0_init-->L661_T0_init: Formula: (= (select v_switch_ip_0_4 0) v_hdr.ipv4_icmp.srcAddr_11)  InVars {switch_ip_0=v_switch_ip_0_4}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_11, switch_ip_0=v_switch_ip_0_4}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 6477#L661_T0_init [5270] L661_T0_init-->L662_T0_init: Formula: (= v_hdr.ipv4_icmp.protocol_14 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 8103#L662_T0_init [5013] L662_T0_init-->L663_T0_init: Formula: (= v_hdr.ipv4_icmp.ttl_12 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 7349#L663_T0_init [4323] L663_T0_init-->L664_T0_init: Formula: (= v_hdr.ipv4_icmp.totalLen_14 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 6602#L664_T0_init [3897] L664_T0_init-->L665_T0_init: Formula: (= v_hdr.icmp.type_14 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_14}  AuxVars[]  AssignedVars[hdr.icmp.type] 6603#L665_T0_init [4646] L665_T0_init-->L1083_T0_init: Formula: (= v_hdr.icmp.code_12 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_12}  AuxVars[]  AssignedVars[hdr.icmp.code] 6442#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8228#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6978#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6470#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7942#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7943#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6469#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6471#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7357#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7856#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7857#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7378#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7379#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8204#L1094_T0_init [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 6529#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 6531#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 8173#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 8317#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 8236#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 8030#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 8031#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7740#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7741#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 8358#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6638#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7277#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6462#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7393#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7093#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 7094#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 8016#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 8422#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7443#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7444#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 8334#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 7806#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 7807#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 8175#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 8107#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 8108#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 8182#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 8330#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 8331#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 7477#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 6992#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 6993#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 8344#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 7051#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 7052#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 7220#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 7154#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 7155#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 7434#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 7062#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 7063#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 7251#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 7194#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 7195#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 7644#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 7645#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 8269#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 8270#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 8274#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 7369#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 7370#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 7868#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 7561#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 7017#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 7018#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 6836#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 6837#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 7318#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 7319#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 7528#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 6914#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 6915#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 8313#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 7591#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 7592#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 7385#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 7354#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 7352#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 7353#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 7813#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 7543#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 7544#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 6625#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 6626#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 6774#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 6775#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 7572#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 7794#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 7877#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 7834#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 7835#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 7363#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 7364#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 7749#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 8059#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 6461#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 6463#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 8362#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 7676#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 7677#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 6464#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 6465#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 6901#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 7199#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7200#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 8001#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 7932#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 6937#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 6938#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 7381#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 8419#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 7969#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 7261#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 7262#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 8245#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 8416#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 7059#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 7060#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 7557#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 7884#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 7885#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 8207#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 8208#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 7606#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 7607#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 8023#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 6997#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 6998#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 8161#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 8162#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 8372#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 8323#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 8080#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 8081#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 7246#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 7140#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 7141#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 6532#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 6533#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 7275#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 7276#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 7478#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 8256#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 8427#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 7691#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 7692#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 8339#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 7865#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 7361#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 7362#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 8039#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 8019#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 8020#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 8347#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 6813#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 6814#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 7482#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 7481#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 6472#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 6473#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 7761#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 7499#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 7230#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 7231#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 7380#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 8384#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6971#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6972#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7483#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7871#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6555#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7545#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7401#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 6554#L1240_accept_S2 [3873] L1240_accept_S2-->L1240-1_accept_S2: Formula: (not (= v_hdr.ethernet.etherType_22 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_22}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_22}  AuxVars[]  AssignedVars[] 6557#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6861#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7562#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7968#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8336#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8222#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6851#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6852#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7222#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8074#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8386#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6450#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6866#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6867#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 7292#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 7293#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 7573#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 7574#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 7296#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7295#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7297#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 8352#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 8005#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7689#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7690#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6650#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6667#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6668#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 7338#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 7841#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7880#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 7337#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 7339#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 7488#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7467#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 7468#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7491#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6649#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6651#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7459#L647_accept_S2 [4419] L647_accept_S2-->L649_accept_S2: Formula: (and (= v_hdr.ipv4.ttl_24 1) v_hdr.tcp.valid_31 v_hdr.ipv4.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_31, hdr.ipv4.valid=v_hdr.ipv4.valid_21, hdr.ipv4.ttl=v_hdr.ipv4.ttl_24}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_31, hdr.ipv4.valid=v_hdr.ipv4.valid_21, hdr.ipv4.ttl=v_hdr.ipv4.ttl_24}  AuxVars[]  AssignedVars[] 7460#L649_accept_S2 [4609] L649_accept_S2-->L649-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6552#L649-1_accept_S2 [3874] L649-1_accept_S2-->L650_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6553#L650_accept_S2 [4307] L650_accept_S2-->L652_accept_S2: Formula: (= v_standard_metadata.ingress_port_11 v_standard_metadata.egress_spec_17)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_11}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_11, standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 6587#L652_accept_S2 [3889] L652_accept_S2-->L653_accept_S2: Formula: (= v_standard_metadata.ingress_port_15 v_standard_metadata.egress_port_18)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18, standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 6588#L653_accept_S2 [5511] L653_accept_S2-->L654_accept_S2: Formula: v_forward_20  InVars {}  OutVars{forward=v_forward_20}  AuxVars[]  AssignedVars[forward] 8190#L654_accept_S2 [5129] L654_accept_S2-->L655_accept_S2: Formula: (= v_hdr.ethernet.srcAddr_18 v_tmp_mac_0_10)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_18}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_18, tmp_mac_0=v_tmp_mac_0_10}  AuxVars[]  AssignedVars[tmp_mac_0] 7935#L655_accept_S2 [4812] L655_accept_S2-->L656_accept_S2: Formula: (= v_hdr.ethernet.srcAddr_21 v_hdr.ethernet.dstAddr_21)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_21}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_21, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_21}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 7936#L656_accept_S2 [5483] L656_accept_S2-->L657_accept_S2: Formula: (= v_hdr.ethernet.dstAddr_18 v_tmp_mac_0_12)  InVars {tmp_mac_0=v_tmp_mac_0_12}  OutVars{tmp_mac_0=v_tmp_mac_0_12, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 7879#L657_accept_S2 [4773] L657_accept_S2-->L658_accept_S2: Formula: (= v_hdr.ipv4_icmp_11 v_hdr.ipv4_4)  InVars {hdr.ipv4=v_hdr.ipv4_4}  OutVars{hdr.ipv4=v_hdr.ipv4_4, hdr.ipv4_icmp=v_hdr.ipv4_icmp_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 7703#L658_accept_S2 [4621] L658_accept_S2-->L660_accept_S2: Formula: (= v_hdr.ipv4.srcAddr_9 v_hdr.ipv4_icmp.dstAddr_11)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_11, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 7704#L660_accept_S2 [5637] L660_accept_S2-->L661_accept_S2: Formula: (= v_hdr.ipv4_icmp.srcAddr_13 (select v_switch_ip_0_6 0))  InVars {switch_ip_0=v_switch_ip_0_6}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_13, switch_ip_0=v_switch_ip_0_6}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 7555#L661_accept_S2 [4494] L661_accept_S2-->L662_accept_S2: Formula: (= v_hdr.ipv4_icmp.protocol_13 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 7397#L662_accept_S2 [4372] L662_accept_S2-->L663_accept_S2: Formula: (= v_hdr.ipv4_icmp.ttl_13 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 7398#L663_accept_S2 [4563] L663_accept_S2-->L664_accept_S2: Formula: (= v_hdr.ipv4_icmp.totalLen_12 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 7639#L664_accept_S2 [5354] L664_accept_S2-->L665_accept_S2: Formula: (= v_hdr.icmp.type_12 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_12}  AuxVars[]  AssignedVars[hdr.icmp.type] 6916#L665_accept_S2 [4048] L665_accept_S2-->L1083_accept_S2: Formula: (= v_hdr.icmp.code_13 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_13}  AuxVars[]  AssignedVars[hdr.icmp.code] 6453#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6454#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7979#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7839#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7838#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7840#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8137#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7657#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6685#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7707#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6684#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6686#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7805#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7546#L1094_accept_S2 [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 6639#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 7706#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 7956#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 7578#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 7287#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 6941#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 6819#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6820#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7173#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 7174#L1109-1_accept_S3 
[2023-01-16 04:04:38,395 INFO  L754   eck$LassoCheckResult]: Loop: 7174#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6444#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8147#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6467#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8279#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8292#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 7523#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 7524#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 8100#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7109#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7110#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 7512#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 7513#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 6665#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 6666#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 6940#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 7800#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 7825#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 7826#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 6645#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 6646#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 7368#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 6909#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 6910#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 7848#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 8243#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 8271#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 7201#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 7202#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 8011#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 8069#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 8316#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 8191#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 8192#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 8420#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 7241#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 7242#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 8186#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 8187#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 7827#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 7756#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 7037#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 6621#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 6622#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 8151#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 8152#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 8280#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 8281#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 8115#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 6635#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 6636#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 7164#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 7165#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 8043#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 8381#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 7501#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 7079#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 6966#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 6967#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 8341#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 8065#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 8066#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 8335#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 6697#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 6656#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 6657#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 6751#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 7331#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 7678#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 7760#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 8149#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 7034#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 6889#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 6695#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 6696#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 7892#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 8221#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 6823#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 6824#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 7038#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 7039#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 6745#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 6746#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 7135#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 7866#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7325#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 7326#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 7565#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 7922#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 6776#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 6777#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 7613#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 7614#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 6466#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 6468#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 7650#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 8145#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 8146#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 8432#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 7853#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 7854#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 6953#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 6954#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 7196#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 8174#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 8413#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 8326#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 8327#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 7095#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 7096#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 6522#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 6523#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 7358#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 7359#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 7971#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 7972#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 8098#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 7229#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 6798#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 6799#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 6925#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 7264#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 7265#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 7566#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 8142#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 7365#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 7366#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 7633#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 7634#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 8340#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 7236#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 7237#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 8417#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 6487#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 6488#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 7836#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 6911#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 6912#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 6723#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 6724#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 7722#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 7723#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 7790#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 7791#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 7861#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 7768#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 6715#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6716#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6443#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6445#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6698#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7284#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7991#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7889#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 7890#L1240_accept_S3 [5464] L1240_accept_S3-->L1240-1_accept_S3: Formula: (not (= v_hdr.ethernet.etherType_18 2048))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_18}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_18}  AuxVars[]  AssignedVars[] 7285#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7925#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7203#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7204#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7395#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7396#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6857#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6856#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6858#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7990#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6843#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6447#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6926#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6927#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 8049#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 7831#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 6663#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 6664#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 6536#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6537#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7738#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 7739#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 6980#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8237#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8238#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6502#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 6961#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6501#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 6503#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 6717#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7384#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 6560#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 6561#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 7970#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8377#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 8075#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7795#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7744#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7745#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6896#L647_accept_S3 [4036] L647_accept_S3-->L649_accept_S3: Formula: (and (= v_hdr.ipv4.ttl_22 1) v_hdr.tcp.valid_29 v_hdr.ipv4.valid_19)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_29, hdr.ipv4.valid=v_hdr.ipv4.valid_19, hdr.ipv4.ttl=v_hdr.ipv4.ttl_22}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_29, hdr.ipv4.valid=v_hdr.ipv4.valid_19, hdr.ipv4.ttl=v_hdr.ipv4.ttl_22}  AuxVars[]  AssignedVars[] 6897#L649_accept_S3 [5914] L649_accept_S3-->L649-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8276#L649-1_accept_S3 [5269] L649-1_accept_S3-->L650_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8277#L650_accept_S3 [5359] L650_accept_S3-->L652_accept_S3: Formula: (= v_standard_metadata.ingress_port_12 v_standard_metadata.egress_spec_18)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12, standard_metadata.egress_spec=v_standard_metadata.egress_spec_18}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7695#L652_accept_S3 [4612] L652_accept_S3-->L653_accept_S3: Formula: (= v_standard_metadata.ingress_port_14 v_standard_metadata.egress_port_17)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17, standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7696#L653_accept_S3 [5889] L653_accept_S3-->L654_accept_S3: Formula: v_forward_19  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 7309#L654_accept_S3 [4290] L654_accept_S3-->L655_accept_S3: Formula: (= v_hdr.ethernet.srcAddr_17 v_tmp_mac_0_9)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_17}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_17, tmp_mac_0=v_tmp_mac_0_9}  AuxVars[]  AssignedVars[tmp_mac_0] 6619#L655_accept_S3 [3905] L655_accept_S3-->L656_accept_S3: Formula: (= v_hdr.ethernet.srcAddr_22 v_hdr.ethernet.dstAddr_22)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_22}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_22, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_22}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 6620#L656_accept_S3 [5764] L656_accept_S3-->L657_accept_S3: Formula: (= v_hdr.ethernet.dstAddr_17 v_tmp_mac_0_11)  InVars {tmp_mac_0=v_tmp_mac_0_11}  OutVars{tmp_mac_0=v_tmp_mac_0_11, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_17}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 8046#L657_accept_S3 [4944] L657_accept_S3-->L658_accept_S3: Formula: (= v_hdr.ipv4_icmp_12 v_hdr.ipv4_5)  InVars {hdr.ipv4=v_hdr.ipv4_5}  OutVars{hdr.ipv4=v_hdr.ipv4_5, hdr.ipv4_icmp=v_hdr.ipv4_icmp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 7437#L658_accept_S3 [4403] L658_accept_S3-->L660_accept_S3: Formula: (= v_hdr.ipv4.srcAddr_10 v_hdr.ipv4_icmp.dstAddr_12)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_12, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 7438#L660_accept_S3 [5550] L660_accept_S3-->L661_accept_S3: Formula: (= (select v_switch_ip_0_5 0) v_hdr.ipv4_icmp.srcAddr_12)  InVars {switch_ip_0=v_switch_ip_0_5}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_12, switch_ip_0=v_switch_ip_0_5}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 7327#L661_accept_S3 [4305] L661_accept_S3-->L662_accept_S3: Formula: (= v_hdr.ipv4_icmp.protocol_12 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 7328#L662_accept_S3 [5491] L662_accept_S3-->L663_accept_S3: Formula: (= v_hdr.ipv4_icmp.ttl_14 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 7138#L663_accept_S3 [4172] L663_accept_S3-->L664_accept_S3: Formula: (= v_hdr.ipv4_icmp.totalLen_13 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 7139#L664_accept_S3 [5752] L664_accept_S3-->L665_accept_S3: Formula: (= v_hdr.icmp.type_13 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_13}  AuxVars[]  AssignedVars[hdr.icmp.type] 8126#L665_accept_S3 [5044] L665_accept_S3-->L1083_accept_S3: Formula: (= v_hdr.icmp.code_14 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_14}  AuxVars[]  AssignedVars[hdr.icmp.code] 7124#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7812#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7775#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7233#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8288#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7232#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7234#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7286#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7002#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7003#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7456#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7457#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6713#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 6714#L1094_accept_S3 [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 6807#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 6808#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 7771#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 7772#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 7965#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 7960#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 7961#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7980#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7981#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 7174#L1109-1_accept_S3 
[2023-01-16 04:04:38,395 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:04:38,396 INFO  L85        PathProgramCache]: Analyzing trace with hash -2075314412, now seen corresponding path program 1 times
[2023-01-16 04:04:38,396 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:04:38,396 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1718392066]
[2023-01-16 04:04:38,396 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:04:38,396 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:04:38,422 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,587 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:38,604 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,699 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:38,709 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,730 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:38,732 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,753 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:38,754 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,756 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 159
[2023-01-16 04:04:38,758 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,846 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 164
[2023-01-16 04:04:38,857 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,876 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:38,877 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,888 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:38,889 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,895 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:38,896 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,897 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 212
[2023-01-16 04:04:38,898 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,898 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 217
[2023-01-16 04:04:38,899 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,902 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 236
[2023-01-16 04:04:38,921 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,935 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:38,941 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,951 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:38,952 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,954 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:38,955 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,956 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 159
[2023-01-16 04:04:38,958 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,959 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 164
[2023-01-16 04:04:38,964 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,968 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:38,969 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,970 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:38,971 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,972 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:38,972 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,973 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 212
[2023-01-16 04:04:38,973 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,974 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 217
[2023-01-16 04:04:38,975 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:38,976 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:04:38,977 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:04:38,977 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1718392066]
[2023-01-16 04:04:38,977 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1718392066] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:04:38,977 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:04:38,977 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2023-01-16 04:04:38,977 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1657270372]
[2023-01-16 04:04:38,977 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:04:38,978 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:04:38,979 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:04:38,979 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2023-01-16 04:04:38,979 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=45, Invalid=111, Unknown=0, NotChecked=0, Total=156
[2023-01-16 04:04:38,979 INFO  L87              Difference]: Start difference. First operand 2005 states and 2300 transitions. cyclomatic complexity: 297 Second operand  has 13 states, 13 states have (on average 32.61538461538461) internal successors, (424), 5 states have internal predecessors, (424), 4 states have call successors, (23), 9 states have call predecessors, (23), 5 states have return successors, (22), 4 states have call predecessors, (22), 4 states have call successors, (22)
[2023-01-16 04:04:58,197 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:04:58,197 INFO  L93              Difference]: Finished difference Result 3734 states and 4515 transitions.
[2023-01-16 04:04:58,198 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 30 states. 
[2023-01-16 04:04:58,198 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3734 states and 4515 transitions.
[2023-01-16 04:04:58,217 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:58,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3734 states to 2999 states and 3623 transitions.
[2023-01-16 04:04:58,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 196
[2023-01-16 04:04:58,234 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 196
[2023-01-16 04:04:58,234 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2999 states and 3623 transitions.
[2023-01-16 04:04:58,238 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:04:58,238 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2999 states and 3623 transitions.
[2023-01-16 04:04:58,241 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2999 states and 3623 transitions.
[2023-01-16 04:04:58,267 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2999 to 2005.
[2023-01-16 04:04:58,269 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 2005 states, 1659 states have (on average 1.100060277275467) internal successors, (1825), 1536 states have internal predecessors, (1825), 235 states have call successors, (235), 235 states have call predecessors, (235), 111 states have return successors, (234), 234 states have call predecessors, (234), 234 states have call successors, (234)
[2023-01-16 04:04:58,273 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2005 states to 2005 states and 2294 transitions.
[2023-01-16 04:04:58,274 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 2005 states and 2294 transitions.
[2023-01-16 04:04:58,274 INFO  L399   stractBuchiCegarLoop]: Abstraction has 2005 states and 2294 transitions.
[2023-01-16 04:04:58,274 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 3 ============
[2023-01-16 04:04:58,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2005 states and 2294 transitions.
[2023-01-16 04:04:58,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:04:58,281 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:04:58,281 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:04:58,286 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:58,286 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:04:58,290 INFO  L752   eck$LassoCheckResult]: Stem: 13404#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14185#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13283#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13405#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13230#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15085#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13754#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 13322#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 13323#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 15192#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 14749#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 14750#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 13333#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 13334#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 14817#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 15050#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 13810#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 13811#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 14575#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 14478#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 14479#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 15089#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 13310#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 13311#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 15101#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 15102#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 15160#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 14830#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 14831#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 13621#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 13622#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 13837#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 13838#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 15039#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 14074#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 14075#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 13843#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 13530#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 13531#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 15007#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 14922#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 14763#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 13524#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 13525#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 15012#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 15013#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 15073#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 14919#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 14780#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 14781#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 15191#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 14920#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 14921#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 14947#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 14948#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 14204#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 14205#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 14729#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 14576#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 14577#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 15181#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 14620#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 14299#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 14300#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 14745#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 14067#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 14068#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 14673#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 14076#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 14077#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 14816#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 14804#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 13879#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 13880#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 14468#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 14554#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 13889#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 13890#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 14976#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 13503#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 13504#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 14829#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 14521#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 14522#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 15006#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 14128#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 13832#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 13833#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 14147#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 14797#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 14798#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 14735#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 14736#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 14908#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 14216#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 14217#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 14650#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 14779#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 14645#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 14646#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 14836#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 14837#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 15163#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 15134#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 15135#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 14625#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 13229#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 13231#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 14966#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 14967#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 14263#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 14264#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 14311#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 14312#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 13345#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 13346#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 13386#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 13937#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 13932#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 13933#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 14977#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 13978#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 13904#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 13872#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 13520#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 13287#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 13288#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 13567#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 13568#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 14085#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 13723#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 13721#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 13722#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 14393#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 13508#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 13509#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 14642#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 13817#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 13818#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 13514#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 13515#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 14218#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 14219#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 14697#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 15113#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 15171#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 14174#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 14175#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14897#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14027#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13335#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13336#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13765#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14572#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14394#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 14395#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 13320#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14155#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14156#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 13960#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 13319#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13321#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14706#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 13912#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14687#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15097#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13911#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13913#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13946#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14936#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14452#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13608#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13609#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14694#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13764#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13766#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14269#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14215#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14109#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13945#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13915#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13914#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13916#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14805#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14701#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13194#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15052#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13341#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 13342#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 13962#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 14438#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 14439#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 13545#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14806#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14886#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 14787#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 13544#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13546#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13554#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13364#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13363#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13365#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 14622#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 14623#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15051#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 14648#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 14649#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 15074#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15080#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 14955#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14611#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14612#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14771#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14435#L647_T0_init [4598] L647_T0_init-->L649_T0_init: Formula: (and (= v_hdr.ipv4.ttl_20 1) v_hdr.tcp.valid_27 v_hdr.ipv4.valid_17)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_27, hdr.ipv4.valid=v_hdr.ipv4.valid_17, hdr.ipv4.ttl=v_hdr.ipv4.ttl_20}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_27, hdr.ipv4.valid=v_hdr.ipv4.valid_17, hdr.ipv4.ttl=v_hdr.ipv4.ttl_20}  AuxVars[]  AssignedVars[] 13406#L649_T0_init [3921] L649_T0_init-->L649-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13407#L649-1_T0_init [4994] L649-1_T0_init-->L650_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14835#L650_T0_init [5324] L650_T0_init-->L652_T0_init: Formula: (= v_standard_metadata.ingress_port_10 v_standard_metadata.egress_spec_16)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_10}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_10, standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 13796#L652_T0_init [4119] L652_T0_init-->L653_T0_init: Formula: (= v_standard_metadata.ingress_port_13 v_standard_metadata.egress_port_16)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16, standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 13797#L653_T0_init [4678] L653_T0_init-->L654_T0_init: Formula: v_forward_18  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 13257#L654_T0_init [3850] L654_T0_init-->L655_T0_init: Formula: (= v_hdr.ethernet.srcAddr_20 v_tmp_mac_0_14)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_20}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_20, tmp_mac_0=v_tmp_mac_0_14}  AuxVars[]  AssignedVars[tmp_mac_0] 13258#L655_T0_init [5000] L655_T0_init-->L656_T0_init: Formula: (= v_hdr.ethernet.srcAddr_19 v_hdr.ethernet.dstAddr_20)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_20}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_19, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_20}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 14850#L656_T0_init [5307] L656_T0_init-->L657_T0_init: Formula: (= v_hdr.ethernet.dstAddr_19 v_tmp_mac_0_13)  InVars {tmp_mac_0=v_tmp_mac_0_13}  OutVars{tmp_mac_0=v_tmp_mac_0_13, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 14258#L657_T0_init [4451] L657_T0_init-->L658_T0_init: Formula: (= v_hdr.ipv4_icmp_10 v_hdr.ipv4_3)  InVars {hdr.ipv4=v_hdr.ipv4_3}  OutVars{hdr.ipv4=v_hdr.ipv4_3, hdr.ipv4_icmp=v_hdr.ipv4_icmp_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 14259#L658_T0_init [5697] L658_T0_init-->L660_T0_init: Formula: (= v_hdr.ipv4.srcAddr_11 v_hdr.ipv4_icmp.dstAddr_13)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_13, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 13232#L660_T0_init [3835] L660_T0_init-->L661_T0_init: Formula: (= (select v_switch_ip_0_4 0) v_hdr.ipv4_icmp.srcAddr_11)  InVars {switch_ip_0=v_switch_ip_0_4}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_11, switch_ip_0=v_switch_ip_0_4}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 13233#L661_T0_init [5270] L661_T0_init-->L662_T0_init: Formula: (= v_hdr.ipv4_icmp.protocol_14 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 14856#L662_T0_init [5013] L662_T0_init-->L663_T0_init: Formula: (= v_hdr.ipv4_icmp.ttl_12 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 14101#L663_T0_init [4323] L663_T0_init-->L664_T0_init: Formula: (= v_hdr.ipv4_icmp.totalLen_14 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 13354#L664_T0_init [3897] L664_T0_init-->L665_T0_init: Formula: (= v_hdr.icmp.type_14 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_14}  AuxVars[]  AssignedVars[hdr.icmp.type] 13355#L665_T0_init [4646] L665_T0_init-->L1083_T0_init: Formula: (= v_hdr.icmp.code_12 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_12}  AuxVars[]  AssignedVars[hdr.icmp.code] 13195#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14981#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13731#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13220#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14695#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14696#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13219#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13221#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14110#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14609#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14610#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14131#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14132#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14956#L1094_T0_init [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 13282#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 13284#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 14926#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 15069#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 14988#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 14783#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 14784#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14493#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14494#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 15110#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13390#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14030#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13215#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14146#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13846#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 13847#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 14769#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 15175#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 14196#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 14197#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 15086#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 14559#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 14560#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 14927#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 14860#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 14861#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 14935#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 15082#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 15083#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 14230#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 13745#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 13746#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 15096#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 13804#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 13805#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 13973#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 13907#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 13908#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 14187#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 13815#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 13816#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 14004#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 13947#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 13948#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 14397#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 14398#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 15021#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 15022#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 15026#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 14122#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 14123#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 14621#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 14314#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 13767#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 13768#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 13588#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 13589#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 14071#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 14072#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 14281#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 13667#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 13668#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 15065#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 14344#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 14345#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 14138#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 14107#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 14105#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 14106#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 14566#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 14296#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 14297#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 13377#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 13378#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 13526#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 13527#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 14325#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 14547#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 14630#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 14587#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 14588#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 14116#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 14117#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 14502#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 14812#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 13214#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 13216#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 15114#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 14429#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 14430#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 13217#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 13218#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 13654#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 13952#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 13953#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 14754#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 14685#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 13690#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 13691#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 14134#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 15172#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 14722#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 14014#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 14015#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 14997#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 15169#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 13812#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 13813#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 14310#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 14637#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 14638#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 14960#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 14961#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 14357#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 14358#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 14776#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 13750#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 13751#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 14914#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 14915#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 15124#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 15075#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 14833#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 14834#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 13999#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 13893#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 13894#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 13285#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 13286#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 14028#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 14029#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 14231#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 15008#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 15180#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 14444#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 14445#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 15091#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 14618#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 14114#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 14115#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 14792#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 14772#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 14773#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 15099#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 13565#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 13566#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 14235#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 14234#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 13225#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 13226#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 14514#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 14252#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 13983#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 13984#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 14133#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 15136#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13724#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13725#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14236#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14624#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13306#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14298#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14154#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 13305#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 13307#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14140#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14365#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 14994#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 13511#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13510#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13512#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 14551#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15053#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14708#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14550#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14552#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13596#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13597#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15167#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15168#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15121#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15122#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13613#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13614#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14315#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14721#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15088#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14975#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13603#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13604#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13975#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14825#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15138#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13200#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13619#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13620#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 14045#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 14046#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 14326#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 14327#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 14049#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14048#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14050#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 15104#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 14758#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14442#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14443#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13402#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13419#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13420#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 14091#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 14591#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14632#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 14090#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 14092#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 14241#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14220#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 14221#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14244#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13401#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13403#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14212#L647_accept_S2 [4419] L647_accept_S2-->L649_accept_S2: Formula: (and (= v_hdr.ipv4.ttl_24 1) v_hdr.tcp.valid_31 v_hdr.ipv4.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_31, hdr.ipv4.valid=v_hdr.ipv4.valid_21, hdr.ipv4.ttl=v_hdr.ipv4.ttl_24}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_31, hdr.ipv4.valid=v_hdr.ipv4.valid_21, hdr.ipv4.ttl=v_hdr.ipv4.ttl_24}  AuxVars[]  AssignedVars[] 14213#L649_accept_S2 [4609] L649_accept_S2-->L649-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13308#L649-1_accept_S2 [3874] L649-1_accept_S2-->L650_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13309#L650_accept_S2 [4307] L650_accept_S2-->L652_accept_S2: Formula: (= v_standard_metadata.ingress_port_11 v_standard_metadata.egress_spec_17)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_11}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_11, standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 13339#L652_accept_S2 [3889] L652_accept_S2-->L653_accept_S2: Formula: (= v_standard_metadata.ingress_port_15 v_standard_metadata.egress_port_18)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18, standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 13340#L653_accept_S2 [5511] L653_accept_S2-->L654_accept_S2: Formula: v_forward_20  InVars {}  OutVars{forward=v_forward_20}  AuxVars[]  AssignedVars[forward] 14943#L654_accept_S2 [5129] L654_accept_S2-->L655_accept_S2: Formula: (= v_hdr.ethernet.srcAddr_18 v_tmp_mac_0_10)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_18}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_18, tmp_mac_0=v_tmp_mac_0_10}  AuxVars[]  AssignedVars[tmp_mac_0] 14688#L655_accept_S2 [4812] L655_accept_S2-->L656_accept_S2: Formula: (= v_hdr.ethernet.srcAddr_21 v_hdr.ethernet.dstAddr_21)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_21}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_21, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_21}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 14689#L656_accept_S2 [5483] L656_accept_S2-->L657_accept_S2: Formula: (= v_hdr.ethernet.dstAddr_18 v_tmp_mac_0_12)  InVars {tmp_mac_0=v_tmp_mac_0_12}  OutVars{tmp_mac_0=v_tmp_mac_0_12, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 14633#L657_accept_S2 [4773] L657_accept_S2-->L658_accept_S2: Formula: (= v_hdr.ipv4_icmp_11 v_hdr.ipv4_4)  InVars {hdr.ipv4=v_hdr.ipv4_4}  OutVars{hdr.ipv4=v_hdr.ipv4_4, hdr.ipv4_icmp=v_hdr.ipv4_icmp_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 14456#L658_accept_S2 [4621] L658_accept_S2-->L660_accept_S2: Formula: (= v_hdr.ipv4.srcAddr_9 v_hdr.ipv4_icmp.dstAddr_11)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_11, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 14457#L660_accept_S2 [5637] L660_accept_S2-->L661_accept_S2: Formula: (= v_hdr.ipv4_icmp.srcAddr_13 (select v_switch_ip_0_6 0))  InVars {switch_ip_0=v_switch_ip_0_6}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_13, switch_ip_0=v_switch_ip_0_6}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 14308#L661_accept_S2 [4494] L661_accept_S2-->L662_accept_S2: Formula: (= v_hdr.ipv4_icmp.protocol_13 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 14150#L662_accept_S2 [4372] L662_accept_S2-->L663_accept_S2: Formula: (= v_hdr.ipv4_icmp.ttl_13 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 14151#L663_accept_S2 [4563] L663_accept_S2-->L664_accept_S2: Formula: (= v_hdr.ipv4_icmp.totalLen_12 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 14392#L664_accept_S2 [5354] L664_accept_S2-->L665_accept_S2: Formula: (= v_hdr.icmp.type_12 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_12}  AuxVars[]  AssignedVars[hdr.icmp.type] 13669#L665_accept_S2 [4048] L665_accept_S2-->L1083_accept_S2: Formula: (= v_hdr.icmp.code_13 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_13}  AuxVars[]  AssignedVars[hdr.icmp.code] 13206#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13207#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14732#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14593#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14592#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14594#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14890#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14410#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13439#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14460#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13438#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13440#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14558#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14301#L1094_accept_S2 [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 13391#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 14459#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 14709#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 14331#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 14040#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 13694#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 13571#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13572#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13930#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 13931#L1109-1_accept_S3 
[2023-01-16 04:04:58,293 INFO  L754   eck$LassoCheckResult]: Loop: 13931#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13197#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14900#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13223#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15031#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15045#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 14276#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 14277#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 14853#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 13863#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 13864#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 14265#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 14266#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 13417#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 13418#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 13693#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 14553#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 14578#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 14579#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 13397#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 13398#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 14121#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 13662#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 13663#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 14603#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 14995#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 15023#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 13954#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 13955#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 14764#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 14823#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 15068#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 14944#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 14945#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 15173#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 13994#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 13995#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 14940#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 14941#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 14580#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 14509#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 13790#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 13373#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 13374#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 14904#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 14905#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 15032#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 15033#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 14868#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 13387#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 13388#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 13917#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 13918#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 14796#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 15133#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 14254#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 13836#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 13719#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 13720#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 15093#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 14818#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 14819#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 15087#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 13449#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 13410#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 13411#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 13505#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 14084#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 14431#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 14513#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 14902#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 13787#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 13648#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 13447#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 13448#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 14647#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 14974#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 13575#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 13576#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 13791#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 13792#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 13497#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 13498#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 13888#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 14619#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 14078#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 14079#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 14318#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 14675#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 13528#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 13529#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 14367#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 14368#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 13222#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 13224#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 14403#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 14898#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 14899#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 15185#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 14607#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 14608#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 13706#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 13707#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 13949#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 14928#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 15165#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 15078#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 15079#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 13850#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 13851#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 13275#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 13276#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 14111#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 14112#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 14724#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 14725#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 14851#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 13982#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 13550#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 13551#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 13678#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 14017#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 14018#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 14319#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 14896#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 14118#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 14119#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 14387#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 14388#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 15092#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 13989#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 13990#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 15170#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 13240#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 13241#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 14589#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 13664#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 13665#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 13478#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 13479#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 14476#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 14477#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 14543#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 14544#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 14614#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 14523#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 13467#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13468#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13196#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13198#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13450#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14037#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 14744#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14643#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 14644#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 13537#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13715#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13536#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 13538#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 13273#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15156#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14730#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 13272#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13274#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14651#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14652#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14496#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13958#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13959#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15131#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15132#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14978#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14036#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14038#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14680#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13956#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13957#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14148#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14149#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13611#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13610#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13612#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14743#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13595#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13204#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13679#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13680#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 14803#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 14584#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 13415#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 13416#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 13289#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13290#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14491#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 14492#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 13733#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14990#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14991#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13260#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13714#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13259#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 13261#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 13469#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14137#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 13312#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 13313#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 14723#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15130#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 14828#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14548#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14497#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14498#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13649#L647_accept_S3 [4036] L647_accept_S3-->L649_accept_S3: Formula: (and (= v_hdr.ipv4.ttl_22 1) v_hdr.tcp.valid_29 v_hdr.ipv4.valid_19)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_29, hdr.ipv4.valid=v_hdr.ipv4.valid_19, hdr.ipv4.ttl=v_hdr.ipv4.ttl_22}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_29, hdr.ipv4.valid=v_hdr.ipv4.valid_19, hdr.ipv4.ttl=v_hdr.ipv4.ttl_22}  AuxVars[]  AssignedVars[] 13650#L649_accept_S3 [5914] L649_accept_S3-->L649-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15028#L649-1_accept_S3 [5269] L649-1_accept_S3-->L650_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15029#L650_accept_S3 [5359] L650_accept_S3-->L652_accept_S3: Formula: (= v_standard_metadata.ingress_port_12 v_standard_metadata.egress_spec_18)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12, standard_metadata.egress_spec=v_standard_metadata.egress_spec_18}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 14448#L652_accept_S3 [4612] L652_accept_S3-->L653_accept_S3: Formula: (= v_standard_metadata.ingress_port_14 v_standard_metadata.egress_port_17)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17, standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 14449#L653_accept_S3 [5889] L653_accept_S3-->L654_accept_S3: Formula: v_forward_19  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 14062#L654_accept_S3 [4290] L654_accept_S3-->L655_accept_S3: Formula: (= v_hdr.ethernet.srcAddr_17 v_tmp_mac_0_9)  InVars {hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_17}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_17, tmp_mac_0=v_tmp_mac_0_9}  AuxVars[]  AssignedVars[tmp_mac_0] 13371#L655_accept_S3 [3905] L655_accept_S3-->L656_accept_S3: Formula: (= v_hdr.ethernet.srcAddr_22 v_hdr.ethernet.dstAddr_22)  InVars {hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_22}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_22, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_22}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 13372#L656_accept_S3 [5764] L656_accept_S3-->L657_accept_S3: Formula: (= v_hdr.ethernet.dstAddr_17 v_tmp_mac_0_11)  InVars {tmp_mac_0=v_tmp_mac_0_11}  OutVars{tmp_mac_0=v_tmp_mac_0_11, hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_17}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 14799#L657_accept_S3 [4944] L657_accept_S3-->L658_accept_S3: Formula: (= v_hdr.ipv4_icmp_12 v_hdr.ipv4_5)  InVars {hdr.ipv4=v_hdr.ipv4_5}  OutVars{hdr.ipv4=v_hdr.ipv4_5, hdr.ipv4_icmp=v_hdr.ipv4_icmp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp] 14190#L658_accept_S3 [4403] L658_accept_S3-->L660_accept_S3: Formula: (= v_hdr.ipv4.srcAddr_10 v_hdr.ipv4_icmp.dstAddr_12)  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_12, hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 14191#L660_accept_S3 [5550] L660_accept_S3-->L661_accept_S3: Formula: (= (select v_switch_ip_0_5 0) v_hdr.ipv4_icmp.srcAddr_12)  InVars {switch_ip_0=v_switch_ip_0_5}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_12, switch_ip_0=v_switch_ip_0_5}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 14080#L661_accept_S3 [4305] L661_accept_S3-->L662_accept_S3: Formula: (= v_hdr.ipv4_icmp.protocol_12 1)  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 14081#L662_accept_S3 [5491] L662_accept_S3-->L663_accept_S3: Formula: (= v_hdr.ipv4_icmp.ttl_14 64)  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 13891#L663_accept_S3 [4172] L663_accept_S3-->L664_accept_S3: Formula: (= v_hdr.ipv4_icmp.totalLen_13 56)  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 13892#L664_accept_S3 [5752] L664_accept_S3-->L665_accept_S3: Formula: (= v_hdr.icmp.type_13 11)  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_13}  AuxVars[]  AssignedVars[hdr.icmp.type] 14879#L665_accept_S3 [5044] L665_accept_S3-->L1083_accept_S3: Formula: (= v_hdr.icmp.code_14 0)  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_14}  AuxVars[]  AssignedVars[hdr.icmp.code] 13877#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14565#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14528#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13986#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15040#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13985#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13987#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14039#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13755#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 13756#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14209#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14210#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13465#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 13466#L1094_accept_S3 [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 13559#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 13560#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 14524#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 14525#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 14718#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 14713#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 14714#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14733#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 14734#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 13931#L1109-1_accept_S3 
[2023-01-16 04:04:58,293 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:04:58,294 INFO  L85        PathProgramCache]: Analyzing trace with hash -1501893565, now seen corresponding path program 1 times
[2023-01-16 04:04:58,294 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:04:58,294 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [502201342]
[2023-01-16 04:04:58,295 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:04:58,295 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:04:58,345 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,558 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:58,577 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,664 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:58,676 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,696 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:58,698 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,706 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:58,707 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,715 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:04:58,716 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,721 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:04:58,722 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,723 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:58,723 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,724 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:04:58,725 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,820 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:04:58,829 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,844 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:58,846 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,864 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:58,866 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,875 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:58,876 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,878 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 230
[2023-01-16 04:04:58,879 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,881 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:04:58,882 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,885 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 254
[2023-01-16 04:04:58,900 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,917 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:58,924 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,933 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:04:58,936 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,938 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:04:58,939 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,940 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:04:58,941 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,942 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:04:58,943 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,943 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:58,944 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,944 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:04:58,945 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,947 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:04:58,950 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,955 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:04:58,956 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,958 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:04:58,959 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,960 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:04:58,960 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,961 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 230
[2023-01-16 04:04:58,962 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,963 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:04:58,964 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:04:58,965 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:04:58,966 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:04:58,966 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [502201342]
[2023-01-16 04:04:58,966 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [502201342] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:04:58,966 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:04:58,966 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2023-01-16 04:04:58,966 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1711716976]
[2023-01-16 04:04:58,966 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:04:58,967 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:04:58,967 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:04:58,967 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2023-01-16 04:04:58,967 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=51, Invalid=131, Unknown=0, NotChecked=0, Total=182
[2023-01-16 04:04:58,967 INFO  L87              Difference]: Start difference. First operand 2005 states and 2294 transitions. cyclomatic complexity: 291 Second operand  has 14 states, 14 states have (on average 32.0) internal successors, (448), 4 states have internal predecessors, (448), 3 states have call successors, (29), 11 states have call predecessors, (29), 3 states have return successors, (28), 4 states have call predecessors, (28), 3 states have call successors, (28)
[2023-01-16 04:05:14,023 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:05:14,023 INFO  L93              Difference]: Finished difference Result 2988 states and 3612 transitions.
[2023-01-16 04:05:14,023 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 23 states. 
[2023-01-16 04:05:14,024 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2988 states and 3612 transitions.
[2023-01-16 04:05:14,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:05:14,041 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2988 states to 2814 states and 3431 transitions.
[2023-01-16 04:05:14,042 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 132
[2023-01-16 04:05:14,042 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 132
[2023-01-16 04:05:14,042 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2814 states and 3431 transitions.
[2023-01-16 04:05:14,045 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:05:14,045 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2814 states and 3431 transitions.
[2023-01-16 04:05:14,047 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2814 states and 3431 transitions.
[2023-01-16 04:05:14,064 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2814 to 1957.
[2023-01-16 04:05:14,066 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1957 states, 1611 states have (on average 1.101179391682185) internal successors, (1774), 1488 states have internal predecessors, (1774), 235 states have call successors, (235), 235 states have call predecessors, (235), 111 states have return successors, (234), 234 states have call predecessors, (234), 234 states have call successors, (234)
[2023-01-16 04:05:14,068 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1957 states to 1957 states and 2243 transitions.
[2023-01-16 04:05:14,069 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1957 states and 2243 transitions.
[2023-01-16 04:05:14,069 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1957 states and 2243 transitions.
[2023-01-16 04:05:14,069 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 4 ============
[2023-01-16 04:05:14,069 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1957 states and 2243 transitions.
[2023-01-16 04:05:14,072 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:05:14,072 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:05:14,072 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:05:14,074 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:14,074 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:14,077 INFO  L752   eck$LassoCheckResult]: Stem: 19542#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20309#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19429#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19543#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19380#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21187#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19888#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 19466#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 19467#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 21294#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 20861#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 20862#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 19477#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 19478#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 20926#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 21153#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 19942#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 19943#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 20688#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 20591#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 20592#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 21191#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 19454#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 19455#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 21203#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 21204#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 21262#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 20939#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 20940#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 19757#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 19758#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 19971#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 19972#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 21141#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 20203#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 20204#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 19975#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 19666#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 19667#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 21111#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 21029#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 20873#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 19660#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 19661#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 21116#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 21117#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 21175#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 21024#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 20890#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 20891#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 21293#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 21025#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 21026#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 21052#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 21053#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 20326#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 20327#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 20839#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 20689#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 20690#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 21284#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 20733#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 20419#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 20420#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 20855#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 20196#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 20197#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 20785#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 20205#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 20206#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 20925#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 20913#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 20011#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 20012#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 20581#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 20667#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 20021#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 20022#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 21080#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 19639#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 19640#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 20938#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 20634#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 20635#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 21109#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 20254#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 19964#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 19965#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 20273#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 20907#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 20908#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 20845#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20846#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 21013#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 20337#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 20338#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 20762#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 20889#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 20757#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 20758#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 20944#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 20945#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 21265#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 21236#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 21237#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 20738#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 19379#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 19381#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 21070#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 21071#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 20382#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 20383#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 20429#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 20430#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 19487#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 19488#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 19522#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 20066#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 20062#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 20063#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 21081#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 20108#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 20034#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 20004#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 19654#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 19433#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 19434#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 19703#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 19704#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 20212#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 19857#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 19855#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 19856#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 20510#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 19644#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 19645#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 20754#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 19949#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 19950#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 19650#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 19651#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 20339#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 20340#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 20807#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 21215#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 21273#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 20298#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 20299#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21002#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20157#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19479#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19480#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19899#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20685#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20511#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20512#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 19464#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20279#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20280#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 20090#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 19463#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19465#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20816#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20042#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20799#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21199#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20041#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20043#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20076#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21041#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20566#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19744#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19745#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20804#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19898#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19900#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20388#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20335#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20235#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20075#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20045#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20044#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20046#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20914#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20811#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19344#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21154#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19483#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 19484#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 20092#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 20555#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 20556#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 19681#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20915#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20987#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 20896#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 19680#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19682#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19690#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19504#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19503#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19505#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 20735#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 20736#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21152#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 20760#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 20761#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 21176#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21182#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 21058#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20724#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20725#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20881#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20552#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 19916#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 19693#L671_T0_init [3995] L671_T0_init-->L671-1_T0_init: Formula: (or (not v_hdr.tcp.valid_26) (not (= v_meta.use_blink_31 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_26, meta.use_blink=v_meta.use_blink_31}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_26, meta.use_blink=v_meta.use_blink_31}  AuxVars[]  AssignedVars[] 19589#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 19873#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 19874#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 20031#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 20032#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 21249#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 21251#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 21286#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 19683#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 19685#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20414#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20800#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 20276#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 20277#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20141#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19343#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19345#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21085#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19863#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19370#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20805#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20806#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19369#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19371#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20236#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20722#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20723#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20255#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20256#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21060#L1094_T0_init [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 19428#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 19430#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 21031#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 21171#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 21092#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 20893#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 20894#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20606#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20607#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 21212#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19528#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20160#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19365#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20272#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19978#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 19979#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 20879#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 21277#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 20318#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 20319#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 21188#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 20672#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 20673#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 21032#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 20966#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 20967#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 21039#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 21184#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 21185#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 20351#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 19879#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 19880#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 21197#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 19934#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 19935#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 20101#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 20037#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 20038#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 20311#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 19947#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 19948#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 20133#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 20077#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 20078#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 20514#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 20515#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 21125#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 21126#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 21130#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 20248#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 20249#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 20734#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 20431#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 19901#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 19902#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 19724#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 19725#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 20200#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 20201#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 20398#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 19802#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 19803#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 21167#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 20462#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 20463#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 20264#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 20233#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 20231#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 20232#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 20679#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 20415#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 20416#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 19515#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 19516#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 19662#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 19663#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 20443#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 20660#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 20743#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 20700#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 20701#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 20242#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 20243#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 20615#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 20921#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 19364#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 19366#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 21216#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 20546#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 20547#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 19367#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 19368#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 19789#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 20082#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 20083#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 20864#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 20797#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 19824#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 19825#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 20260#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 21274#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 20832#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 20144#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 20145#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 21101#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 21271#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 19944#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 19945#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 20428#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 20748#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 20749#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 21064#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 21065#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 20475#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 20476#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 20886#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 19884#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 19885#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 21019#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 21020#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 21226#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 21177#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 20942#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 20943#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 20129#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 20023#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 20024#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 19431#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 19432#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 20158#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 20159#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 20352#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 21112#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 21281#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 20561#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 20562#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 21192#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 20731#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 20240#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 20241#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 20902#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 20882#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 20883#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 21201#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 19701#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 19702#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 20356#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 20355#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 19375#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 19376#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 20627#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 20372#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 20113#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 20114#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 20259#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 21238#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19858#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19859#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20357#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20737#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19450#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20417#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20278#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 19449#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 19451#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20266#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20483#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 21098#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 19647#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19646#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19648#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20664#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21155#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20818#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20663#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20665#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19732#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19733#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21269#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21270#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21223#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21224#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19749#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19750#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20432#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20831#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21190#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21079#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19739#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19740#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20105#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20934#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21240#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19350#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19755#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19756#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 20175#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 20176#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 20444#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 20445#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 20179#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20178#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20180#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 21206#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 20868#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20558#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20559#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19540#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19555#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19556#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 20218#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 20704#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20745#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 20217#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 20219#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 20362#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20341#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 20342#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20365#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19539#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19541#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20334#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 19751#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 19752#L671_accept_S2 [5678] L671_accept_S2-->L671-1_accept_S2: Formula: (or (not (= v_meta.use_blink_27 1)) (not v_hdr.tcp.valid_22))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_22, meta.use_blink=v_meta.use_blink_27}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_22, meta.use_blink=v_meta.use_blink_27}  AuxVars[]  AssignedVars[] 20540#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 20541#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 20790#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 20791#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 19675#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 19676#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 19493#L1047_accept_S2 [3895] L1047_accept_S2-->L1049_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_22 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  AuxVars[]  AssignedVars[] 19494#L1049_accept_S2 [4543] L1049_accept_S2-->L1057-2_accept_S2: Formula: (= (select v_next_hops_port_0_14 (mod (* (mod v_meta.id_168 4294967296) 3) 4294967296)) v_meta.next_hop_port_26)  InVars {next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168}  OutVars{next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168, meta.next_hop_port=v_meta.next_hop_port_26}  AuxVars[]  AssignedVars[meta.next_hop_port] 19887#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 20029#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20028#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20030#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 20353#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 20354#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21068#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20726#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19356#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19357#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20842#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20706#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20705#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20707#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20995#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20527#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19573#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20573#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19572#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19574#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20671#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20418#L1094_accept_S2 [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 19529#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 20572#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 20819#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 20449#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 20170#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 19828#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 19707#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19708#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20060#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 20061#L1109-1_accept_S3 
[2023-01-16 04:05:14,079 INFO  L754   eck$LassoCheckResult]: Loop: 20061#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19347#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21005#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19373#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21133#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21146#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 20395#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 20396#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 20960#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 19995#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 19996#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 20384#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 20385#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 19553#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 19554#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 19827#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 20666#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 20691#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 20692#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 19535#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 19536#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 20247#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 19797#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 19798#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 20716#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 21099#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 21127#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 20084#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 20085#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 20874#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 20931#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 21170#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 21048#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 21049#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 21275#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 20124#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 20125#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 21045#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 21046#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 20693#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 20622#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 19924#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 19511#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 19512#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 21009#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 21010#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 21134#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 21135#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 20974#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 19525#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 19526#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 20047#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 20048#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 20906#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 21235#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 20375#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 19968#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 19853#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 19854#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 21195#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 20927#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 20928#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 21189#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 19585#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 19544#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 19545#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 19641#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 20211#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 20548#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 20626#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 21007#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 19921#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 19784#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 19583#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 19584#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 20759#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 21078#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 19711#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 19712#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 19925#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 19926#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 19633#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 19634#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 20020#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 20732#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 20207#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 20208#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 20436#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 20787#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 19664#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 19665#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20484#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 20485#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 19372#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 19374#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 20520#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 21003#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 21004#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 21287#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 20720#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 20721#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 19840#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 19841#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 20079#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 21033#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 21267#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 21180#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 21181#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 19982#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 19983#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 19421#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 19422#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 20237#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 20238#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 20834#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 20835#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 20958#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 20112#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 19686#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 19687#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 19812#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 20147#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 20148#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 20437#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 21001#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 20244#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 20245#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 20504#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 20505#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 21194#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 20119#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 20120#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 21272#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 19388#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 19389#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 20702#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 19799#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 19800#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 19611#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 19612#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 20588#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 20589#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 20656#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 20657#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 20727#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 20636#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 19603#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19604#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19346#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19348#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19586#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20167#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20854#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20755#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20756#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 19673#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19849#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19672#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 19674#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 19417#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21258#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20840#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 19416#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19418#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20763#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20764#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20609#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20088#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20089#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21233#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21234#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21082#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20166#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20168#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20792#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20086#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20087#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20274#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20275#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19747#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19746#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19748#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20853#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19731#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19354#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19813#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19814#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 20912#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 20697#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 19551#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 19552#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 19435#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19436#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20604#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 20605#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 19867#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21094#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21095#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19403#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19848#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19402#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 19404#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 19605#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20263#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 19456#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 19457#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 20833#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21232#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 20937#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20661#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20610#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20611#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19785#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 19786#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 20456#L671_accept_S3 [4907] L671_accept_S3-->L671-1_accept_S3: Formula: (or (not v_hdr.tcp.valid_24) (not (= v_meta.use_blink_29 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_24, meta.use_blink=v_meta.use_blink_29}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_24, meta.use_blink=v_meta.use_blink_29}  AuxVars[]  AssignedVars[] 20885#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 21208#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 21209#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 21015#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 21016#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 19984#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 19986#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 20968#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 19538#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 20177#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21093#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21090#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 20209#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 20210#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 21172#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20008#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20009#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20678#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20641#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20116#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21142#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20115#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20117#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20169#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19889#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19890#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20331#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20332#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19601#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19602#L1094_accept_S3 [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 19695#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 19696#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 20637#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 20638#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 20828#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 20823#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 20824#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20843#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20844#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 20061#L1109-1_accept_S3 
[2023-01-16 04:05:14,079 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:05:14,079 INFO  L85        PathProgramCache]: Analyzing trace with hash 774380475, now seen corresponding path program 1 times
[2023-01-16 04:05:14,079 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:05:14,079 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1305700520]
[2023-01-16 04:05:14,080 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:05:14,080 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:05:14,104 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,272 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:14,282 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,364 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:14,370 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,391 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:14,394 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,404 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:14,405 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,415 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:14,417 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,425 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:14,426 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,428 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:14,429 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,430 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:14,431 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,484 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:14,490 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,524 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:14,525 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,537 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:14,539 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,547 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:14,548 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,559 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 39
[2023-01-16 04:05:14,560 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,562 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 232
[2023-01-16 04:05:14,563 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,564 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 237
[2023-01-16 04:05:14,565 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,569 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 256
[2023-01-16 04:05:14,584 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,603 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:14,609 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,617 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:14,619 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,620 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:14,621 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,622 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:14,623 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,624 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:14,624 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,625 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:14,626 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,626 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:14,628 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,629 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:14,634 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,639 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:14,640 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,674 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:14,675 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,676 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:14,677 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,678 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 39
[2023-01-16 04:05:14,679 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,680 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 232
[2023-01-16 04:05:14,681 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,681 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 237
[2023-01-16 04:05:14,682 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:14,684 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:05:14,684 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:05:14,684 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1305700520]
[2023-01-16 04:05:14,684 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1305700520] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:05:14,684 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:05:14,684 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2023-01-16 04:05:14,684 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [174130678]
[2023-01-16 04:05:14,685 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:05:14,685 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:05:14,685 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:05:14,685 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2023-01-16 04:05:14,685 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=59, Invalid=181, Unknown=0, NotChecked=0, Total=240
[2023-01-16 04:05:14,686 INFO  L87              Difference]: Start difference. First operand 1957 states and 2243 transitions. cyclomatic complexity: 288 Second operand  has 16 states, 16 states have (on average 28.0) internal successors, (448), 5 states have internal predecessors, (448), 4 states have call successors, (31), 12 states have call predecessors, (31), 4 states have return successors, (30), 4 states have call predecessors, (30), 4 states have call successors, (30)
[2023-01-16 04:05:31,188 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:05:31,188 INFO  L93              Difference]: Finished difference Result 2927 states and 3539 transitions.
[2023-01-16 04:05:31,189 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 30 states. 
[2023-01-16 04:05:31,190 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2927 states and 3539 transitions.
[2023-01-16 04:05:31,202 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:05:31,217 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2927 states to 2921 states and 3533 transitions.
[2023-01-16 04:05:31,217 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 144
[2023-01-16 04:05:31,217 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 144
[2023-01-16 04:05:31,217 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2921 states and 3533 transitions.
[2023-01-16 04:05:31,221 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:05:31,221 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2921 states and 3533 transitions.
[2023-01-16 04:05:31,223 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2921 states and 3533 transitions.
[2023-01-16 04:05:31,243 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2921 to 1957.
[2023-01-16 04:05:31,245 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1957 states, 1611 states have (on average 1.0993171942892612) internal successors, (1771), 1488 states have internal predecessors, (1771), 235 states have call successors, (235), 235 states have call predecessors, (235), 111 states have return successors, (234), 234 states have call predecessors, (234), 234 states have call successors, (234)
[2023-01-16 04:05:31,247 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1957 states to 1957 states and 2240 transitions.
[2023-01-16 04:05:31,248 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1957 states and 2240 transitions.
[2023-01-16 04:05:31,248 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1957 states and 2240 transitions.
[2023-01-16 04:05:31,248 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 5 ============
[2023-01-16 04:05:31,248 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1957 states and 2240 transitions.
[2023-01-16 04:05:31,252 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:05:31,252 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:05:31,252 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:05:31,254 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:31,254 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:31,259 INFO  L752   eck$LassoCheckResult]: Stem: 25633#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26400#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25520#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25634#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25471#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27278#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25979#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 25557#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 25558#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 27385#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 26950#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 26951#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 25568#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 25569#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 27017#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 27243#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 26033#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 26034#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 26779#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 26682#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 26683#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 27282#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 25545#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 25546#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 27294#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 27295#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 27353#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 27030#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 27031#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 25848#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 25849#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 26060#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 26061#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 27232#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 26294#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 26295#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 26066#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 25757#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 25758#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 27202#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 27118#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 26964#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 25751#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 25752#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 27207#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 27208#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 27266#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 27115#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 26980#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 26981#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 27384#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 27116#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 27117#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 27142#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 27143#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 26417#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 26418#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 26930#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 26780#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 26781#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 27374#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 26824#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 26509#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 26510#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 26946#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 26287#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 26288#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 26876#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 26296#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 26297#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 27016#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 27004#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 26102#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 26103#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 26672#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 26758#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 26112#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 26113#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 27171#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 25730#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 25731#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 27029#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 26725#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 26726#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 27201#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 26345#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 26055#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 26056#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 26364#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 26998#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 26999#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 26936#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 26937#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 27104#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 26428#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 26429#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 26853#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 26979#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 26848#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 26849#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 27035#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 27036#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 27356#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 27327#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 27328#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 26829#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 25470#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 25472#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 27161#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 27162#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 26473#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 26474#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 26520#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 26521#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 25578#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 25579#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 25615#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 26158#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 26153#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 26154#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 27172#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 26199#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 26125#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 26095#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 25747#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 25524#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 25525#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 25794#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 25795#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 26303#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 25948#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 25946#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 25947#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 26601#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 25735#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 25736#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 26845#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 26040#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 26041#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 25741#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 25742#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 26430#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 26431#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 26898#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 27306#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 27364#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 26389#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 26390#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27093#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26248#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25570#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25571#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25990#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26776#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26602#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 26603#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 25555#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26370#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26371#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 26181#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 25554#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25556#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26907#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 26133#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26890#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27290#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26132#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26134#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26167#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27132#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26658#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25835#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25836#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26895#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25989#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25991#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26479#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26427#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26326#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26166#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26136#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26135#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26137#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27005#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26902#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25435#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27245#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25574#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 25575#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 26183#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 26646#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 26647#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 25772#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27006#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27082#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 26987#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 25771#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25773#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25781#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25595#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25594#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25596#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 26826#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 26827#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27244#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 26851#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 26852#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 27267#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27273#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 27150#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26815#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26816#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26972#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26643#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 26007#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 25784#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 25785#L672_T0_init [4122] L672_T0_init-->L673_T0_init: Formula: (or (= v_hdr.tcp.syn_15 1) (= v_hdr.tcp.fin_31 1))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_15, hdr.tcp.fin=v_hdr.tcp.fin_31}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_15, hdr.tcp.fin=v_hdr.tcp.fin_31}  AuxVars[]  AssignedVars[] 25590#L673_T0_init [3898] L673_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_32 1)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_32}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 25591#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 25680#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 25964#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 25965#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 26122#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 26123#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 27340#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 27342#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 27377#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 25774#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 25776#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26505#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26893#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 26367#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 26368#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26232#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25434#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25436#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27176#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25956#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25461#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26896#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26897#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25460#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25462#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26327#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26813#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26814#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26348#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26349#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27151#L1094_T0_init [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 25519#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 25521#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 27122#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 27262#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 27183#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 26983#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 26984#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26697#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26698#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 27303#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25619#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26251#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25456#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26363#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26069#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 26070#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 26970#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 27368#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 26409#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 26410#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 27279#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 26763#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 26764#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 27123#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 27057#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 27058#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 27131#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 27275#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 27276#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 26442#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 25970#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 25971#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 27289#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 26027#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 26028#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 26194#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 26128#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 26129#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 26402#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 26038#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 26039#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 26225#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 26168#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 26169#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 26605#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 26606#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 27216#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 27217#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 27221#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 26339#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 26340#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 26825#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 26523#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 25992#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 25993#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 25815#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 25816#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 26291#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 26292#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 26491#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 25893#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 25894#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 27258#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 26553#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 26554#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 26355#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 26324#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 26322#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 26323#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 26770#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 26506#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 26507#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 25606#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 25607#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 25753#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 25754#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 26534#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 26751#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 26834#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 26791#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 26792#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 26333#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 26334#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 26706#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 27012#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 25455#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 25457#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 27307#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 26637#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 26638#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 25458#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 25459#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 25880#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 26173#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 26174#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 26955#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 26888#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 25915#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 25916#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 26351#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 27365#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 26923#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 26235#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 26236#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 27192#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 27362#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 26035#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 26036#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 26519#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 26840#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 26841#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 27155#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 27156#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 26566#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 26567#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 26976#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 25975#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 25976#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 27110#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 27111#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 27317#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 27268#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 27033#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 27034#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 26220#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 26114#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 26115#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 25522#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 25523#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 26249#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 26250#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 26443#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 27203#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 27373#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 26652#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 26653#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 27284#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 26822#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 26331#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 26332#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 26993#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 26973#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 26974#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 27292#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 25792#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 25793#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 26447#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 26446#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 25466#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 25467#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 26718#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 26464#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 26204#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 26205#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 26350#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 27329#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25949#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25950#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26448#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26828#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25543#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26508#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26369#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 25542#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 25544#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26357#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26574#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 27189#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 25738#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25737#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25739#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 26755#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27246#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26909#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26754#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26756#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25823#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25824#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27360#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27361#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27314#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27315#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25840#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25841#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26524#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26922#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27281#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27170#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25830#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25831#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26196#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27025#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27331#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25441#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25846#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25847#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 26266#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 26267#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 26535#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 26536#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 26270#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26269#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26271#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 27297#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 26959#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26650#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26651#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25631#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25646#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25647#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 26309#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 26795#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26836#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 26308#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 26310#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 26453#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26432#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 26433#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26456#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25630#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25632#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26425#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 25842#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 25843#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 27215#L672_accept_S2 [5246] L672_accept_S2-->L673_accept_S2: Formula: (or (= v_hdr.tcp.fin_29 1) (= v_hdr.tcp.syn_13 1))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  AuxVars[]  AssignedVars[] 26661#L673_accept_S2 [4620] L673_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_25 1)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_25}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 25854#L672-2_accept_S2 [4836] L672-2_accept_S2-->L671-1_accept_S2: Formula: (not (< 0 v_meta.tcp_payload_len_31))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_31}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_31}  AuxVars[]  AssignedVars[] 26631#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 26632#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 26881#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 26882#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 25766#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 25767#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 25580#L1047_accept_S2 [3895] L1047_accept_S2-->L1049_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_22 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  AuxVars[]  AssignedVars[] 25581#L1049_accept_S2 [4543] L1049_accept_S2-->L1057-2_accept_S2: Formula: (= (select v_next_hops_port_0_14 (mod (* (mod v_meta.id_168 4294967296) 3) 4294967296)) v_meta.next_hop_port_26)  InVars {next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168}  OutVars{next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168, meta.next_hop_port=v_meta.next_hop_port_26}  AuxVars[]  AssignedVars[meta.next_hop_port] 25978#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 26120#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26119#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26121#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 26444#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 26445#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27159#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26817#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25447#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25448#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26933#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26797#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26796#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26798#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27086#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26618#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25666#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26664#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25665#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25667#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26762#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26511#L1094_accept_S2 [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 25620#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 26663#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 26910#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 26540#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 26261#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 25919#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 25798#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25799#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26151#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 26152#L1109-1_accept_S3 
[2023-01-16 04:05:31,261 INFO  L754   eck$LassoCheckResult]: Loop: 26152#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25438#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27096#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25464#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27224#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27238#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 26486#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 26487#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 27051#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 26086#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 26087#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 26475#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 26476#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 25644#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 25645#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 25918#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 26757#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 26782#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 26783#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 25626#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 25627#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 26338#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 25888#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 25889#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 26807#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 27190#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 27218#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 26175#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 26176#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 26965#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 27023#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 27261#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 27139#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 27140#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 27366#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 26215#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 26216#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 27136#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 27137#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 26784#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 26713#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 26015#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 25602#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 25603#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 27100#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 27101#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 27225#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 27226#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 27065#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 25616#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 25617#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 26138#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 26139#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 26997#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 27326#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 26466#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 26059#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 25944#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 25945#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 27286#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 27018#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 27019#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 27280#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 25676#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 25637#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 25638#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 25732#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 26302#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 26639#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 26717#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 27098#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 26012#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 25875#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 25674#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 25675#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 26850#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 27169#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 25802#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 25803#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 26016#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 26017#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 25724#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 25725#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 26111#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 26823#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 26298#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 26299#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 26527#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 26878#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 25755#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 25756#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 26576#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 26577#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 25463#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 25465#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 26611#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 27094#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 27095#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 27378#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 26811#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 26812#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 25931#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 25932#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 26170#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 27124#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 27358#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 27271#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 27272#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 26073#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 26074#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 25512#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 25513#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 26328#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 26329#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 26925#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 26926#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 27049#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 26203#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 25777#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 25778#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 25903#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 26238#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 26239#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 26528#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 27092#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 26335#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 26336#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 26596#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 26597#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 27285#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 26210#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 26211#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 27363#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 25479#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 25480#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 26793#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 25890#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 25891#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 25705#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 25706#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 26680#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 26681#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 26747#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 26748#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 26818#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 26727#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 25694#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25695#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25437#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25439#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25677#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26258#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26945#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26846#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 26847#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 25764#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25940#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25763#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 25765#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 25510#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27349#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26931#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 25509#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25511#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26854#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26855#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26700#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26179#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26180#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27324#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27325#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27173#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26257#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26259#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26883#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26177#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26178#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26365#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26366#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25838#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25837#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25839#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26944#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25822#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25445#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25904#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25905#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 27003#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 26788#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 25642#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 25643#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 25526#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25527#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26695#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 26696#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 25958#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27185#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27186#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25497#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25939#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25496#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 25498#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 25696#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26354#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 25547#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 25548#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 26924#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27323#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 27028#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26752#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26701#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26702#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25876#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 25877#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 26547#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 26975#L672_accept_S3 [5336] L672_accept_S3-->L673_accept_S3: Formula: (or (= v_hdr.tcp.fin_27 1) (= v_hdr.tcp.syn_11 1))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_11, hdr.tcp.fin=v_hdr.tcp.fin_27}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_11, hdr.tcp.fin=v_hdr.tcp.fin_27}  AuxVars[]  AssignedVars[] 27200#L673_accept_S3 [5223] L673_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_24 1)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_24}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 26353#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 26990#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 27299#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 27300#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 27106#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 27107#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 26075#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 26077#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 27059#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 25629#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 26268#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27184#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27181#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 26300#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 26301#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 27264#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26099#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26100#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26769#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26732#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26207#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 27233#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26206#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26208#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26260#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25980#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 25981#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26422#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26423#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25692#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 25693#L1094_accept_S3 [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 25786#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 25787#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 26728#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 26729#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 26919#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 26914#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 26915#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26934#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 26935#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 26152#L1109-1_accept_S3 
[2023-01-16 04:05:31,262 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:05:31,262 INFO  L85        PathProgramCache]: Analyzing trace with hash -669881204, now seen corresponding path program 1 times
[2023-01-16 04:05:31,262 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:05:31,262 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [574231610]
[2023-01-16 04:05:31,263 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:05:31,263 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:05:31,296 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,522 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:31,540 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,617 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:31,622 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,636 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:31,637 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,644 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:31,645 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,651 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:31,654 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,665 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:31,666 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,669 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:31,670 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,671 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:31,672 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,718 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:31,725 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,740 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:31,741 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,749 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:31,751 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,759 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:31,760 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,769 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:05:31,771 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,773 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:05:31,774 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,775 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:05:31,777 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,780 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 259
[2023-01-16 04:05:31,802 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,824 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:31,831 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,840 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:31,842 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,844 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:31,880 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,886 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:31,887 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,888 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:31,888 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,889 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:31,890 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,891 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:31,891 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,893 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:31,897 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,901 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:31,902 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,903 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:31,904 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,905 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:31,906 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,907 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:05:31,908 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,909 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:05:31,910 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,911 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:05:31,912 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:31,914 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:05:31,914 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:05:31,914 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [574231610]
[2023-01-16 04:05:31,914 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [574231610] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:05:31,914 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:05:31,914 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2023-01-16 04:05:31,914 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1282775018]
[2023-01-16 04:05:31,915 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:05:31,915 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:05:31,915 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:05:31,916 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2023-01-16 04:05:31,916 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=54, Invalid=128, Unknown=0, NotChecked=0, Total=182
[2023-01-16 04:05:31,916 INFO  L87              Difference]: Start difference. First operand 1957 states and 2240 transitions. cyclomatic complexity: 285 Second operand  has 14 states, 14 states have (on average 32.42857142857143) internal successors, (454), 3 states have internal predecessors, (454), 2 states have call successors, (31), 12 states have call predecessors, (31), 2 states have return successors, (30), 2 states have call predecessors, (30), 2 states have call successors, (30)
[2023-01-16 04:05:54,563 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:05:54,563 INFO  L93              Difference]: Finished difference Result 5316 states and 6523 transitions.
[2023-01-16 04:05:54,564 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 36 states. 
[2023-01-16 04:05:54,564 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5316 states and 6523 transitions.
[2023-01-16 04:05:54,577 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-01-16 04:05:54,601 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5316 states to 5316 states and 6523 transitions.
[2023-01-16 04:05:54,602 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 288
[2023-01-16 04:05:54,602 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 288
[2023-01-16 04:05:54,602 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5316 states and 6523 transitions.
[2023-01-16 04:05:54,606 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:05:54,606 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 5316 states and 6523 transitions.
[2023-01-16 04:05:54,609 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5316 states and 6523 transitions.
[2023-01-16 04:05:54,648 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5316 to 1960.
[2023-01-16 04:05:54,650 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1960 states, 1614 states have (on average 1.0991325898389095) internal successors, (1774), 1491 states have internal predecessors, (1774), 235 states have call successors, (235), 235 states have call predecessors, (235), 111 states have return successors, (234), 234 states have call predecessors, (234), 234 states have call successors, (234)
[2023-01-16 04:05:54,653 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1960 states to 1960 states and 2243 transitions.
[2023-01-16 04:05:54,653 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1960 states and 2243 transitions.
[2023-01-16 04:05:54,653 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1960 states and 2243 transitions.
[2023-01-16 04:05:54,653 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 6 ============
[2023-01-16 04:05:54,653 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1960 states and 2243 transitions.
[2023-01-16 04:05:54,657 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:05:54,657 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:05:54,657 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:05:54,659 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:54,659 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:05:54,664 INFO  L752   eck$LassoCheckResult]: Stem: 34131#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34899#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34018#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34132#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33969#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35779#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34476#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 34055#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 34056#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 35886#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 35450#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 35451#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 34066#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 34067#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 35517#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 35744#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 34532#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 34533#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 35279#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 35182#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 35183#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 35783#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 34043#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 34044#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 35795#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 35796#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 35854#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 35530#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 35531#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 34346#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 34347#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 34559#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 34560#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 35733#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 34793#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 34794#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 34565#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 34255#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 34256#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 35703#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 35618#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 35464#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 34249#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 34250#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 35708#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 35709#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 35767#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 35615#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 35480#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 35481#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 35885#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 35616#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 35617#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 35641#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 35642#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 34916#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 34917#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 35430#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 35280#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 35281#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 35875#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 35324#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 35008#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 35009#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 35446#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 34786#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 34787#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 35376#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 34795#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 34796#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 35516#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 35504#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 34601#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 34602#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 35172#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 35258#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 34611#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 34612#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 35671#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 34228#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 34229#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 35529#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 35225#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 35226#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 35700#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 34844#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 34554#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 34555#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 34863#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 35498#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 35499#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 35436#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 35437#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 35604#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 34927#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 34928#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 35353#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 35479#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 35348#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 35349#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 35535#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 35536#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 35857#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 35828#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 35829#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 35329#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 33968#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 33970#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 35661#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 35662#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 34972#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 34973#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 35019#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 35020#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 34076#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 34077#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 34113#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 34657#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 34652#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 34653#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 35672#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 34698#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 34624#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 34594#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 34243#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 34022#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 34023#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 34292#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 34293#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 34802#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 34447#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 34445#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 34446#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 35100#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 34233#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 34234#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 35345#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 34539#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 34540#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 34239#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 34240#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 34929#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 34930#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 35398#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 35807#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 35865#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 34888#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 34889#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35593#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34747#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34068#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34069#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34489#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35276#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35101#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 35102#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 34053#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34869#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34870#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 34680#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 34052#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34054#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35407#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 34632#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35390#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35791#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34631#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34633#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34666#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35632#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35157#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34333#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34334#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35395#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34488#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34490#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34978#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34926#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34825#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34665#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34635#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34634#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34636#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35505#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35402#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33933#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35746#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34072#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 34073#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 34682#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 35145#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 35146#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 34270#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35506#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35580#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 35486#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 34269#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34271#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34279#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34093#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34092#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34094#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 35326#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 35327#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35745#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 35351#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 35352#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 35768#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35774#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 35649#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35315#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35316#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35472#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35142#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 34506#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 34282#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 34283#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 34390#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 34391#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 34178#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 34463#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 34464#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 34621#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 34622#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 35841#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 35843#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 35878#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 34272#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 34274#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35004#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35391#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 34866#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 34867#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34731#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33932#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33934#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35676#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34455#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33959#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35396#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35397#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33958#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33960#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34826#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35313#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35314#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34847#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34848#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35651#L1094_T0_init [5151] L1094_T0_init-->L1095-1_T0_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 34017#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 34019#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 35622#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 35763#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 35683#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 35483#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 35484#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35197#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35198#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 35804#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34117#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34750#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33954#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34862#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34568#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 34569#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 35470#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 35869#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 34908#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 34909#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 35780#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 35263#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 35264#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 35623#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 35557#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 35558#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 35631#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 35776#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 35777#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 34941#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 34469#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 34470#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 35789#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 34526#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 34527#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 34693#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 34627#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 34628#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 34901#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 34537#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 34538#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 34724#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 34667#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 34668#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 35104#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 35105#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 35717#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 35718#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 35722#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 34838#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 34839#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 35325#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 35022#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 34491#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 34492#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 34313#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 34314#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 34790#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 34791#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 34988#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 34392#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 34393#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 35759#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 35052#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 35053#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 34854#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 34823#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 34821#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 34822#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 35270#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 35005#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 35006#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 34104#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 34105#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 34251#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 34252#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 35033#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 35251#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 35334#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 35291#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 35292#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 34832#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 34833#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 35206#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 35512#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 33953#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 33955#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 35808#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 35136#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 35137#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 33956#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 33957#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 34378#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 34672#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 34673#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 35455#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 35388#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 34414#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 34415#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 34850#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 35866#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 35423#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 34734#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 34735#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 35692#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 35863#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 34534#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 34535#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 35018#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 35339#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 35340#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 35655#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 35656#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 35065#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 35066#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 35476#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 34474#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 34475#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 35610#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 35611#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 35818#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 35769#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 35533#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 35534#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 34719#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 34613#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 34614#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 34020#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 34021#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 34748#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 34749#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 34942#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 35704#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 35874#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 35151#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 35152#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 35785#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 35322#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 34830#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 34831#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 35493#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 35473#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 35474#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 35793#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 34290#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 34291#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 34946#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 34945#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 33964#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 33965#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 35218#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 34962#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 34703#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 34704#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 34849#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 35830#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34448#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34449#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34947#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35328#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34041#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35007#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34868#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 34040#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 34042#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34856#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35073#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 35689#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 34236#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34235#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34237#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 35255#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35747#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35409#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35254#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35256#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34321#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34322#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35861#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35862#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35815#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35816#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34338#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34339#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35023#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35422#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35782#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35670#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34328#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34329#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34695#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35525#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35832#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33939#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34344#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34345#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 34765#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 34766#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 35034#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 35035#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 34769#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34768#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34770#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 35798#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 35459#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35149#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35150#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34129#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34144#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34145#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 34808#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 35295#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35336#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 34807#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 34809#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 34952#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34931#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 34932#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34955#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34128#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34130#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34924#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 34340#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 34341#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 35716#L672_accept_S2 [5247] L672_accept_S2-->L676_accept_S2: Formula: (and (not (= v_hdr.tcp.fin_30 1)) (not (= v_hdr.tcp.syn_14 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  AuxVars[]  AssignedVars[] 34351#L676_accept_S2 [4029] L676_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_33 (mod (mod v_hdr.ipv4.totalLen_10 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10, meta.tcp_payload_len=v_meta.tcp_payload_len_33}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 34352#L672-2_accept_S2 [4836] L672-2_accept_S2-->L671-1_accept_S2: Formula: (not (< 0 v_meta.tcp_payload_len_31))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_31}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_31}  AuxVars[]  AssignedVars[] 35130#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 35131#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 35381#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 35382#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 34264#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 34265#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 34082#L1047_accept_S2 [3895] L1047_accept_S2-->L1049_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_22 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  AuxVars[]  AssignedVars[] 34083#L1049_accept_S2 [4543] L1049_accept_S2-->L1057-2_accept_S2: Formula: (= (select v_next_hops_port_0_14 (mod (* (mod v_meta.id_168 4294967296) 3) 4294967296)) v_meta.next_hop_port_26)  InVars {next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168}  OutVars{next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168, meta.next_hop_port=v_meta.next_hop_port_26}  AuxVars[]  AssignedVars[meta.next_hop_port] 34478#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 34619#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34618#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34620#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 34943#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 34944#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35659#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35317#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33945#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33946#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35433#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35297#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35296#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35298#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35586#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35117#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34164#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35164#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34163#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34165#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35262#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35010#L1094_accept_S2 [4489] L1094_accept_S2-->L1095-1_accept_S2: Formula: v_forward_29  InVars {forward=v_forward_29}  OutVars{forward=v_forward_29}  AuxVars[]  AssignedVars[] 34118#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 35163#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 35410#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 35039#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 34760#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 34418#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 34296#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34297#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34650#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 34651#L1109-1_accept_S3 
[2023-01-16 04:05:54,666 INFO  L754   eck$LassoCheckResult]: Loop: 34651#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33936#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35596#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33962#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35725#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35739#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 34985#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 34986#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 35551#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 34585#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 34586#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 34974#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 34975#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 34142#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 34143#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 34417#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 35257#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 35282#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 35283#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 34124#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 34125#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 34837#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 34386#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 34387#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 35307#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 35690#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 35719#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 34674#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 34675#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 35465#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 35523#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 35762#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 35639#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 35640#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 35867#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 34714#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 34715#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 35636#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 35637#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 35284#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 35213#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 34514#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 34100#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 34101#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 35600#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 35601#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 35726#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 35727#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 35565#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 34114#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 34115#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 34637#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 34638#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 35497#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 35827#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 34965#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 34558#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 34443#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 34444#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 35787#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 35518#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 35519#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 35781#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 34174#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 34135#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 34136#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 34230#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 34801#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 35138#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 35217#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 35598#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 34511#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 34373#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 34172#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 34173#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 35350#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 35669#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 34300#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 34301#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 34515#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 34516#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 34222#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 34223#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 34610#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 35323#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 34797#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 34798#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 35026#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 35378#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 34253#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 34254#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 35075#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 35076#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 33961#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 33963#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 35110#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 35594#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 35595#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 35879#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 35311#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 35312#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 34430#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 34431#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 34669#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 35624#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 35859#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 35772#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 35773#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 34572#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 34573#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 34010#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 34011#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 34827#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 34828#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 35425#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 35426#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 35549#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 34702#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 34275#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 34276#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 34402#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 34737#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 34738#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 35027#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 35592#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 34834#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 34835#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 35095#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 35096#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 35786#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 34709#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 34710#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 35864#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 33977#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 33978#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 35293#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 34388#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 34389#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 34203#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 34204#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 35180#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 35181#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 35247#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 35248#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 35318#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 35227#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 34192#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34193#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33935#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33937#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34175#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34757#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35445#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35346#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 35347#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 34262#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34439#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34261#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 34263#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 34008#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35850#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35431#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 34007#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34009#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35354#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35355#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35200#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34678#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34679#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35825#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35826#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35673#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34756#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34758#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35383#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34676#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34677#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34864#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34865#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34336#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34335#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34337#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35444#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34320#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33943#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34403#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34404#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 35503#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 35288#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 34140#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 34141#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 34024#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34025#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35195#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 35196#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 34457#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35685#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35686#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33992#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34438#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33991#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 33993#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 34194#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34853#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 34045#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 34046#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 35424#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35824#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 35528#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35252#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35201#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35202#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34374#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 34375#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 35047#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 35475#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 34851#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 34852#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 35489#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 35800#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 35801#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 35606#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 35607#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 34574#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 34576#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 35559#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 34127#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 34767#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35684#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35681#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 34799#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 34800#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35765#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34598#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34599#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35269#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35232#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34706#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 35734#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34705#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34707#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34759#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34479#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 34480#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34921#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34922#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34190#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 34191#L1094_accept_S3 [4342] L1094_accept_S3-->L1095-1_accept_S3: Formula: v_forward_27  InVars {forward=v_forward_27}  OutVars{forward=v_forward_27}  AuxVars[]  AssignedVars[] 34284#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 34285#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 35228#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 35229#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 35419#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 35414#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 35415#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35434#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 35435#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 34651#L1109-1_accept_S3 
[2023-01-16 04:05:54,667 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:05:54,667 INFO  L85        PathProgramCache]: Analyzing trace with hash -1240932599, now seen corresponding path program 1 times
[2023-01-16 04:05:54,667 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:05:54,668 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [448108939]
[2023-01-16 04:05:54,668 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:05:54,668 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:05:54,705 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:54,906 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:54,924 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,063 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:55,080 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,100 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:55,102 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,109 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:55,111 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,119 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:55,120 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,126 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:55,127 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,128 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:55,128 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,129 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:55,130 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,182 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:55,189 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,209 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:55,210 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,219 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:55,221 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,233 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:55,234 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,244 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:05:55,245 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,247 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:05:55,248 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,249 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:05:55,250 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,254 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 259
[2023-01-16 04:05:55,270 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,289 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:55,296 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,306 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:05:55,308 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,309 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:05:55,310 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,311 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:55,312 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,313 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:05:55,313 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,314 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:55,314 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,315 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:05:55,316 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,317 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:05:55,325 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,330 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:05:55,331 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,332 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:05:55,332 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,333 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:05:55,334 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,335 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:05:55,336 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,336 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:05:55,337 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,338 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:05:55,339 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:05:55,341 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:05:55,341 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:05:55,341 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [448108939]
[2023-01-16 04:05:55,341 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [448108939] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:05:55,342 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:05:55,342 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2023-01-16 04:05:55,342 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [229558147]
[2023-01-16 04:05:55,342 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:05:55,342 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:05:55,343 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:05:55,343 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2023-01-16 04:05:55,343 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=61, Invalid=149, Unknown=0, NotChecked=0, Total=210
[2023-01-16 04:05:55,343 INFO  L87              Difference]: Start difference. First operand 1960 states and 2243 transitions. cyclomatic complexity: 285 Second operand  has 15 states, 15 states have (on average 30.266666666666666) internal successors, (454), 4 states have internal predecessors, (454), 4 states have call successors, (31), 12 states have call predecessors, (31), 4 states have return successors, (30), 4 states have call predecessors, (30), 4 states have call successors, (30)
[2023-01-16 04:06:23,887 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:06:23,887 INFO  L93              Difference]: Finished difference Result 2922 states and 3544 transitions.
[2023-01-16 04:06:23,887 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2023-01-16 04:06:23,888 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2922 states and 3544 transitions.
[2023-01-16 04:06:23,897 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-01-16 04:06:23,909 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2922 states to 2922 states and 3544 transitions.
[2023-01-16 04:06:23,909 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 190
[2023-01-16 04:06:23,910 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 190
[2023-01-16 04:06:23,910 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2922 states and 3544 transitions.
[2023-01-16 04:06:23,913 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:06:23,913 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2922 states and 3544 transitions.
[2023-01-16 04:06:23,914 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2922 states and 3544 transitions.
[2023-01-16 04:06:23,931 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2922 to 2011.
[2023-01-16 04:06:23,932 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 2011 states, 1647 states have (on average 1.0971463266545234) internal successors, (1807), 1524 states have internal predecessors, (1807), 241 states have call successors, (241), 241 states have call predecessors, (241), 123 states have return successors, (246), 246 states have call predecessors, (246), 240 states have call successors, (246)
[2023-01-16 04:06:23,935 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2011 states to 2011 states and 2294 transitions.
[2023-01-16 04:06:23,935 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 2011 states and 2294 transitions.
[2023-01-16 04:06:23,935 INFO  L399   stractBuchiCegarLoop]: Abstraction has 2011 states and 2294 transitions.
[2023-01-16 04:06:23,935 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 7 ============
[2023-01-16 04:06:23,935 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2011 states and 2294 transitions.
[2023-01-16 04:06:23,938 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:06:23,939 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:06:23,939 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:06:23,940 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:06:23,940 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:06:23,944 INFO  L752   eck$LassoCheckResult]: Stem: 40218#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40987#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40105#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40219#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40056#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41875#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40563#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 40142#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 40143#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 41994#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 41544#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 41545#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 40153#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 40154#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 41611#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 41841#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 40619#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 40620#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 41370#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 41272#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 41273#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 41880#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 40130#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 40131#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 41894#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 41895#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 41958#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 41625#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 41626#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 40433#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 40434#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 40646#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 40647#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 41830#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 40882#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 40883#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 40650#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 40342#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 40343#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 41800#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 41715#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 41558#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 40336#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 40337#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 41805#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 41806#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 41864#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 41712#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 41574#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 41575#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 41993#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 41713#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 41714#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 41738#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 41739#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 41005#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 41006#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 41524#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 41371#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 41372#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 41982#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 41417#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 41097#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 41098#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 41540#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 40875#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 40876#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 41469#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 40884#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 40885#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 41610#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 41598#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 40688#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 40689#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 41262#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 41348#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 40698#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 40699#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 41768#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 40315#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 40316#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 41624#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 41315#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 41316#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 41797#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 40933#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 40641#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 40642#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 40952#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 41592#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 41593#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 41530#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 41531#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 41701#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 41016#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 41017#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 41446#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 41573#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 41441#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 41442#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 41630#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 41631#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 41961#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 41930#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 41931#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 41422#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 40055#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 40057#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 41758#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 41759#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 41061#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 41062#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 41108#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 41109#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 40163#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 40164#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 40198#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 40743#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 40739#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 40740#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 41769#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 40785#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 40711#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 40681#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 40330#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 40109#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 40110#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 40379#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 40380#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 40891#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 40534#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 40532#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 40533#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 41189#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 40320#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 40321#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 41438#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 40626#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 40627#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 40326#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 40327#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 41018#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 41019#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 41492#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 41907#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 41970#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 40977#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 40978#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41690#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40834#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40155#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40156#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40576#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41368#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41190#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 41191#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 40140#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40958#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40959#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 40767#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 40139#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40141#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41501#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 40719#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41483#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41889#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40718#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40720#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40753#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41729#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41246#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40420#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40421#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41488#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40575#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40577#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41067#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41014#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40914#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40752#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40722#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40721#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40723#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41599#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41496#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40020#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41843#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40159#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 40160#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 40769#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 41235#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 41236#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 40357#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41600#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41675#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 41580#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 40356#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40358#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40366#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40180#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40179#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40181#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 41419#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 41420#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41842#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 41444#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 41445#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 41865#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41871#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 41746#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41408#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41409#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41566#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41232#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 40593#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 40369#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 40370#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 40477#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 40478#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 40265#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 40550#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 40551#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 40708#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 40709#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 41943#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 41945#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 41985#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 40359#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 40361#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41093#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41484#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 40955#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 40956#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40818#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40019#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40021#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41773#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42007#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41490#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41489#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41491#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41972#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42005#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41406#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41405#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41407#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41947#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42003#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41748#L1094_T0_init [5150] L1094_T0_init-->L1096_T0_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 41430#L1096_T0_init [4774] L1096_T0_init-->L1095-1_T0_init: Formula: v_drop_40  InVars {}  OutVars{drop=v_drop_40}  AuxVars[]  AssignedVars[drop] 40104#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 40106#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 41719#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 41860#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 41780#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 41577#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 41578#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41287#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41288#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 41904#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40204#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40837#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40041#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40951#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40655#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 40656#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 41564#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 41975#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 40997#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 40998#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 41877#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 41354#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 41355#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 41720#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 41654#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 41655#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 41727#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 41873#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 41874#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 41030#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 40556#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 40557#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 41887#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 40611#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 40612#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 40778#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 40714#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 40715#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 40990#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 40624#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 40625#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 40810#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 40754#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 40755#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 41193#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 41194#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 41814#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 41815#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 41819#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 40927#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 40928#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 41418#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 41110#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 40578#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 40579#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 40400#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 40401#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 40879#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 40880#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 41077#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 40479#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 40480#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 41856#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 41141#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 41142#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 40943#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 40912#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 40910#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 40911#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 41362#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 41094#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 41095#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 40191#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 40192#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 40338#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 40339#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 41122#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 41341#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 41427#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 41383#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 41384#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 40921#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 40922#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 41296#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 41606#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 40040#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 40042#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 41908#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 41226#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 41227#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 40043#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 40044#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 40465#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 40759#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 40760#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 41549#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 41481#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 40501#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 40502#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 40939#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 41971#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 41517#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 40821#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 40822#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 41789#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 41968#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 40621#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 40622#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 41107#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 41432#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 41433#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 41752#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 41753#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 41154#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 41155#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 41570#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 40561#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 40562#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 41707#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 41708#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 41919#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 41866#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 41628#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 41629#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 40806#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 40700#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 40701#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 40107#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 40108#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 40835#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 40836#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 41031#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 41801#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 41980#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 41241#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 41242#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 41881#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 41415#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 40919#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 40920#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 41587#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 41567#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 41568#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 41892#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 40377#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 40378#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 41035#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 41034#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 40051#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 40052#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 41308#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 41051#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 40790#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 40791#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 40938#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 41932#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40535#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40536#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41036#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41421#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40126#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41096#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40957#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 40125#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 40127#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40945#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41162#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 41786#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 40323#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40322#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40324#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 41345#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41844#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41503#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41344#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41346#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40408#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40409#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41966#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41967#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41916#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41917#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40425#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40426#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41111#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41516#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41879#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41767#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40415#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40416#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40782#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41620#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41934#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40026#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40431#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40432#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 40854#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 40855#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 41123#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 41124#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 40858#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40857#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40859#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 41897#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 41553#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41238#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41239#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40216#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40231#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40232#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 40897#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 41387#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41429#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 40896#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 40898#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 41041#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41020#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 41021#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41044#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40215#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40217#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41013#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 40427#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 40428#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 41813#L672_accept_S2 [5247] L672_accept_S2-->L676_accept_S2: Formula: (and (not (= v_hdr.tcp.fin_30 1)) (not (= v_hdr.tcp.syn_14 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  AuxVars[]  AssignedVars[] 40438#L676_accept_S2 [4029] L676_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_33 (mod (mod v_hdr.ipv4.totalLen_10 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10, meta.tcp_payload_len=v_meta.tcp_payload_len_33}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 40439#L672-2_accept_S2 [4836] L672-2_accept_S2-->L671-1_accept_S2: Formula: (not (< 0 v_meta.tcp_payload_len_31))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_31}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_31}  AuxVars[]  AssignedVars[] 41220#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 41221#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 41474#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 41475#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 40351#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 40352#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 40169#L1047_accept_S2 [3895] L1047_accept_S2-->L1049_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_22 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_22}  AuxVars[]  AssignedVars[] 40170#L1049_accept_S2 [4543] L1049_accept_S2-->L1057-2_accept_S2: Formula: (= (select v_next_hops_port_0_14 (mod (* (mod v_meta.id_168 4294967296) 3) 4294967296)) v_meta.next_hop_port_26)  InVars {next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168}  OutVars{next_hops_port_0=v_next_hops_port_0_14, meta.id=v_meta.id_168, meta.next_hop_port=v_meta.next_hop_port_26}  AuxVars[]  AssignedVars[meta.next_hop_port] 40565#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 40706#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40705#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40707#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 41032#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 41033#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41756#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41410#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40032#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40033#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41527#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41389#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41388#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41390#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41683#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41891#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40249#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41254#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40248#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40250#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42008#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41099#L1094_accept_S2 [4488] L1094_accept_S2-->L1096_accept_S2: Formula: (not v_forward_28)  InVars {forward=v_forward_28}  OutVars{forward=v_forward_28}  AuxVars[]  AssignedVars[] 40203#L1096_accept_S2 [3914] L1096_accept_S2-->L1095-1_accept_S2: Formula: v_drop_41  InVars {}  OutVars{drop=v_drop_41}  AuxVars[]  AssignedVars[drop] 40205#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 41253#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 41504#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 41128#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 40849#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 40505#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 40383#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40384#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40737#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 40738#L1109-1_accept_S3 
[2023-01-16 04:06:23,946 INFO  L754   eck$LassoCheckResult]: Loop: 40738#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40023#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41693#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40049#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41822#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41835#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 41074#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 41075#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 41647#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 40672#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 40673#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 41063#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 41064#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 40229#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 40230#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 40504#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 41347#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 41374#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 41375#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 40211#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 40212#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 40926#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 40473#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 40474#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 41399#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 41787#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 41816#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 40761#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 40762#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 41559#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 41617#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 41859#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 41736#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 41737#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 41973#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 40801#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 40802#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 41733#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 41734#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 41376#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 41303#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 40601#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 40187#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 40188#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 41697#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 41698#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 41823#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 41824#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 41662#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 40201#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 40202#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 40724#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 40725#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 41591#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 41929#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 41054#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 40645#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 40530#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 40531#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 41885#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 41612#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 41613#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 41878#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 40261#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 40220#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 40221#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 40317#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 40890#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 41228#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 41307#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 41695#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 40598#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 40460#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 40259#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 40260#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 41443#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 41766#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 40387#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 40388#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 40602#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 40603#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 40309#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 40310#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 40697#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 41416#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 40886#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 40887#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 41115#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 41471#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 40340#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 40341#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 41163#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 41164#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 40048#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 40050#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 41199#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 41691#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 41692#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 41986#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 41403#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 41404#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 40517#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 40518#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 40756#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 41721#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 41964#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 41869#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 41870#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 40659#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 40660#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 40097#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 40098#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 40916#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 40917#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 41519#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 41520#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 41645#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 40789#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 40362#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 40363#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 40489#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 40824#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 40825#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 41116#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 41689#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 40923#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 40924#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 41183#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 41184#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 41883#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 40796#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 40797#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 41969#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 40064#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 40065#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 41385#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 40475#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 40476#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 40287#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 40288#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 41269#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 41270#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 41337#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 41338#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 41411#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 41317#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 40279#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40280#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40022#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40024#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40262#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40844#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41539#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41439#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 41440#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 40349#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40526#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40348#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 40350#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 40093#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41954#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41525#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 40092#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40094#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41447#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41448#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41290#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40765#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40766#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41926#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41927#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41770#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40843#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40845#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41476#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40763#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40764#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40953#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40954#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40423#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40422#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40424#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41538#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40407#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40030#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40490#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40491#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 41597#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 41380#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 40227#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 40228#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 40111#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40112#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41285#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 41286#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 40544#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41782#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41783#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40079#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 40525#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40078#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 40080#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 40281#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40942#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 40132#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 40133#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 41518#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41925#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 41623#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41342#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41291#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41292#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40461#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 40462#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 41135#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 41569#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 40940#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 40941#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 41584#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 41899#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 41900#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 41703#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 41704#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 40661#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 40663#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 41656#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 40214#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 40856#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41781#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41778#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 40888#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 40889#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41861#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40685#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40686#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41962#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41322#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40793#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41831#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40792#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40794#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42001#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41998#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 41999#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 42000#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41997#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40277#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 40278#L1094_accept_S3 [4341] L1094_accept_S3-->L1096_accept_S3: Formula: (not v_forward_26)  InVars {forward=v_forward_26}  OutVars{forward=v_forward_26}  AuxVars[]  AssignedVars[] 40925#L1096_accept_S3 [4963] L1096_accept_S3-->L1095-1_accept_S3: Formula: v_drop_42  InVars {}  OutVars{drop=v_drop_42}  AuxVars[]  AssignedVars[drop] 40371#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 40372#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 41318#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 41319#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 41513#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 41508#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 41509#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41528#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 41529#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 40738#L1109-1_accept_S3 
[2023-01-16 04:06:23,947 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:06:23,947 INFO  L85        PathProgramCache]: Analyzing trace with hash -1402996695, now seen corresponding path program 1 times
[2023-01-16 04:06:23,947 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:06:23,947 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [2098082308]
[2023-01-16 04:06:23,947 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:06:23,948 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:06:24,024 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,249 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:24,259 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,371 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:24,376 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,386 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:06:24,388 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,393 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:24,394 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,399 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:24,400 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,404 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:24,405 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,406 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:24,406 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,407 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:06:24,407 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,445 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:06:24,449 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,461 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:06:24,462 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,472 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:06:24,473 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,483 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:24,484 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,492 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:06:24,493 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,494 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:06:24,495 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,496 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:06:24,497 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,500 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 260
[2023-01-16 04:06:24,524 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,575 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:24,582 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,591 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:06:24,593 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,595 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:24,596 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,597 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:24,597 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,598 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:24,598 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,599 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:24,599 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,600 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:06:24,604 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,605 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:06:24,610 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,620 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:06:24,621 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,622 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:06:24,623 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,624 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:24,624 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,625 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:06:24,626 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,627 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:06:24,628 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,629 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:06:24,629 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:24,631 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:06:24,631 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:06:24,631 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [2098082308]
[2023-01-16 04:06:24,631 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [2098082308] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:06:24,631 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:06:24,631 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2023-01-16 04:06:24,631 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [492031963]
[2023-01-16 04:06:24,631 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:06:24,632 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:06:24,632 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:06:24,632 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2023-01-16 04:06:24,632 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=63, Invalid=243, Unknown=0, NotChecked=0, Total=306
[2023-01-16 04:06:24,632 INFO  L87              Difference]: Start difference. First operand 2011 states and 2294 transitions. cyclomatic complexity: 285 Second operand  has 18 states, 17 states have (on average 26.823529411764707) internal successors, (456), 7 states have internal predecessors, (456), 2 states have call successors, (31), 12 states have call predecessors, (31), 3 states have return successors, (30), 3 states have call predecessors, (30), 2 states have call successors, (30)
[2023-01-16 04:06:49,405 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:06:49,405 INFO  L93              Difference]: Finished difference Result 6506 states and 7812 transitions.
[2023-01-16 04:06:49,405 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 81 states. 
[2023-01-16 04:06:49,406 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6506 states and 7812 transitions.
[2023-01-16 04:06:49,419 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-01-16 04:06:49,437 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6506 states to 6297 states and 7571 transitions.
[2023-01-16 04:06:49,437 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 479
[2023-01-16 04:06:49,438 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 531
[2023-01-16 04:06:49,438 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6297 states and 7571 transitions.
[2023-01-16 04:06:49,444 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:06:49,444 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 6297 states and 7571 transitions.
[2023-01-16 04:06:49,447 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6297 states and 7571 transitions.
[2023-01-16 04:06:49,475 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6297 to 2051.
[2023-01-16 04:06:49,476 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 2051 states, 1676 states have (on average 1.0984486873508352) internal successors, (1841), 1558 states have internal predecessors, (1841), 245 states have call successors, (245), 245 states have call predecessors, (245), 130 states have return successors, (250), 248 states have call predecessors, (250), 244 states have call successors, (250)
[2023-01-16 04:06:49,478 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2051 states to 2051 states and 2336 transitions.
[2023-01-16 04:06:49,478 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 2051 states and 2336 transitions.
[2023-01-16 04:06:49,478 INFO  L399   stractBuchiCegarLoop]: Abstraction has 2051 states and 2336 transitions.
[2023-01-16 04:06:49,478 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 8 ============
[2023-01-16 04:06:49,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2051 states and 2336 transitions.
[2023-01-16 04:06:49,480 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:06:49,480 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:06:49,480 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:06:49,481 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:06:49,481 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:06:49,483 INFO  L752   eck$LassoCheckResult]: Stem: 50096#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50870#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49984#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50097#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49935#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51773#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50446#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 50021#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 50022#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 51889#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 51434#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 51435#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 50032#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 50033#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 51501#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 51738#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 50502#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 50503#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 51258#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 51158#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 51159#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 51777#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 50009#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 50010#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 51789#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 51790#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 51852#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 51514#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 51515#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 50316#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 50317#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 50529#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 50530#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 51727#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 50764#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 50765#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 50533#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 50225#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 50226#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 51693#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 51606#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 51448#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 50219#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 50220#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 51698#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 51699#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 51761#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 51603#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 51464#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 51465#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 51888#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 51604#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 51605#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 51629#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 51630#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 50887#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 50888#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 51412#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 51259#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 51260#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 51877#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 51305#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 50980#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 50981#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 51430#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 50757#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 50758#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 51357#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 50766#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 50767#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 51500#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 51488#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 50571#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 50572#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 51148#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 51238#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 50581#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 50582#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 51661#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 50198#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 50199#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 51513#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 51203#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 51204#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 51690#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 50815#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 50524#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 50525#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 50834#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 51482#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 51483#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 51420#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 51421#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 51591#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 50898#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 50899#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 51334#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 51463#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 51329#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 51330#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 51519#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 51520#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 51855#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 51826#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 51827#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 51310#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 49934#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 49936#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 51651#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 51652#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 50944#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 50945#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 50991#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 50992#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 50042#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 50043#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 50078#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 50627#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 50622#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 50623#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 51662#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 50668#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 50594#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 50564#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 50213#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 49988#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 49989#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 50262#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 50263#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 50773#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 50417#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 50415#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 50416#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 51076#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 50203#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 50204#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 51326#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 50509#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 50510#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 50209#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 50210#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 50900#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 50901#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 51380#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 51802#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 51865#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 50859#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 50860#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51580#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50717#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50034#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50035#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50459#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51256#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51077#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 51078#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 50019#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50840#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50841#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 50650#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 50018#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50020#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51389#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 50602#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51371#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51785#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50601#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50603#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50636#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51620#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51132#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50303#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50304#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51376#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50458#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50460#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50950#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50896#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50796#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50635#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50605#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50604#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50606#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51489#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51384#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49899#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51740#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50038#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 50039#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 50652#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 51121#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 51122#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 50240#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51490#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51565#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 51470#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 50239#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50241#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50249#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50058#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50057#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50059#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 51307#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 51308#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51739#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 51332#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 51333#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 51762#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51768#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 51637#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51296#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51297#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51456#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51118#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 50476#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 50252#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 50253#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 50360#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 50361#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 50143#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 50433#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 50434#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 50591#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 50592#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 51839#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 51841#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 51880#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 51885#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 50244#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50976#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51372#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 50837#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 50838#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50701#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49898#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49900#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51666#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50425#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49925#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51533#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51867#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49924#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49926#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50797#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51294#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51295#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50818#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50819#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51639#L1094_T0_init [5150] L1094_T0_init-->L1096_T0_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 51318#L1096_T0_init [4774] L1096_T0_init-->L1095-1_T0_init: Formula: v_drop_40  InVars {}  OutVars{drop=v_drop_40}  AuxVars[]  AssignedVars[drop] 49983#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 49985#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 51610#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 51757#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 51673#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 51467#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 51468#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51174#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51175#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 51799#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50082#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50720#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49920#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50833#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50538#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 50539#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 51454#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 51871#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 50879#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 50880#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 51774#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 51243#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 51244#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 51611#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 51543#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 51544#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 51619#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 51770#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 51771#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 50913#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 50439#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 50440#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 51783#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 50494#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 50495#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 50663#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 50597#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 50598#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 50872#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 50507#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 50508#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 50694#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 50637#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 50638#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 51080#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 51081#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 51707#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 51708#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 51713#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 50809#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 50810#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 51306#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 50994#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 50461#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 50462#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 50283#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 50284#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 50761#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 50762#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 50960#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 50362#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 50363#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 51753#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 51024#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 51025#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 50825#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 50794#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 50792#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 50793#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 51250#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 50977#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 50978#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 50069#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 50070#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 50221#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 50222#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 51005#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 51231#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 51315#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 51271#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 51272#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 50803#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 50804#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 51183#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 51496#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 49919#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 49921#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 51803#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 51112#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 51113#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 49922#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 49923#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 50348#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 50642#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 50643#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 51439#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 51369#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 50384#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 50385#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 50821#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 51866#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 51405#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 50704#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 50705#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 51682#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 51863#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 50504#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 50505#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 50990#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 51320#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 51321#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 51645#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 51646#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 51037#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 51038#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 51460#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 50444#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 50445#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 51597#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 51598#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 51816#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 51763#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 51517#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 51518#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 50689#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 50583#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 50584#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 49986#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 49987#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 50718#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 50719#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 50914#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 51694#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 51875#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 51127#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 51128#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 51779#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 51303#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 50801#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 50802#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 51477#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 51457#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 51458#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 51787#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 50260#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 50261#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 50918#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 50917#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 49930#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 49931#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 51196#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 50934#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 50673#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 50674#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 50820#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 51828#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50418#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50419#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50919#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51309#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50005#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50979#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50839#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 50004#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 50006#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50827#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51045#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 51679#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 50206#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50205#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50207#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 51235#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51741#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51391#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51234#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51236#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50291#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50292#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51860#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51861#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51813#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51814#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50308#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50309#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50995#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51404#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51776#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51660#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50298#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50299#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50665#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51509#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51830#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49905#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50314#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50315#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 50735#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 50736#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 51006#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 51007#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 50740#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50739#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50741#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 51792#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 51443#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51125#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51126#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50094#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50109#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50110#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 50779#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 51276#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51317#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 50778#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 50780#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 50924#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50902#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 50903#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50927#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50093#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50095#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50895#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 50310#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 50311#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 51706#L672_accept_S2 [5247] L672_accept_S2-->L676_accept_S2: Formula: (and (not (= v_hdr.tcp.fin_30 1)) (not (= v_hdr.tcp.syn_14 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  AuxVars[]  AssignedVars[] 50321#L676_accept_S2 [4029] L676_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_33 (mod (mod v_hdr.ipv4.totalLen_10 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10, meta.tcp_payload_len=v_meta.tcp_payload_len_33}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 50322#L672-2_accept_S2 [4836] L672-2_accept_S2-->L671-1_accept_S2: Formula: (not (< 0 v_meta.tcp_payload_len_31))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_31}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_31}  AuxVars[]  AssignedVars[] 51106#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 51107#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 51362#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 51363#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 50234#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 50235#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 50048#L1047_accept_S2 [3896] L1047_accept_S2-->L1052_accept_S2: Formula: (not (= v_nh_avaibility_1_tmp_0_23 0))  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_23}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_23}  AuxVars[]  AssignedVars[] 50049#L1052_accept_S2 [5055] L1052_accept_S2-->L1054_accept_S2: Formula: (= v_nh_avaibility_2_tmp_0_33 0)  InVars {nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_33}  OutVars{nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_33}  AuxVars[]  AssignedVars[] 51188#L1054_accept_S2 [4656] L1054_accept_S2-->L1057-2_accept_S2: Formula: (= v_meta.next_hop_port_40 (select v_next_hops_port_0_28 (mod (+ (mod (* 3 (mod v_meta.id_241 4294967296)) 4294967296) 1) 4294967296)))  InVars {next_hops_port_0=v_next_hops_port_0_28, meta.id=v_meta.id_241}  OutVars{next_hops_port_0=v_next_hops_port_0_28, meta.id=v_meta.id_241, meta.next_hop_port=v_meta.next_hop_port_40}  AuxVars[]  AssignedVars[meta.next_hop_port] 50448#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 50589#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50588#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50590#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 50915#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 50916#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51649#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51298#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49911#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49912#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51417#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51278#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51277#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51279#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51573#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51093#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50129#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51140#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50128#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50130#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51242#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50982#L1094_accept_S2 [4488] L1094_accept_S2-->L1096_accept_S2: Formula: (not v_forward_28)  InVars {forward=v_forward_28}  OutVars{forward=v_forward_28}  AuxVars[]  AssignedVars[] 50081#L1096_accept_S2 [3914] L1096_accept_S2-->L1095-1_accept_S2: Formula: v_drop_41  InVars {}  OutVars{drop=v_drop_41}  AuxVars[]  AssignedVars[drop] 50083#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 51139#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 51392#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 51011#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 50730#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 50388#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 50266#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50267#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50620#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 50621#L1109-1_accept_S3 
[2023-01-16 04:06:49,484 INFO  L754   eck$LassoCheckResult]: Loop: 50621#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49902#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51583#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49928#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51719#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51732#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 50957#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 50958#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 51536#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 50555#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 50556#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 50946#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 50947#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 50107#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 50108#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 50387#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 51237#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 51262#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 51263#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 50089#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 50090#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 50808#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 50356#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 50357#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 51288#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 51680#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 51709#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 50644#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 50645#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 51449#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 51506#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 51756#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 51627#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 51628#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 51868#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 50684#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 50685#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 51624#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 51625#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 51264#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 51191#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 50484#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 50065#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 50066#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 51587#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 51588#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 51720#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 51721#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 51551#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 50079#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 50080#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 50607#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 50608#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 51481#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 51825#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 50937#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 50528#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 50413#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 50414#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 51781#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 51502#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 51503#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 51775#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 50139#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 50100#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 50101#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 50200#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 50772#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 51114#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 51195#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 51585#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 50481#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 50343#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 50137#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 50138#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 51331#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 51659#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 50270#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 50271#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 50485#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 50486#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 50189#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 50190#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 50580#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 51304#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 50768#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 50769#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 50998#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 51359#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 50223#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 50224#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 51047#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 51048#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 49927#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 49929#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 51086#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 51581#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 51582#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 51881#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 51292#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 51293#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 50400#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 50401#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 50639#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 51612#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 51858#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 51766#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 51767#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 50542#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 50543#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 49976#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 49977#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 50798#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 50799#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 51407#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 51408#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 51534#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 50672#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 50245#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 50246#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 50372#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 50707#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 50708#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 50999#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 51579#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 50805#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 50806#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 51068#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 51069#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 51780#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 50679#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 50680#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 51864#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 49943#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 49944#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 51274#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 50358#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 50359#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 50167#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 50168#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 51156#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 51157#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 51227#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 51228#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 51299#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 51205#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 50159#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50160#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49901#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49903#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50140#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50727#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51429#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51327#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 51328#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 50232#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50409#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50231#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 50233#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 49972#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51848#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51413#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 49971#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 49973#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51335#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51336#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51177#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50648#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50649#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51823#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51824#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51663#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50726#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50728#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51364#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50646#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50647#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50835#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50836#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50306#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50305#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50307#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51428#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50290#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49909#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50373#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50374#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 51487#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 51268#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 50105#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 50106#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 49990#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 49991#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51172#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 51173#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 50427#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51675#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51676#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49958#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50408#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49957#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 49959#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 50161#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50824#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 50011#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 50012#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 51406#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51822#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 51512#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51232#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51178#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51179#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50344#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 50345#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 51018#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 51459#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 50822#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 50823#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 51474#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 51794#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 51795#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 51593#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 51594#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 50544#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 50546#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 51545#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 50737#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 50738#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51674#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51671#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 50770#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 50771#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51758#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50567#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50568#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51856#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51936#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51934#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 51935#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51937#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51933#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51931#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50449#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 50450#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50892#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50893#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50157#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 50158#L1094_accept_S3 [4341] L1094_accept_S3-->L1096_accept_S3: Formula: (not v_forward_26)  InVars {forward=v_forward_26}  OutVars{forward=v_forward_26}  AuxVars[]  AssignedVars[] 50807#L1096_accept_S3 [4963] L1096_accept_S3-->L1095-1_accept_S3: Formula: v_drop_42  InVars {}  OutVars{drop=v_drop_42}  AuxVars[]  AssignedVars[drop] 50254#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 50255#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 51206#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 51207#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 51401#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 51396#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 51397#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51418#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 51419#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 50621#L1109-1_accept_S3 
[2023-01-16 04:06:49,485 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:06:49,485 INFO  L85        PathProgramCache]: Analyzing trace with hash -1662002162, now seen corresponding path program 1 times
[2023-01-16 04:06:49,485 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:06:49,485 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1516118950]
[2023-01-16 04:06:49,485 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:06:49,485 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:06:49,517 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,764 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:49,789 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,917 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:49,924 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,941 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:06:49,945 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,954 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:49,955 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,962 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:49,963 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,968 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:49,969 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,970 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:49,971 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:49,972 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:06:49,973 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,031 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:06:50,037 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,051 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:06:50,053 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,062 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:06:50,064 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,076 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:50,077 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,088 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:06:50,089 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,091 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:06:50,092 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,093 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:06:50,093 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,096 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 260
[2023-01-16 04:06:50,148 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,187 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:50,193 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,199 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:06:50,201 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,204 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:06:50,204 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,206 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:50,207 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,208 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:06:50,208 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,209 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:50,209 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,210 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:06:50,211 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,213 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:06:50,221 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,239 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:06:50,243 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,246 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:06:50,247 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,250 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:06:50,253 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,255 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 43
[2023-01-16 04:06:50,257 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,262 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 236
[2023-01-16 04:06:50,263 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,264 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 241
[2023-01-16 04:06:50,266 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:06:50,268 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:06:50,268 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:06:50,268 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1516118950]
[2023-01-16 04:06:50,268 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1516118950] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:06:50,269 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:06:50,269 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2023-01-16 04:06:50,269 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1413666402]
[2023-01-16 04:06:50,269 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:06:50,269 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:06:50,270 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:06:50,270 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2023-01-16 04:06:50,270 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=76, Invalid=344, Unknown=0, NotChecked=0, Total=420
[2023-01-16 04:06:50,271 INFO  L87              Difference]: Start difference. First operand 2051 states and 2336 transitions. cyclomatic complexity: 287 Second operand  has 21 states, 20 states have (on average 22.85) internal successors, (457), 9 states have internal predecessors, (457), 4 states have call successors, (31), 12 states have call predecessors, (31), 4 states have return successors, (30), 5 states have call predecessors, (30), 4 states have call successors, (30)
[2023-01-16 04:08:19,855 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:08:19,855 INFO  L93              Difference]: Finished difference Result 9063 states and 10921 transitions.
[2023-01-16 04:08:19,855 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 227 states. 
[2023-01-16 04:08:19,856 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9063 states and 10921 transitions.
[2023-01-16 04:08:19,876 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 15
[2023-01-16 04:08:19,905 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9063 states to 8944 states and 10783 transitions.
[2023-01-16 04:08:19,905 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 947
[2023-01-16 04:08:19,906 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1055
[2023-01-16 04:08:19,906 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 8944 states and 10783 transitions.
[2023-01-16 04:08:19,914 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:08:19,914 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 8944 states and 10783 transitions.
[2023-01-16 04:08:19,918 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 8944 states and 10783 transitions.
[2023-01-16 04:08:19,976 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 8944 to 3756.
[2023-01-16 04:08:19,979 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 3756 states, 3059 states have (on average 1.110166721150703) internal successors, (3396), 2879 states have internal predecessors, (3396), 441 states have call successors, (441), 428 states have call predecessors, (441), 256 states have return successors, (475), 448 states have call predecessors, (475), 440 states have call successors, (475)
[2023-01-16 04:08:19,983 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3756 states to 3756 states and 4312 transitions.
[2023-01-16 04:08:19,984 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 3756 states and 4312 transitions.
[2023-01-16 04:08:19,984 INFO  L399   stractBuchiCegarLoop]: Abstraction has 3756 states and 4312 transitions.
[2023-01-16 04:08:19,984 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 9 ============
[2023-01-16 04:08:19,984 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3756 states and 4312 transitions.
[2023-01-16 04:08:19,989 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:08:19,989 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:08:19,989 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:08:19,991 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:08:19,991 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:08:19,994 INFO  L752   eck$LassoCheckResult]: Stem: 62896#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64415#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62781#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65351#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65345#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65346#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65513#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 65512#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 65511#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 65510#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 65509#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 65508#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 65507#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 65506#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 65505#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 65504#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 65503#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 65502#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 65501#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 65500#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 65499#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 65498#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 65497#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 65496#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 65495#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 65494#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 65493#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 65492#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 65491#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 65490#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 65489#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 65488#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 65487#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 65486#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 65485#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 65484#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 65483#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 65482#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 65481#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 65480#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 65479#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 65478#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 65477#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 65476#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 65475#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 65474#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 65473#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 65472#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 65471#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 65470#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 65469#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 65468#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 65467#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 65466#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 65465#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 65464#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 65463#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 65462#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 65461#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 65460#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 65459#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 65458#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 65457#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 65456#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 65455#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 65454#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 65453#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 65452#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 65451#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 65450#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 65449#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 65448#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 65447#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 65446#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 65445#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 65444#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 65443#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 65442#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 65441#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 65440#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 65439#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 65438#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 65437#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 65436#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 65435#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 65434#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 65433#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 65432#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 65431#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 65430#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 65429#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 65428#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 65427#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 65426#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 65425#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 65424#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 65423#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 65422#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 65421#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 65420#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 65419#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 65418#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 65417#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 65416#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 65415#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 65414#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 65413#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 65412#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 65411#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 65410#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 65409#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 65408#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 65407#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 65406#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 65405#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 65404#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 65403#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 65402#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 65401#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 65400#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 65399#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 65398#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 65397#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 65396#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 65395#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 65394#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 65393#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 65392#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 65391#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 65390#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 65389#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 65388#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 65387#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 65386#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 65385#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 65384#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 65383#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 65382#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 65379#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 65375#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 65372#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 65369#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 65365#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 65362#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 65359#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 65355#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 65353#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 65350#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65344#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65342#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65339#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65340#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65348#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65349#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65364#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 65361#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 65357#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65358#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65374#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 65371#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 65367#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65368#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65381#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 65377#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65378#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65380#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65376#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65373#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65370#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65366#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65363#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65360#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65356#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65354#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65352#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65347#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65343#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65341#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65338#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65337#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65334#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65335#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65336#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65333#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65332#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62874#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65329#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65326#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 65323#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 65322#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 65321#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 65320#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 65318#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65319#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65570#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 65563#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 65558#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65317#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65316#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65304#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65305#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65312#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 65309#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 65310#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65315#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 65314#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 65313#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 65311#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65308#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 65307#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65306#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65303#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65302#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65301#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 65300#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 65299#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 65298#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 65296#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 65297#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 66222#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 66079#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 65876#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 65875#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 65873#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 65867#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 65862#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 65863#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 65904#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 65725#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 65726#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65733#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 65734#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 65920#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65896#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65895#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65894#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 65693#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63228#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62719#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64266#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64267#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62718#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62720#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63637#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64174#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64175#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63656#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63657#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64565#L1094_T0_init [5150] L1094_T0_init-->L1096_T0_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 64199#L1096_T0_init [4774] L1096_T0_init-->L1095-1_T0_init: Formula: v_drop_40  InVars {}  OutVars{drop=v_drop_40}  AuxVars[]  AssignedVars[drop] 62778#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 62780#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 64533#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 64703#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 64601#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 64602#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 64975#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64974#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64960#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 64762#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62882#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63546#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62714#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63675#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63349#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 63350#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 64352#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 64879#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 63725#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 63726#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 64728#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 64118#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 64119#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 64534#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 64452#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 64453#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 64541#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 64724#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 64725#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 63765#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 63246#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 63247#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 64738#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 63302#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 63303#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 63483#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 63412#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 63413#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 63718#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 63319#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 63320#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 63517#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 63456#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 63457#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 63941#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 63942#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 64641#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 64642#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 64649#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 63649#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 63650#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 64186#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 63850#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 63269#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 63270#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 63084#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 63085#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 63599#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 63600#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 63816#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 63164#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 63165#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 64696#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 63886#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 63887#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 63665#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 63632#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 63630#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 63631#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 64125#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 63834#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 63835#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 62868#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 62869#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 63022#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 63023#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 63864#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 64106#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 64196#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 64150#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 64151#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 63643#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 63644#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 64054#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 64402#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 62713#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 62715#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 64766#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 63977#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 63978#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 62716#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 62717#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 63150#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 63461#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 63462#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 64334#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 64257#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 63187#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 63188#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 63661#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 64872#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 64294#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 63531#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 63532#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 64611#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 64868#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 63313#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 63314#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 63847#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 64201#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 64202#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 64569#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 64570#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 63899#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 63900#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 64359#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 63251#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 63252#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 64520#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 64521#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 64787#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 64715#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 64425#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 64426#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 63511#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 63396#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 63397#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 62784#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 62785#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 63544#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 63545#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 63766#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 64623#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 64886#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 63993#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 63994#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 64732#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 64183#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 63641#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 63642#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 64379#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 64355#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 64356#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 64743#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 63061#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 63062#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 63770#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 63769#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 62724#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 62725#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 64068#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 63786#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 63495#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 63496#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 63660#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 64801#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63223#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63224#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63771#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64189#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62803#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63836#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63683#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 62802#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 62804#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63667#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63907#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 64608#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 63007#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63006#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63008#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 64110#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64684#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64280#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64109#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64111#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63093#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63094#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64866#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64867#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64782#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64783#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63110#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63111#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63851#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64293#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64730#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64586#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63100#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63101#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63487#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64417#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64803#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62699#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63116#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63117#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 63571#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 63572#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 63865#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 63866#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 63575#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63574#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63576#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 64748#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 64338#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63990#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63991#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62894#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 62909#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62910#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 63617#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 64154#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64198#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 63616#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 63618#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 63776#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63754#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 63755#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63779#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62893#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62895#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63745#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 63112#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 63113#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 64640#L672_accept_S2 [5247] L672_accept_S2-->L676_accept_S2: Formula: (and (not (= v_hdr.tcp.fin_30 1)) (not (= v_hdr.tcp.syn_14 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_14, hdr.tcp.fin=v_hdr.tcp.fin_30}  AuxVars[]  AssignedVars[] 63123#L676_accept_S2 [4029] L676_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_33 (mod (mod v_hdr.ipv4.totalLen_10 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_10, meta.tcp_payload_len=v_meta.tcp_payload_len_33}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 63124#L672-2_accept_S2 [4836] L672-2_accept_S2-->L671-1_accept_S2: Formula: (not (< 0 v_meta.tcp_payload_len_31))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_31}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_31}  AuxVars[]  AssignedVars[] 63971#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 63972#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 64246#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 64247#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 63035#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 63036#L986_accept_S2 [4916] L986_accept_S2-->L987_accept_S2: Formula: (and (= v_meta.selected_22 1) (< 0 v_rerouting_ts_tmp_0_21) (< (mod (+ (* (mod v_rerouting_ts_tmp_0_21 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_112 524288)) 524288) 976))  InVars {meta.selected=v_meta.selected_22, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_112, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_21}  OutVars{meta.selected=v_meta.selected_22, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_112, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_21}  AuxVars[]  AssignedVars[] 62914#L987_accept_S2 [3932] L987_accept_S2-->L988_accept_S2: Formula: (< v_meta.flowselector_cellid_38 32)  InVars {meta.flowselector_cellid=v_meta.flowselector_cellid_38}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_38}  AuxVars[]  AssignedVars[] 62915#L988_accept_S2 [4155] L988_accept_S2-->L990_accept_S2: Formula: (= v_nh_avaibility_2_tmp_0_19 0)  InVars {nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_19}  OutVars{nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_19}  AuxVars[]  AssignedVars[] 63366#L990_accept_S2 [5238] L990_accept_S2-->L991_accept_S2: Formula: (= v_meta.next_hop_port_46 (select v_next_hops_port_0_34 (mod (+ (mod (* 3 (mod v_meta.id_262 4294967296)) 4294967296) 1) 4294967296)))  InVars {next_hops_port_0=v_next_hops_port_0_34, meta.id=v_meta.id_262}  OutVars{next_hops_port_0=v_next_hops_port_0_34, meta.id=v_meta.id_262, meta.next_hop_port=v_meta.next_hop_port_46}  AuxVars[]  AssignedVars[meta.next_hop_port] 64634#L991_accept_S2 [5907] L991_accept_S2-->L1057-2_accept_S2: Formula: (not (= v_meta.is_retransmission_29 1))  InVars {meta.is_retransmission=v_meta.is_retransmission_29}  OutVars{meta.is_retransmission=v_meta.is_retransmission_29}  AuxVars[]  AssignedVars[] 63255#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 63404#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63403#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63405#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 63767#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 63768#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64573#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64178#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62705#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62706#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64307#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64156#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64155#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64157#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64485#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63958#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62927#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64007#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62926#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62928#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64117#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63839#L1094_accept_S2 [4488] L1094_accept_S2-->L1096_accept_S2: Formula: (not v_forward_28)  InVars {forward=v_forward_28}  OutVars{forward=v_forward_28}  AuxVars[]  AssignedVars[] 62881#L1096_accept_S2 [3914] L1096_accept_S2-->L1095-1_accept_S2: Formula: v_drop_41  InVars {}  OutVars{drop=v_drop_41}  AuxVars[]  AssignedVars[drop] 62883#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 64006#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 64281#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 63870#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 63556#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 63191#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 63067#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63068#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63438#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 63439#L1109-1_accept_S3 
[2023-01-16 04:08:19,996 INFO  L754   eck$LassoCheckResult]: Loop: 63439#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62696#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64498#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62722#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64654#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64671#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 63813#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 63814#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 64444#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 63368#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 63369#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 63797#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 63798#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 62907#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 62908#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 63190#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 64112#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 64141#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 64142#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 62889#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 62890#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 63648#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 63158#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 63159#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 64167#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 64609#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 64643#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 63463#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 63464#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 64345#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 64413#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 64702#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 64550#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 64551#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 64875#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 63506#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 63507#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 64547#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 64548#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 64143#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 64063#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 63292#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 62864#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 62865#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 64502#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 64503#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 64655#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 64656#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 64461#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 62879#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 62880#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 63422#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 63423#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 64384#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 64797#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 63789#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 63339#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 63218#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 63219#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 64736#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 64409#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 64410#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 64729#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 62939#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 62898#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 62899#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 63001#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 63610#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 63979#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 64067#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 64500#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 63289#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 63145#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 62937#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 62938#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 64213#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 64585#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 63071#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 63072#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 63293#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 63294#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 62990#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 62991#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 63393#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 64184#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 63606#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 63607#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 63856#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 64243#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 63024#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 63025#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 63908#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 63909#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 62721#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 62723#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 63949#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 64496#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 64497#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 64898#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 64172#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 64173#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 63203#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 63204#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 63458#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 64535#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 64864#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 64719#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 64720#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 63353#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 63354#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 62770#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 62771#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 63638#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 63639#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 64296#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 64297#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 64442#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 63494#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 63046#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 63047#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 63174#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 63534#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 63535#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 63857#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 64491#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 63645#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 63646#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 63928#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 63929#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 64735#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 63501#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 63502#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 64869#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 62737#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 62738#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 64152#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 63160#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 63161#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 62968#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 62969#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 64027#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 64028#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 64102#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 64103#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 64179#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 64077#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 62960#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62961#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62695#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62697#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 62940#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63553#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64322#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64209#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 64210#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 63033#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63213#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63032#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 63034#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 62766#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64845#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64303#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 62765#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 62767#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64218#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64219#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64048#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63467#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63468#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64795#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64796#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64589#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63552#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63554#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64248#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63465#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63466#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63677#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63678#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63108#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63107#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63109#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64321#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63092#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62703#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63175#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63176#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 64392#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 64147#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 62905#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 62906#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 62788#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 62789#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64043#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 64044#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 63232#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64604#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64605#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62752#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63212#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62751#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 62753#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 62962#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63664#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 62810#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 62811#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 64295#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64794#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 64420#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64107#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64049#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64050#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63146#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 63147#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 63878#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 64357#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 63662#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 63663#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 64579#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 64752#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 64753#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 64510#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 64511#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 63355#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 63357#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 64454#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 63515#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 63573#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64603#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64599#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 63608#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 63609#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64706#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63381#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63382#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64124#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64082#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63498#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 64665#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63497#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63499#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63555#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63256#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 63257#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63741#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 63742#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62958#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 62959#L1094_accept_S3 [4341] L1094_accept_S3-->L1096_accept_S3: Formula: (not v_forward_26)  InVars {forward=v_forward_26}  OutVars{forward=v_forward_26}  AuxVars[]  AssignedVars[] 63647#L1096_accept_S3 [4963] L1096_accept_S3-->L1095-1_accept_S3: Formula: v_drop_42  InVars {}  OutVars{drop=v_drop_42}  AuxVars[]  AssignedVars[drop] 63055#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 63056#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 64078#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 64079#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 64290#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 64285#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 64286#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64308#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64309#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 63439#L1109-1_accept_S3 
[2023-01-16 04:08:19,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:08:19,997 INFO  L85        PathProgramCache]: Analyzing trace with hash -1230436932, now seen corresponding path program 1 times
[2023-01-16 04:08:19,997 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:08:19,997 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [244524796]
[2023-01-16 04:08:19,997 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:08:19,997 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:08:20,034 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,288 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:08:20,296 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,383 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:08:20,387 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,396 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:08:20,397 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,402 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:08:20,403 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,409 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:08:20,409 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,413 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:08:20,414 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,415 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:08:20,415 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,416 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:08:20,416 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,462 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:08:20,466 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,476 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:08:20,476 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,483 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:08:20,484 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,491 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:08:20,492 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,501 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:08:20,502 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,503 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:08:20,504 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,504 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:08:20,505 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,508 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 260
[2023-01-16 04:08:20,564 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,589 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:08:20,597 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,612 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:08:20,613 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,615 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:08:20,616 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,617 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:08:20,618 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,618 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:08:20,619 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,620 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:08:20,620 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,620 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:08:20,621 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,622 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:08:20,627 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,643 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:08:20,644 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,645 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:08:20,647 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,648 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:08:20,648 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,649 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 44
[2023-01-16 04:08:20,649 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,650 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 237
[2023-01-16 04:08:20,651 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,651 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 242
[2023-01-16 04:08:20,652 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:08:20,653 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:08:20,653 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:08:20,653 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [244524796]
[2023-01-16 04:08:20,653 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [244524796] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:08:20,653 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:08:20,653 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2023-01-16 04:08:20,653 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1514078277]
[2023-01-16 04:08:20,654 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:08:20,654 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:08:20,654 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:08:20,655 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2023-01-16 04:08:20,655 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=64, Invalid=208, Unknown=0, NotChecked=0, Total=272
[2023-01-16 04:08:20,655 INFO  L87              Difference]: Start difference. First operand 3756 states and 4312 transitions. cyclomatic complexity: 559 Second operand  has 17 states, 17 states have (on average 26.941176470588236) internal successors, (458), 6 states have internal predecessors, (458), 5 states have call successors, (31), 12 states have call predecessors, (31), 4 states have return successors, (30), 5 states have call predecessors, (30), 5 states have call successors, (30)
[2023-01-16 04:08:25,304 WARN  L536   Checker$ProtectedHtc]: IncrementalHoareTripleChecker took 1.28s for a HTC check with result INVALID. Formula has sorts [Array, meta_fwtable_0.action, Bool, bgp_tag_0.action, send_0.action, Int], hasArrays=true, hasNonlinArith=false, quantifiers []
[2023-01-16 04:08:30,230 WARN  L536   Checker$ProtectedHtc]: IncrementalHoareTripleChecker took 1.05s for a HTC check with result INVALID. Formula has sorts [Array, Ref, meta_fwtable_0.action, Bool, bgp_tag_0.action, send_0.action, Int], hasArrays=true, hasNonlinArith=false, quantifiers []
[2023-01-16 04:08:50,243 WARN  L536   Checker$ProtectedHtc]: IncrementalHoareTripleChecker took 1.18s for a HTC check with result INVALID. Formula has sorts [Array, Ref, meta_fwtable_0.action, Bool, bgp_tag_0.action, send_0.action, Int], hasArrays=true, hasNonlinArith=false, quantifiers []
[2023-01-16 04:09:45,673 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:09:45,674 INFO  L93              Difference]: Finished difference Result 7300 states and 8779 transitions.
[2023-01-16 04:09:45,674 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 37 states. 
[2023-01-16 04:09:45,675 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7300 states and 8779 transitions.
[2023-01-16 04:09:45,709 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-01-16 04:09:45,747 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7300 states to 7288 states and 8765 transitions.
[2023-01-16 04:09:45,748 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 412
[2023-01-16 04:09:45,749 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 596
[2023-01-16 04:09:45,749 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7288 states and 8765 transitions.
[2023-01-16 04:09:45,757 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:09:45,757 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 7288 states and 8765 transitions.
[2023-01-16 04:09:45,762 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7288 states and 8765 transitions.
[2023-01-16 04:09:45,833 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7288 to 3960.
[2023-01-16 04:09:45,837 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 3960 states, 3220 states have (on average 1.1090062111801242) internal successors, (3571), 3051 states have internal predecessors, (3571), 459 states have call successors, (459), 443 states have call predecessors, (459), 281 states have return successors, (493), 465 states have call predecessors, (493), 458 states have call successors, (493)
[2023-01-16 04:09:45,842 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3960 states to 3960 states and 4523 transitions.
[2023-01-16 04:09:45,842 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 3960 states and 4523 transitions.
[2023-01-16 04:09:45,842 INFO  L399   stractBuchiCegarLoop]: Abstraction has 3960 states and 4523 transitions.
[2023-01-16 04:09:45,843 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 10 ============
[2023-01-16 04:09:45,843 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3960 states and 4523 transitions.
[2023-01-16 04:09:45,848 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:09:45,848 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:09:45,848 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:09:45,850 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:09:45,851 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:09:45,856 INFO  L752   eck$LassoCheckResult]: Stem: 75200#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76790#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75085#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77835#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77829#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77830#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77997#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 77996#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 77995#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 77994#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 77993#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 77992#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 77991#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 77990#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 77989#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 77988#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 77987#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 77986#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 77985#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 77984#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 77983#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 77982#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 77981#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 77980#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 77979#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 77978#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 77977#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 77976#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 77975#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 77974#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 77973#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 77972#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 77971#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 77970#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 77969#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 77968#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 77967#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 77966#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 77965#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 77964#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 77963#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 77962#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 77961#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 77960#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 77959#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 77958#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 77957#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 77956#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 77955#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 77954#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 77953#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 77952#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 77951#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 77950#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 77949#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 77948#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 77947#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 77946#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 77945#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 77944#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 77943#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 77942#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 77941#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 77940#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 77939#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 77938#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 77937#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 77936#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 77935#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 77934#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 77933#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 77932#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 77931#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 77930#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 77929#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 77928#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 77927#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 77926#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 77925#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 77924#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 77923#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 77922#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 77921#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 77920#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 77919#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 77918#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 77917#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 77916#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 77915#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 77914#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 77913#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 77912#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 77911#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 77910#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 77909#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 77908#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 77907#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 77906#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 77905#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 77904#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 77903#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 77902#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 77901#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 77900#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 77899#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 77898#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 77897#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 77896#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 77895#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 77894#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 77893#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 77892#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 77891#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 77890#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 77889#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 77888#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 77887#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 77886#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 77885#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 77884#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 77883#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 77882#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 77881#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 77880#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 77879#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 77878#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 77877#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 77876#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 77875#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 77874#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 77873#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 77872#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 77871#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 77870#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 77869#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 77868#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 77867#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 77866#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 77863#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 77859#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 77856#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 77853#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 77849#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 77846#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 77843#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 77839#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 77837#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 77834#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77828#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77826#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77823#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77824#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77832#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77833#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77848#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 77845#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 77841#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77842#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77858#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 77855#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 77851#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77852#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77865#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 77861#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77862#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77864#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77860#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77857#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77854#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77850#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77847#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77844#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77840#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77838#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77836#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77831#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77827#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77825#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77822#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77821#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77818#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77819#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77820#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77817#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77816#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 74993#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77813#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77810#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 77807#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 77806#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 77805#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 77804#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 77802#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77803#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78064#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 78058#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 78052#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77801#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77800#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77788#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77789#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77796#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 77793#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 77794#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77799#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 77798#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 77797#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 77795#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77792#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 77791#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77790#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77787#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77786#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77785#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 77784#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 77783#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 77782#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 77780#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 77781#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 78476#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 78475#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 78474#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 78473#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 78472#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 78471#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 78212#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 78464#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 78178#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 78157#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 78158#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78165#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 78166#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 78894#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78893#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78891#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78890#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 78068#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77545#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77543#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77544#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77548#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77542#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77541#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76531#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76530#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76532#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77274#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77538#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77537#L1094_T0_init [5150] L1094_T0_init-->L1096_T0_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 77536#L1096_T0_init [4774] L1096_T0_init-->L1095-1_T0_init: Formula: v_drop_40  InVars {}  OutVars{drop=v_drop_40}  AuxVars[]  AssignedVars[drop] 75081#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 75086#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 76921#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 77111#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 76995#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 76739#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 76740#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76393#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76394#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 77184#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75186#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75876#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75014#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76006#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75673#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 75674#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 76718#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 77338#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 76059#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 76060#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 77138#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 76471#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 76472#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 76922#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 76831#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 76832#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 76929#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 77133#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 77134#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 76098#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 75558#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 75559#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 77150#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 75617#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 75618#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 75803#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 75737#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 75738#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 76051#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 75637#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 75638#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 75840#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 75778#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 75779#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 76285#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 76286#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 77043#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 77044#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 77052#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 75979#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 75980#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 76544#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 76194#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 75581#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 75582#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 75398#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 75399#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 75929#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 75930#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 76154#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 75477#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 75478#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 77104#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 76229#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 76230#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 75996#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 75962#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 75960#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 75961#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 76479#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 76175#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 76176#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 75173#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 75174#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 75334#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 75335#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 76208#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 76458#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 76555#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 76503#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 76504#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 75972#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 75973#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 76404#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 76775#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 75013#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 75015#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 77189#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 76328#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 76329#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 75016#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 75017#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 75463#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 75783#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 75784#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 76697#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 76610#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 75500#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 75501#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 75992#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 77328#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 76654#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 75853#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 75854#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 77008#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 77322#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 75630#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 75631#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 76191#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 76563#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 76564#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 76959#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 76960#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 76243#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 76244#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 76726#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 75563#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 75564#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 76904#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 76905#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 77223#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 77122#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 76801#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 76802#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 75833#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 75721#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 75722#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 75087#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 75088#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 75874#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 75875#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 76099#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 77023#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 77346#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 76344#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 76345#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 77143#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 76541#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 75970#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 75971#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 76754#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 76722#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 76723#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 77155#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 75375#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 75376#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 76103#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 76102#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 75024#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 75025#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 76419#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 76119#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 75816#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 75817#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 75991#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 77240#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75535#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75536#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76104#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76547#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75107#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76177#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76013#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 75106#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 75108#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75999#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76251#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 77005#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 75316#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75315#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75317#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 76462#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77089#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76635#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76461#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76463#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75407#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75408#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77318#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77319#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77217#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77218#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75424#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75425#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76195#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76653#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77141#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76978#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75414#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75415#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75807#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76792#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77242#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 74999#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75430#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75431#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 75900#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 75901#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 76209#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 76210#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 75904#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75903#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75905#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 77162#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 76701#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76341#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76342#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75198#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75213#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75214#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 75947#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 76508#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76558#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 75946#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 75948#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 76109#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76085#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 76086#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76112#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75197#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75199#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76078#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 75426#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 75427#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 77042#L672_accept_S2 [5246] L672_accept_S2-->L673_accept_S2: Formula: (or (= v_hdr.tcp.fin_29 1) (= v_hdr.tcp.syn_13 1))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  AuxVars[]  AssignedVars[] 76354#L673_accept_S2 [4620] L673_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_25 1)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_25}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 75438#L672-2_accept_S2 [4835] L672-2_accept_S2-->L680_accept_S2: Formula: (< 0 v_meta.tcp_payload_len_30)  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_30}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_30}  AuxVars[]  AssignedVars[] 76646#L680_accept_S2 [5487] L680_accept_S2-->L681_accept_S2: Formula: (= v_fc_last_sw_time_42 (select v_sw_time_0_20 v_meta.id_150))  InVars {sw_time_0=v_sw_time_0_20, meta.id=v_meta.id_150}  OutVars{meta.id=v_meta.id_150, fc_last_sw_time=v_fc_last_sw_time_42, sw_time_0=v_sw_time_0_20}  AuxVars[]  AssignedVars[fc_last_sw_time] 76764#L681_accept_S2 [4949] L681_accept_S2-->L681-1_accept_S2: Formula: (not (< 780 (mod (+ (* (mod v_fc_last_sw_time_65 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_75 524288)) 524288)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_75, fc_last_sw_time=v_fc_last_sw_time_65}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_75, fc_last_sw_time=v_fc_last_sw_time_65}  AuxVars[]  AssignedVars[] 76287#L681-1_accept_S2 [4570] L681-1_accept_S2-->L712_accept_S2: Formula: (= (select v_sw_time_0_36 v_meta.id_224) v_fc_last_sw_time_76)  InVars {sw_time_0=v_sw_time_0_36, meta.id=v_meta.id_224}  OutVars{meta.id=v_meta.id_224, fc_last_sw_time=v_fc_last_sw_time_76, sw_time_0=v_sw_time_0_36}  AuxVars[]  AssignedVars[fc_last_sw_time] 76288#L712_accept_S2 [5746] L712_accept_S2-->L714_accept_S2: Formula: (= (select v_sw_index_0_15 v_meta.id_157) v_fc_cur_sw_index_53)  InVars {sw_index_0=v_sw_index_0_15, meta.id=v_meta.id_157}  OutVars{sw_index_0=v_sw_index_0_15, meta.id=v_meta.id_157, fc_cur_sw_index=v_fc_cur_sw_index_53}  AuxVars[]  AssignedVars[fc_cur_sw_index] 77312#L714_accept_S2 [5648] L714_accept_S2-->L715_accept_S2: Formula: (= v_fc_cur_sw_sum_35 (select v_sw_sum_0_34 v_meta.id_199))  InVars {meta.id=v_meta.id_199, sw_sum_0=v_sw_sum_0_34}  OutVars{meta.id=v_meta.id_199, sw_sum_0=v_sw_sum_0_34, fc_cur_sw_sum=v_fc_cur_sw_sum_35}  AuxVars[]  AssignedVars[fc_cur_sw_sum] 75943#L715_accept_S2 [4312] L715_accept_S2-->L715-1_accept_S2: Formula: (not (< 78 (mod (+ (* 524287 (mod v_fc_last_sw_time_98 524288)) (mod v_meta.ingress_timestamp_millisecond_105 524288)) 524288)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_105, fc_last_sw_time=v_fc_last_sw_time_98}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_105, fc_last_sw_time=v_fc_last_sw_time_98}  AuxVars[]  AssignedVars[] 75944#L715-1_accept_S2 [4319] L715-1_accept_S2-->L815_accept_S2: Formula: true  InVars {}  OutVars{fc_newflow_key=v_fc_newflow_key_16}  AuxVars[]  AssignedVars[fc_newflow_key] 75908#L815_accept_S2 [4284] L815_accept_S2-->L816_accept_S2: Formula: (and (<= v_fc_newflow_key_31 4294967295) (<= 0 v_fc_newflow_key_31))  InVars {fc_newflow_key=v_fc_newflow_key_31}  OutVars{fc_newflow_key=v_fc_newflow_key_31}  AuxVars[]  AssignedVars[] 75909#L816_accept_S2 [5420] L816_accept_S2-->L818_accept_S2: Formula: (= v_fc_newflow_key_29 (mod (+ (mod v_fc_newflow_key_30 4294967296) 1) 4294967296))  InVars {fc_newflow_key=v_fc_newflow_key_30}  OutVars{fc_newflow_key=v_fc_newflow_key_29}  AuxVars[]  AssignedVars[fc_newflow_key] 75587#L818_accept_S2 [4106] L818_accept_S2-->L819_accept_S2: Formula: true  InVars {}  OutVars{fc_cell_id=v_fc_cell_id_15}  AuxVars[]  AssignedVars[fc_cell_id] 75428#L819_accept_S2 [4023] L819_accept_S2-->L820_accept_S2: Formula: (and (<= v_fc_cell_id_17 64) (<= 0 v_fc_cell_id_17))  InVars {fc_cell_id=v_fc_cell_id_17}  OutVars{fc_cell_id=v_fc_cell_id_17}  AuxVars[]  AssignedVars[] 75429#L820_accept_S2 [5923] L820_accept_S2-->L821_accept_S2: Formula: (= v_meta.flowselector_cellid_28 v_fc_cell_id_13)  InVars {fc_cell_id=v_fc_cell_id_13}  OutVars{fc_cell_id=v_fc_cell_id_13, meta.flowselector_cellid=v_meta.flowselector_cellid_28}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 76027#L821_accept_S2 [4382] L821_accept_S2-->L823_accept_S2: Formula: (= v_fc_flowselector_index_70 (mod v_fc_cell_id_19 4294967296))  InVars {fc_cell_id=v_fc_cell_id_19}  OutVars{fc_cell_id=v_fc_cell_id_19, fc_flowselector_index=v_fc_flowselector_index_70}  AuxVars[]  AssignedVars[fc_flowselector_index] 76028#L823_accept_S2 [5045] L823_accept_S2-->L825_accept_S2: Formula: (= v_fc_curflow_key_28 (select v_flowselector_key_0_14 v_fc_flowselector_index_62))  InVars {flowselector_key_0=v_flowselector_key_0_14, fc_flowselector_index=v_fc_flowselector_index_62}  OutVars{flowselector_key_0=v_flowselector_key_0_14, fc_flowselector_index=v_fc_flowselector_index_62, fc_curflow_key=v_fc_curflow_key_28}  AuxVars[]  AssignedVars[fc_curflow_key] 75572#L825_accept_S2 [4098] L825_accept_S2-->L827_accept_S2: Formula: (= v_fc_curflow_ts_26 (select v_flowselector_ts_0_18 v_fc_flowselector_index_75))  InVars {flowselector_ts_0=v_flowselector_ts_0_18, fc_flowselector_index=v_fc_flowselector_index_75}  OutVars{fc_curflow_ts=v_fc_curflow_ts_26, flowselector_ts_0=v_flowselector_ts_0_18, fc_flowselector_index=v_fc_flowselector_index_75}  AuxVars[]  AssignedVars[fc_curflow_ts] 75573#L827_accept_S2 [5803] L827_accept_S2-->L829_accept_S2: Formula: (= v_fc_curflow_nep_14 (select v_flowselector_nep_0_16 v_fc_flowselector_index_52))  InVars {flowselector_nep_0=v_flowselector_nep_0_16, fc_flowselector_index=v_fc_flowselector_index_52}  OutVars{fc_curflow_nep=v_fc_curflow_nep_14, fc_flowselector_index=v_fc_flowselector_index_52, flowselector_nep_0=v_flowselector_nep_0_16}  AuxVars[]  AssignedVars[fc_curflow_nep] 75221#L829_accept_S2 [3934] L829_accept_S2-->L830_accept_S2: Formula: (= (select v_rerouting_ts_0_18 v_meta.id_291) v_fc_rerouting_ts_tmp_18)  InVars {meta.id=v_meta.id_291, rerouting_ts_0=v_rerouting_ts_0_18}  OutVars{meta.id=v_meta.id_291, fc_rerouting_ts_tmp=v_fc_rerouting_ts_tmp_18, rerouting_ts_0=v_rerouting_ts_0_18}  AuxVars[]  AssignedVars[fc_rerouting_ts_tmp] 75222#L830_accept_S2 [5841] L830_accept_S2-->L831_accept_S2: Formula: (and (<= v_fc_curflow_ts_21 v_meta.ingress_timestamp_second_29) (= v_fc_newflow_key_23 v_fc_curflow_key_30))  InVars {fc_curflow_ts=v_fc_curflow_ts_21, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_29, fc_newflow_key=v_fc_newflow_key_23, fc_curflow_key=v_fc_curflow_key_30}  OutVars{fc_curflow_ts=v_fc_curflow_ts_21, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_29, fc_newflow_key=v_fc_newflow_key_23, fc_curflow_key=v_fc_curflow_key_30}  AuxVars[]  AssignedVars[] 77241#L831_accept_S2 [5546] L831_accept_S2-->L832_accept_S2: Formula: (= v_meta.selected_16 1)  InVars {}  OutVars{meta.selected=v_meta.selected_16}  AuxVars[]  AssignedVars[meta.selected] 76123#L832_accept_S2 [4450] L832_accept_S2-->L863_accept_S2: Formula: (not (= v_hdr.tcp.fin_24 1))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_24}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_24}  AuxVars[]  AssignedVars[] 76125#L863_accept_S2 [5070] L863_accept_S2-->L899_accept_S2: Formula: (not (= v_fc_curflow_nep_13 (mod (+ (mod v_hdr.tcp.seqNo_18 4294967296) (mod v_meta.tcp_payload_len_23 4294967296)) 4294967296)))  InVars {fc_curflow_nep=v_fc_curflow_nep_13, hdr.tcp.seqNo=v_hdr.tcp.seqNo_18, meta.tcp_payload_len=v_meta.tcp_payload_len_23}  OutVars{fc_curflow_nep=v_fc_curflow_nep_13, hdr.tcp.seqNo=v_hdr.tcp.seqNo_18, meta.tcp_payload_len=v_meta.tcp_payload_len_23}  AuxVars[]  AssignedVars[] 76858#L899_accept_S2 [5051] L899_accept_S2-->L899-1_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_fc_rerouting_ts_tmp_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_117 524288)) 524288) 976)) (not (< 0 v_fc_rerouting_ts_tmp_16)))  InVars {fc_rerouting_ts_tmp=v_fc_rerouting_ts_tmp_16, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_117}  OutVars{fc_rerouting_ts_tmp=v_fc_rerouting_ts_tmp_16, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_117}  AuxVars[]  AssignedVars[] 75491#L899-1_accept_S2 [5186] L899-1_accept_S2-->L899-1_accept_S2-D75: Formula: (and (= v_flowselector_ts_0.write_valueInParam_2 v_meta.ingress_timestamp_second_17) (= v_fc_flowselector_index_41 v_flowselector_ts_0.write_indexInParam_2))  InVars {fc_flowselector_index=v_fc_flowselector_index_41, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_17}  OutVars{flowselector_ts_0.write_value=v_flowselector_ts_0.write_valueInParam_2, fc_flowselector_index=v_fc_flowselector_index_41, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_17, flowselector_ts_0.write_index=v_flowselector_ts_0.write_indexInParam_2}  AuxVars[]  AssignedVars[flowselector_ts_0.write_value, flowselector_ts_0.write_index]< 76946#L899-1_accept_S2-D75 [5138] L899-1_accept_S2-D75-->flowselector_ts_0.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76884#flowselector_ts_0.writeENTRY_accept_S2 [5919] flowselector_ts_0.writeENTRY_accept_S2-->flowselector_ts_0.writeFINAL_accept_S2: Formula: (= (store v_flowselector_ts_0_20 v_flowselector_ts_0.write_index_2 v_flowselector_ts_0.write_value_2) v_flowselector_ts_0_19)  InVars {flowselector_ts_0=v_flowselector_ts_0_20, flowselector_ts_0.write_value=v_flowselector_ts_0.write_value_2, flowselector_ts_0.write_index=v_flowselector_ts_0.write_index_2}  OutVars{flowselector_ts_0=v_flowselector_ts_0_19, flowselector_ts_0.write_value=v_flowselector_ts_0.write_value_2, flowselector_ts_0.write_index=v_flowselector_ts_0.write_index_2}  AuxVars[]  AssignedVars[flowselector_ts_0] 75490#flowselector_ts_0.writeFINAL_accept_S2 [4055] flowselector_ts_0.writeFINAL_accept_S2-->flowselector_ts_0.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75494#flowselector_ts_0.writeEXIT_accept_S2 >[6465] flowselector_ts_0.writeEXIT_accept_S2-->L921-D387: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_flowselector_ts_0.write_valueInParam_2 v_meta.ingress_timestamp_second_17) (= v_fc_flowselector_index_41 v_flowselector_ts_0.write_indexInParam_2))  InVars {fc_flowselector_index=v_fc_flowselector_index_41, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_17}  OutVars{flowselector_ts_0.write_value=v_flowselector_ts_0.write_valueInParam_2, fc_flowselector_index=v_fc_flowselector_index_41, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_17, flowselector_ts_0.write_index=v_flowselector_ts_0.write_indexInParam_2}  AuxVars[]  AssignedVars[flowselector_ts_0.write_value, flowselector_ts_0.write_index] 75393#L921-D387 [4008] L921-D387-->L921_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75394#L921_accept_S2 [4402] L921_accept_S2-->L921_accept_S2-D168: Formula: (and (= v_fc_flowselector_index_42 v_flowselector_nep_0.write_indexInParam_2) (= v_flowselector_nep_0.write_valueInParam_2 (mod (+ (mod v_hdr.tcp.seqNo_13 4294967296) (mod v_meta.tcp_payload_len_18 4294967296)) 4294967296)))  InVars {fc_flowselector_index=v_fc_flowselector_index_42, hdr.tcp.seqNo=v_hdr.tcp.seqNo_13, meta.tcp_payload_len=v_meta.tcp_payload_len_18}  OutVars{flowselector_nep_0.write_value=v_flowselector_nep_0.write_valueInParam_2, fc_flowselector_index=v_fc_flowselector_index_42, hdr.tcp.seqNo=v_hdr.tcp.seqNo_13, flowselector_nep_0.write_index=v_flowselector_nep_0.write_indexInParam_2, meta.tcp_payload_len=v_meta.tcp_payload_len_18}  AuxVars[]  AssignedVars[flowselector_nep_0.write_index, flowselector_nep_0.write_value]< 76054#L921_accept_S2-D168 [5072] L921_accept_S2-D168-->flowselector_nep_0.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75318#flowselector_nep_0.writeENTRY_accept_S2 [4522] flowselector_nep_0.writeENTRY_accept_S2-->flowselector_nep_0.writeFINAL_accept_S2: Formula: (= (store v_flowselector_nep_0_22 v_flowselector_nep_0.write_index_3 v_flowselector_nep_0.write_value_3) v_flowselector_nep_0_21)  InVars {flowselector_nep_0.write_value=v_flowselector_nep_0.write_value_3, flowselector_nep_0=v_flowselector_nep_0_22, flowselector_nep_0.write_index=v_flowselector_nep_0.write_index_3}  OutVars{flowselector_nep_0.write_value=v_flowselector_nep_0.write_value_3, flowselector_nep_0=v_flowselector_nep_0_21, flowselector_nep_0.write_index=v_flowselector_nep_0.write_index_3}  AuxVars[]  AssignedVars[flowselector_nep_0] 76220#flowselector_nep_0.writeFINAL_accept_S2 [5668] flowselector_nep_0.writeFINAL_accept_S2-->flowselector_nep_0.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76311#flowselector_nep_0.writeEXIT_accept_S2 >[6638] flowselector_nep_0.writeEXIT_accept_S2-->L927-1-D336: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_fc_flowselector_index_42 v_flowselector_nep_0.write_indexInParam_2) (= v_flowselector_nep_0.write_valueInParam_2 (mod (+ (mod v_hdr.tcp.seqNo_13 4294967296) (mod v_meta.tcp_payload_len_18 4294967296)) 4294967296)))  InVars {fc_flowselector_index=v_fc_flowselector_index_42, hdr.tcp.seqNo=v_hdr.tcp.seqNo_13, meta.tcp_payload_len=v_meta.tcp_payload_len_18}  OutVars{flowselector_nep_0.write_value=v_flowselector_nep_0.write_valueInParam_2, fc_flowselector_index=v_fc_flowselector_index_42, hdr.tcp.seqNo=v_hdr.tcp.seqNo_13, flowselector_nep_0.write_index=v_flowselector_nep_0.write_indexInParam_2, meta.tcp_payload_len=v_meta.tcp_payload_len_18}  AuxVars[]  AssignedVars[flowselector_nep_0.write_index, flowselector_nep_0.write_value] 76312#L927-1-D336 [4776] L927-1-D336-->L927-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75755#L927-1_accept_S2 [4832] L927-1_accept_S2-->L964_accept_S2: Formula: (= v_sum_tmp_0_17 (select v_sw_sum_0_44 v_meta.id_284))  InVars {meta.id=v_meta.id_284, sw_sum_0=v_sw_sum_0_44}  OutVars{meta.id=v_meta.id_284, sw_sum_0=v_sw_sum_0_44, sum_tmp_0=v_sum_tmp_0_17}  AuxVars[]  AssignedVars[sum_tmp_0] 76639#L964_accept_S2 [5318] L964_accept_S2-->L965_accept_S2: Formula: (= (select v_nh_avaibility_1_19 v_meta.id_250) v_nh_avaibility_1_tmp_0_29)  InVars {meta.id=v_meta.id_250, nh_avaibility_1=v_nh_avaibility_1_19}  OutVars{meta.id=v_meta.id_250, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_29, nh_avaibility_1=v_nh_avaibility_1_19}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 76945#L965_accept_S2 [5137] L965_accept_S2-->L671-1_accept_S2: Formula: (or (not (< v_threshold_tmp_0_27 v_sum_tmp_0_13)) (not (= v_nh_avaibility_1_tmp_0_25 0)))  InVars {threshold_tmp_0=v_threshold_tmp_0_27, sum_tmp_0=v_sum_tmp_0_13, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_25}  OutVars{threshold_tmp_0=v_threshold_tmp_0_27, sum_tmp_0=v_sum_tmp_0_13, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_25}  AuxVars[]  AssignedVars[] 76320#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 76321#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 76599#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 76600#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 75349#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 75350#L986_accept_S2 [4916] L986_accept_S2-->L987_accept_S2: Formula: (and (= v_meta.selected_22 1) (< 0 v_rerouting_ts_tmp_0_21) (< (mod (+ (* (mod v_rerouting_ts_tmp_0_21 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_112 524288)) 524288) 976))  InVars {meta.selected=v_meta.selected_22, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_112, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_21}  OutVars{meta.selected=v_meta.selected_22, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_112, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_21}  AuxVars[]  AssignedVars[] 75218#L987_accept_S2 [3932] L987_accept_S2-->L988_accept_S2: Formula: (< v_meta.flowselector_cellid_38 32)  InVars {meta.flowselector_cellid=v_meta.flowselector_cellid_38}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_38}  AuxVars[]  AssignedVars[] 75219#L988_accept_S2 [4155] L988_accept_S2-->L990_accept_S2: Formula: (= v_nh_avaibility_2_tmp_0_19 0)  InVars {nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_19}  OutVars{nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_19}  AuxVars[]  AssignedVars[] 75691#L990_accept_S2 [5238] L990_accept_S2-->L991_accept_S2: Formula: (= v_meta.next_hop_port_46 (select v_next_hops_port_0_34 (mod (+ (mod (* 3 (mod v_meta.id_262 4294967296)) 4294967296) 1) 4294967296)))  InVars {next_hops_port_0=v_next_hops_port_0_34, meta.id=v_meta.id_262}  OutVars{next_hops_port_0=v_next_hops_port_0_34, meta.id=v_meta.id_262, meta.next_hop_port=v_meta.next_hop_port_46}  AuxVars[]  AssignedVars[meta.next_hop_port] 77035#L991_accept_S2 [5907] L991_accept_S2-->L1057-2_accept_S2: Formula: (not (= v_meta.is_retransmission_29 1))  InVars {meta.is_retransmission=v_meta.is_retransmission_29}  OutVars{meta.is_retransmission=v_meta.is_retransmission_29}  AuxVars[]  AssignedVars[] 75567#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 75729#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75728#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75730#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 76100#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 76101#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76963#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76535#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75005#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75006#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76669#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76510#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76509#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76511#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76868#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76305#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75231#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76358#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75230#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75232#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76470#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76180#L1094_accept_S2 [4488] L1094_accept_S2-->L1096_accept_S2: Formula: (not v_forward_28)  InVars {forward=v_forward_28}  OutVars{forward=v_forward_28}  AuxVars[]  AssignedVars[] 75185#L1096_accept_S2 [3914] L1096_accept_S2-->L1095-1_accept_S2: Formula: v_drop_41  InVars {}  OutVars{drop=v_drop_41}  AuxVars[]  AssignedVars[drop] 75187#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 76357#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 76636#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 76214#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 75889#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 75504#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 75381#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75382#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75758#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 75759#L1109-1_accept_S3 
[2023-01-16 04:09:45,859 INFO  L754   eck$LassoCheckResult]: Loop: 75759#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 74996#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76880#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75022#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77059#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77076#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 76151#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 76152#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 76820#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 75692#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 75693#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 76133#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 76134#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 75211#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 75212#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 75503#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 76464#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 76494#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 76495#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 75193#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 75194#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 75978#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 75471#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 75472#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 76523#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 77006#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 77045#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 75785#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 75786#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 76710#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 76788#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 77110#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 76939#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 76940#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 77332#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 75828#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 75829#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 76936#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 76937#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 76496#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 76413#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 75604#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 75169#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 75170#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 76885#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 76886#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 77060#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 77061#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 76840#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 75183#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 75184#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 75747#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 75748#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 76758#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 77234#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 76122#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 75660#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 75530#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 75531#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 77148#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 76784#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 76785#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 77140#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 75243#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 75202#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 75203#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 75310#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 75940#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 76330#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 76418#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 76882#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 75601#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 75456#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 75241#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 75242#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 76575#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 76977#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 75385#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 75386#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 75605#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 75606#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 75299#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 75300#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 75718#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 76542#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 75936#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 75937#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 76200#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 76593#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 75336#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 75337#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 76252#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 76253#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 75021#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 75023#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 76294#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 76878#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 76879#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 77360#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 76528#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 76529#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 75514#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 75515#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 75780#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 76923#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 77316#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 77128#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 77129#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 75677#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 75678#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 75074#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 75075#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 75967#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 75968#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 76656#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 76657#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 76817#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 75815#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 75360#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 75361#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 75487#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 75856#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 75857#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 76201#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 76874#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 75974#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 75975#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 76272#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 76273#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 77147#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 75823#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 75824#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 77323#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 75038#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 75039#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 76505#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 75473#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 75474#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 75272#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 75273#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 76368#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 76369#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 76454#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 76455#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 76536#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 76428#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 75264#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75265#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 74995#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 74997#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75244#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75886#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76683#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76571#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 76572#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 75345#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75525#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75344#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 75346#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 75070#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77295#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76665#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 75069#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75071#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76581#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76582#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76397#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75789#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75790#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77232#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77233#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76982#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75885#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75887#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76601#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75787#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75788#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76009#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76010#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75422#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75421#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75423#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76681#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75406#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75003#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75488#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75489#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 76766#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 76500#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 75209#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 75210#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 75092#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75093#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76391#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 76392#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 75544#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76999#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77000#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75056#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75524#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75055#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 75057#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 75266#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75995#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 75113#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 75114#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 76655#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77231#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 76795#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76459#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76398#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76399#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75457#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 75458#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 76221#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 76724#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 75993#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 75994#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 76749#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 77168#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 77169#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 76894#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 76895#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 75679#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 75680#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 76833#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 75838#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 75902#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 76996#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76993#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 75938#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 75939#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 77112#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75709#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75710#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76478#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76435#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75820#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 77070#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75819#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75821#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75888#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75568#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 75569#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76074#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76075#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75262#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75263#L1094_accept_S3 [4341] L1094_accept_S3-->L1096_accept_S3: Formula: (not v_forward_26)  InVars {forward=v_forward_26}  OutVars{forward=v_forward_26}  AuxVars[]  AssignedVars[] 75977#L1096_accept_S3 [4963] L1096_accept_S3-->L1095-1_accept_S3: Formula: v_drop_42  InVars {}  OutVars{drop=v_drop_42}  AuxVars[]  AssignedVars[drop] 75369#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 75370#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 76429#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 76430#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 76650#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 76644#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 76645#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76670#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 76671#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 75759#L1109-1_accept_S3 
[2023-01-16 04:09:45,860 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:09:45,861 INFO  L85        PathProgramCache]: Analyzing trace with hash 316060962, now seen corresponding path program 1 times
[2023-01-16 04:09:45,861 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:09:45,861 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [853365783]
[2023-01-16 04:09:45,861 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:09:45,861 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:09:45,925 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,318 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:09:46,338 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,444 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:09:46,450 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,462 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:09:46,465 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,473 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:09:46,475 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,488 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:09:46,490 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,498 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:09:46,499 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,500 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:09:46,501 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,501 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:09:46,502 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,617 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:09:46,622 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,643 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:09:46,645 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,662 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:09:46,664 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,677 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:09:46,678 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,697 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:09:46,699 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,701 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:09:46,703 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,705 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:09:46,706 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,711 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 260
[2023-01-16 04:09:46,745 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,834 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:09:46,851 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,863 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:09:46,866 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,869 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:09:46,870 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,872 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:09:46,872 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,874 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:09:46,874 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,876 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:09:46,876 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,877 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:09:46,879 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,883 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:09:46,894 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,910 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:09:46,912 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,913 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:09:46,916 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,918 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:09:46,919 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,926 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 55
[2023-01-16 04:09:46,927 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,937 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 61
[2023-01-16 04:09:46,938 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,940 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 81
[2023-01-16 04:09:46,941 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,943 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 274
[2023-01-16 04:09:46,945 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,946 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 279
[2023-01-16 04:09:46,947 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:09:46,949 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:09:46,949 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:09:46,949 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [853365783]
[2023-01-16 04:09:46,950 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [853365783] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:09:46,950 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:09:46,950 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2023-01-16 04:09:46,950 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [154690924]
[2023-01-16 04:09:46,950 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:09:46,951 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:09:46,951 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:09:46,951 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2023-01-16 04:09:46,951 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=78, Invalid=342, Unknown=0, NotChecked=0, Total=420
[2023-01-16 04:09:46,952 INFO  L87              Difference]: Start difference. First operand 3960 states and 4523 transitions. cyclomatic complexity: 566 Second operand  has 21 states, 20 states have (on average 24.55) internal successors, (491), 7 states have internal predecessors, (491), 3 states have call successors, (33), 14 states have call predecessors, (33), 4 states have return successors, (32), 4 states have call predecessors, (32), 3 states have call successors, (32)
[2023-01-16 04:11:49,126 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:11:49,126 INFO  L93              Difference]: Finished difference Result 9571 states and 11825 transitions.
[2023-01-16 04:11:49,127 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 214 states. 
[2023-01-16 04:11:49,127 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9571 states and 11825 transitions.
[2023-01-16 04:11:49,151 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 6
[2023-01-16 04:11:49,181 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9571 states to 9219 states and 11390 transitions.
[2023-01-16 04:11:49,181 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 858
[2023-01-16 04:11:49,182 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 858
[2023-01-16 04:11:49,182 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9219 states and 11390 transitions.
[2023-01-16 04:11:49,189 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:11:49,190 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 9219 states and 11390 transitions.
[2023-01-16 04:11:49,193 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9219 states and 11390 transitions.
[2023-01-16 04:11:49,256 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9219 to 3952.
[2023-01-16 04:11:49,259 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 3952 states, 3213 states have (on average 1.1089324618736383) internal successors, (3563), 3043 states have internal predecessors, (3563), 458 states have call successors, (458), 443 states have call predecessors, (458), 281 states have return successors, (490), 465 states have call predecessors, (490), 457 states have call successors, (490)
[2023-01-16 04:11:49,263 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3952 states to 3952 states and 4511 transitions.
[2023-01-16 04:11:49,263 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 3952 states and 4511 transitions.
[2023-01-16 04:11:49,263 INFO  L399   stractBuchiCegarLoop]: Abstraction has 3952 states and 4511 transitions.
[2023-01-16 04:11:49,263 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 11 ============
[2023-01-16 04:11:49,264 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3952 states and 4511 transitions.
[2023-01-16 04:11:49,268 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-01-16 04:11:49,269 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-01-16 04:11:49,269 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-01-16 04:11:49,270 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:11:49,270 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-01-16 04:11:49,275 INFO  L752   eck$LassoCheckResult]: Stem: 90454#ULTIMATE.startENTRY_NONWA [4983] ULTIMATE.startENTRY_NONWA-->L1109-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91998#L1109-1_T0_init [4395] L1109-1_T0_init-->L1109_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90339#L1109_T0_init [3920] L1109_T0_init-->L1109_T0_init-D107: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92868#L1109_T0_init-D107 [5367] L1109_T0_init-D107-->mainENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92862#mainENTRY_T0_init [5389] mainENTRY_T0_init-->mainENTRY_T0_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92863#mainENTRY_T0_init-D50 [5494] mainENTRY_T0_init-D50-->havocProcedureENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 93030#havocProcedureENTRY_T0_init [4094] havocProcedureENTRY_T0_init-->L490_T0_init: Formula: (not v_drop_39)  InVars {}  OutVars{drop=v_drop_39}  AuxVars[]  AssignedVars[drop] 93029#L490_T0_init [3881] L490_T0_init-->L491_T0_init: Formula: (not v_forward_21)  InVars {}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[forward] 93028#L491_T0_init [5863] L491_T0_init-->L492_T0_init: Formula: (= v_standard_metadata.ingress_port_18 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 93027#L492_T0_init [5861] L492_T0_init-->L493_T0_init: Formula: (= v_standard_metadata.egress_spec_21 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_21}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 93026#L493_T0_init [4880] L493_T0_init-->L494_T0_init: Formula: (= 0 v_standard_metadata.egress_port_19)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 93025#L494_T0_init [5727] L494_T0_init-->L495_T0_init: Formula: (= v_standard_metadata.instance_type_8 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_8}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 93024#L495_T0_init [3886] L495_T0_init-->L496_T0_init: Formula: (= v_standard_metadata.packet_length_8 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_8}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 93023#L496_T0_init [4974] L496_T0_init-->L497_T0_init: Formula: (= v_standard_metadata.enq_timestamp_8 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 93022#L497_T0_init [5315] L497_T0_init-->L498_T0_init: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 93021#L498_T0_init [5715] L498_T0_init-->L499_T0_init: Formula: (= v_standard_metadata.deq_timedelta_8 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_8}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 93020#L499_T0_init [4128] L499_T0_init-->L500_T0_init: Formula: (= v_standard_metadata.deq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 93019#L500_T0_init [5606] L500_T0_init-->L501_T0_init: Formula: (= v_standard_metadata.ingress_global_timestamp_28 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_28}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 93018#L501_T0_init [4720] L501_T0_init-->L502_T0_init: Formula: (= v_standard_metadata.egress_global_timestamp_8 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_8}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 93017#L502_T0_init [4634] L502_T0_init-->L503_T0_init: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 93016#L503_T0_init [5554] L503_T0_init-->L504_T0_init: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 93015#L504_T0_init [5397] L504_T0_init-->L505_T0_init: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 93014#L505_T0_init [3876] L505_T0_init-->L506_T0_init: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 93013#L506_T0_init [5718] L506_T0_init-->L507_T0_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 93012#L507_T0_init [5423] L507_T0_init-->L508_T0_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.ethernet_4 false))  InVars {emit=v_emit_40, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_39, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 93011#L508_T0_init [5628] L508_T0_init-->L509_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 93010#L509_T0_init [5894] L509_T0_init-->L510_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 93009#L510_T0_init [4990] L510_T0_init-->L511_T0_init: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_16}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 93008#L511_T0_init [5352] L511_T0_init-->L512_T0_init: Formula: (and (<= 0 v_hdr.ethernet.etherType_15) (<= v_hdr.ethernet.etherType_15 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_15}  AuxVars[]  AssignedVars[] 93007#L512_T0_init [4026] L512_T0_init-->L513_T0_init: Formula: (not v_hdr.ipv4_icmp.valid_8)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_8}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 93006#L513_T0_init [4568] L513_T0_init-->L514_T0_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.ipv4_icmp_15 false))  InVars {emit=v_emit_42, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  OutVars{emit=v_emit_41, hdr.ipv4_icmp=v_hdr.ipv4_icmp_15}  AuxVars[]  AssignedVars[emit] 93005#L514_T0_init [4143] L514_T0_init-->L515_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 93004#L515_T0_init [5288] L515_T0_init-->L516_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.version_14 16) (<= 0 v_hdr.ipv4_icmp.version_14))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_14}  AuxVars[]  AssignedVars[] 93003#L516_T0_init [5702] L516_T0_init-->L517_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 93002#L517_T0_init [4300] L517_T0_init-->L518_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ihl_9 16) (<= 0 v_hdr.ipv4_icmp.ihl_9))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_9}  AuxVars[]  AssignedVars[] 93001#L518_T0_init [4387] L518_T0_init-->L519_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 93000#L519_T0_init [4145] L519_T0_init-->L520_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_9) (<= v_hdr.ipv4_icmp.dscp_9 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_9}  AuxVars[]  AssignedVars[] 92999#L520_T0_init [3981] L520_T0_init-->L521_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 92998#L521_T0_init [5226] L521_T0_init-->L522_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.ecn_13) (<= v_hdr.ipv4_icmp.ecn_13 4))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_13}  AuxVars[]  AssignedVars[] 92997#L522_T0_init [5650] L522_T0_init-->L523_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 92996#L523_T0_init [5105] L523_T0_init-->L524_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_19) (<= v_hdr.ipv4_icmp.totalLen_19 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_19}  AuxVars[]  AssignedVars[] 92995#L524_T0_init [4891] L524_T0_init-->L525_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 92994#L525_T0_init [3978] L525_T0_init-->L526_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.identification_13 65536) (<= 0 v_hdr.ipv4_icmp.identification_13))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_13}  AuxVars[]  AssignedVars[] 92993#L526_T0_init [5404] L526_T0_init-->L527_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 92992#L527_T0_init [5232] L527_T0_init-->L528_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.flags_10) (<= v_hdr.ipv4_icmp.flags_10 8))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_10}  AuxVars[]  AssignedVars[] 92991#L528_T0_init [5368] L528_T0_init-->L529_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 92990#L529_T0_init [5467] L529_T0_init-->L530_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_14 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_14))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_14}  AuxVars[]  AssignedVars[] 92989#L530_T0_init [5102] L530_T0_init-->L531_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 92988#L531_T0_init [4919] L531_T0_init-->L532_T0_init: Formula: (and (<= v_hdr.ipv4_icmp.ttl_17 256) (<= 0 v_hdr.ipv4_icmp.ttl_17))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_17}  AuxVars[]  AssignedVars[] 92987#L532_T0_init [5891] L532_T0_init-->L533_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 92986#L533_T0_init [5823] L533_T0_init-->L534_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_15) (<= v_hdr.ipv4_icmp.protocol_15 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_15}  AuxVars[]  AssignedVars[] 92985#L534_T0_init [5103] L534_T0_init-->L535_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 92984#L535_T0_init [5845] L535_T0_init-->L536_T0_init: Formula: (and (<= 0 v_hdr.ipv4_icmp.hdrChecksum_11) (<= v_hdr.ipv4_icmp.hdrChecksum_11 65536))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_11}  AuxVars[]  AssignedVars[] 92983#L536_T0_init [5134] L536_T0_init-->L537_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 92982#L537_T0_init [5468] L537_T0_init-->L538_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 92981#L538_T0_init [4412] L538_T0_init-->L539_T0_init: Formula: (not v_hdr.icmp.valid_8)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_8}  AuxVars[]  AssignedVars[hdr.icmp.valid] 92980#L539_T0_init [4859] L539_T0_init-->L540_T0_init: Formula: (= v_emit_37 (store v_emit_38 v_hdr.icmp_5 false))  InVars {emit=v_emit_38, hdr.icmp=v_hdr.icmp_5}  OutVars{emit=v_emit_37, hdr.icmp=v_hdr.icmp_5}  AuxVars[]  AssignedVars[emit] 92979#L540_T0_init [5531] L540_T0_init-->L541_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_18}  AuxVars[]  AssignedVars[hdr.icmp.type] 92978#L541_T0_init [4721] L541_T0_init-->L542_T0_init: Formula: (and (<= v_hdr.icmp.type_17 256) (<= 0 v_hdr.icmp.type_17))  InVars {hdr.icmp.type=v_hdr.icmp.type_17}  OutVars{hdr.icmp.type=v_hdr.icmp.type_17}  AuxVars[]  AssignedVars[] 92977#L542_T0_init [5738] L542_T0_init-->L543_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_15}  AuxVars[]  AssignedVars[hdr.icmp.code] 92976#L543_T0_init [5745] L543_T0_init-->L544_T0_init: Formula: (and (<= 0 v_hdr.icmp.code_20) (<= v_hdr.icmp.code_20 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_20}  OutVars{hdr.icmp.code=v_hdr.icmp.code_20}  AuxVars[]  AssignedVars[] 92975#L544_T0_init [4758] L544_T0_init-->L545_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_14}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 92974#L545_T0_init [4487] L545_T0_init-->L546_T0_init: Formula: (and (<= v_hdr.icmp.checksum_13 65536) (<= 0 v_hdr.icmp.checksum_13))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_13}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_13}  AuxVars[]  AssignedVars[] 92973#L546_T0_init [4877] L546_T0_init-->L547_T0_init: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_13}  AuxVars[]  AssignedVars[hdr.icmp.unused] 92972#L547_T0_init [5534] L547_T0_init-->L548_T0_init: Formula: (and (<= 0 v_hdr.icmp.unused_14) (<= v_hdr.icmp.unused_14 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_14}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_14}  AuxVars[]  AssignedVars[] 92971#L548_T0_init [4294] L548_T0_init-->L549_T0_init: Formula: (not v_hdr.ipv4.valid_25)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_25}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 92970#L549_T0_init [5853] L549_T0_init-->L550_T0_init: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ipv4_6 false))  InVars {hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_32}  OutVars{hdr.ipv4=v_hdr.ipv4_6, emit=v_emit_31}  AuxVars[]  AssignedVars[emit] 92969#L550_T0_init [4795] L550_T0_init-->L551_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 92968#L551_T0_init [4301] L551_T0_init-->L552_T0_init: Formula: (and (<= v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 92967#L552_T0_init [4972] L552_T0_init-->L553_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_15}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 92966#L553_T0_init [5120] L553_T0_init-->L554_T0_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_16) (<= v_hdr.ipv4.ihl_16 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_16}  AuxVars[]  AssignedVars[] 92965#L554_T0_init [4957] L554_T0_init-->L555_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_9}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 92964#L555_T0_init [4167] L555_T0_init-->L556_T0_init: Formula: (and (<= v_hdr.ipv4.dscp_10 64) (<= 0 v_hdr.ipv4.dscp_10))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_10}  AuxVars[]  AssignedVars[] 92963#L556_T0_init [4627] L556_T0_init-->L557_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 92962#L557_T0_init [4701] L557_T0_init-->L558_T0_init: Formula: (and (<= v_hdr.ipv4.ecn_9 4) (<= 0 v_hdr.ipv4.ecn_9))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_9}  AuxVars[]  AssignedVars[] 92961#L558_T0_init [5479] L558_T0_init-->L559_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 92960#L559_T0_init [4170] L559_T0_init-->L560_T0_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_18) (<= v_hdr.ipv4.totalLen_18 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_18}  AuxVars[]  AssignedVars[] 92959#L560_T0_init [5582] L560_T0_init-->L561_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 92958#L561_T0_init [5175] L561_T0_init-->L562_T0_init: Formula: (and (<= v_hdr.ipv4.identification_9 65536) (<= 0 v_hdr.ipv4.identification_9))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_9}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[] 92957#L562_T0_init [3967] L562_T0_init-->L563_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 92956#L563_T0_init [5532] L563_T0_init-->L564_T0_init: Formula: (and (<= v_hdr.ipv4.flags_12 8) (<= 0 v_hdr.ipv4.flags_12))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_12}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[] 92955#L564_T0_init [4989] L564_T0_init-->L565_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 92954#L565_T0_init [4675] L565_T0_init-->L566_T0_init: Formula: (and (<= v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 92953#L566_T0_init [5224] L566_T0_init-->L567_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_31}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 92952#L567_T0_init [5505] L567_T0_init-->L568_T0_init: Formula: (and (<= v_hdr.ipv4.ttl_26 256) (<= 0 v_hdr.ipv4.ttl_26))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_26}  AuxVars[]  AssignedVars[] 92951#L568_T0_init [4350] L568_T0_init-->L569_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 92950#L569_T0_init [4140] L569_T0_init-->L570_T0_init: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (<= v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 92949#L570_T0_init [4369] L570_T0_init-->L571_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 92948#L571_T0_init [5371] L571_T0_init-->L572_T0_init: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (<= v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 92947#L572_T0_init [4943] L572_T0_init-->L573_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 92946#L573_T0_init [5850] L573_T0_init-->L574_T0_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_8}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 92945#L574_T0_init [4865] L574_T0_init-->L575_T0_init: Formula: (not v_hdr.tcp.valid_33)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_33}  AuxVars[]  AssignedVars[hdr.tcp.valid] 92944#L575_T0_init [5087] L575_T0_init-->L576_T0_init: Formula: (= v_emit_25 (store v_emit_26 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_26}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_25}  AuxVars[]  AssignedVars[emit] 92943#L576_T0_init [5196] L576_T0_init-->L577_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 92942#L577_T0_init [4423] L577_T0_init-->L578_T0_init: Formula: (and (<= v_hdr.tcp.srcPort_11 65536) (<= 0 v_hdr.tcp.srcPort_11))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[] 92941#L578_T0_init [4790] L578_T0_init-->L579_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 92940#L579_T0_init [5213] L579_T0_init-->L580_T0_init: Formula: (and (<= v_hdr.tcp.dstPort_13 65536) (<= 0 v_hdr.tcp.dstPort_13))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[] 92939#L580_T0_init [4918] L580_T0_init-->L581_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_21}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 92938#L581_T0_init [4787] L581_T0_init-->L582_T0_init: Formula: (and (<= v_hdr.tcp.seqNo_22 4294967296) (<= 0 v_hdr.tcp.seqNo_22))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_22}  AuxVars[]  AssignedVars[] 92937#L582_T0_init [5384] L582_T0_init-->L583_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 92936#L583_T0_init [4995] L583_T0_init-->L584_T0_init: Formula: (and (<= v_hdr.tcp.ackNo_12 4294967296) (<= 0 v_hdr.tcp.ackNo_12))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[] 92935#L584_T0_init [5640] L584_T0_init-->L585_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 92934#L585_T0_init [5750] L585_T0_init-->L586_T0_init: Formula: (and (<= v_hdr.tcp.dataOffset_14 16) (<= 0 v_hdr.tcp.dataOffset_14))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[] 92933#L586_T0_init [5539] L586_T0_init-->L587_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 92932#L587_T0_init [5579] L587_T0_init-->L588_T0_init: Formula: (and (<= v_hdr.tcp.res_10 16) (<= 0 v_hdr.tcp.res_10))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 92931#L588_T0_init [4764] L588_T0_init-->L589_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_12}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 92930#L589_T0_init [3834] L589_T0_init-->L590_T0_init: Formula: (and (<= v_hdr.tcp.cwr_9 2) (<= 0 v_hdr.tcp.cwr_9))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_9}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_9}  AuxVars[]  AssignedVars[] 92929#L590_T0_init [5432] L590_T0_init-->L591_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_11}  AuxVars[]  AssignedVars[hdr.tcp.ece] 92928#L591_T0_init [5160] L591_T0_init-->L592_T0_init: Formula: (and (<= 0 v_hdr.tcp.ece_12) (<= v_hdr.tcp.ece_12 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_12}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_12}  AuxVars[]  AssignedVars[] 92927#L592_T0_init [5761] L592_T0_init-->L593_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_13}  AuxVars[]  AssignedVars[hdr.tcp.urg] 92926#L593_T0_init [4453] L593_T0_init-->L594_T0_init: Formula: (and (<= v_hdr.tcp.urg_14 2) (<= 0 v_hdr.tcp.urg_14))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_14}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_14}  AuxVars[]  AssignedVars[] 92925#L594_T0_init [5041] L594_T0_init-->L595_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_9}  AuxVars[]  AssignedVars[hdr.tcp.ack] 92924#L595_T0_init [4498] L595_T0_init-->L596_T0_init: Formula: (and (<= v_hdr.tcp.ack_14 2) (<= 0 v_hdr.tcp.ack_14))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_14}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_14}  AuxVars[]  AssignedVars[] 92923#L596_T0_init [4650] L596_T0_init-->L597_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_11}  AuxVars[]  AssignedVars[hdr.tcp.psh] 92922#L597_T0_init [3892] L597_T0_init-->L598_T0_init: Formula: (and (<= v_hdr.tcp.psh_14 2) (<= 0 v_hdr.tcp.psh_14))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_14}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_14}  AuxVars[]  AssignedVars[] 92921#L598_T0_init [3910] L598_T0_init-->L599_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_14}  AuxVars[]  AssignedVars[hdr.tcp.rst] 92920#L599_T0_init [4909] L599_T0_init-->L600_T0_init: Formula: (and (<= 0 v_hdr.tcp.rst_9) (<= v_hdr.tcp.rst_9 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_9}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_9}  AuxVars[]  AssignedVars[] 92919#L600_T0_init [4197] L600_T0_init-->L601_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_22}  AuxVars[]  AssignedVars[hdr.tcp.syn] 92918#L601_T0_init [4194] L601_T0_init-->L602_T0_init: Formula: (and (<= v_hdr.tcp.syn_21 2) (<= 0 v_hdr.tcp.syn_21))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_21}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_21}  AuxVars[]  AssignedVars[] 92917#L602_T0_init [5393] L602_T0_init-->L603_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_33}  AuxVars[]  AssignedVars[hdr.tcp.fin] 92916#L603_T0_init [5176] L603_T0_init-->L604_T0_init: Formula: (and (<= v_hdr.tcp.fin_34 2) (<= 0 v_hdr.tcp.fin_34))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_34}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_34}  AuxVars[]  AssignedVars[] 92915#L604_T0_init [4226] L604_T0_init-->L605_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[hdr.tcp.window] 92914#L605_T0_init [4180] L605_T0_init-->L606_T0_init: Formula: (and (<= v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 92913#L606_T0_init [4163] L606_T0_init-->L607_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 92912#L607_T0_init [3973] L607_T0_init-->L608_T0_init: Formula: (and (<= v_hdr.tcp.checksum_9 65536) (<= 0 v_hdr.tcp.checksum_9))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 92911#L608_T0_init [3863] L608_T0_init-->L609_T0_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 92910#L609_T0_init [5544] L609_T0_init-->L610_T0_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (<= v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 92909#L610_T0_init [4000] L610_T0_init-->L611_T0_init: Formula: (= v_meta.id_294 0)  InVars {}  OutVars{meta.id=v_meta.id_294}  AuxVars[]  AssignedVars[meta.id] 92908#L611_T0_init [4308] L611_T0_init-->L612_T0_init: Formula: (= v_meta.use_blink_34 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_34}  AuxVars[]  AssignedVars[meta.use_blink] 92907#L612_T0_init [4326] L612_T0_init-->L613_T0_init: Formula: (= v_meta.is_retransmission_32 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_32}  AuxVars[]  AssignedVars[meta.is_retransmission] 92906#L613_T0_init [4078] L613_T0_init-->L614_T0_init: Formula: (= v_meta.next_hop_port_55 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_55}  AuxVars[]  AssignedVars[meta.next_hop_port] 92905#L614_T0_init [4077] L614_T0_init-->L615_T0_init: Formula: (= v_meta.tcp_payload_len_40 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_40}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 92904#L615_T0_init [4562] L615_T0_init-->L616_T0_init: Formula: (= 0 v_meta.ingress_timestamp_second_36)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_36}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 92903#L616_T0_init [5188] L616_T0_init-->L617_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_126 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_126}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 92902#L617_T0_init [3968] L617_T0_init-->L618_T0_init: Formula: (= v_meta.flowselector_cellid_48 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_48}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 92901#L618_T0_init [5002] L618_T0_init-->L619_T0_init: Formula: (= v_meta.selected_26 0)  InVars {}  OutVars{meta.selected=v_meta.selected_26}  AuxVars[]  AssignedVars[meta.selected] 92900#L619_T0_init [4785] L619_T0_init-->L620_T0_init: Formula: (= v_meta.bgp_ngh_type_15 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_15}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 92899#L620_T0_init [4133] L620_T0_init-->L621_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 92896#L621_T0_init [4777] L621_T0_init-->L622_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 92892#L622_T0_init [3971] L622_T0_init-->L623_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_12}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 92889#L623_T0_init [5439] L623_T0_init-->L624_T0_init: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_14}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 92886#L624_T0_init [4424] L624_T0_init-->L625_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_12}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 92882#L625_T0_init [4817] L625_T0_init-->L626_T0_init: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_12}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 92879#L626_T0_init [5470] L626_T0_init-->L627_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_10}  AuxVars[]  AssignedVars[send_0.set_nh.port] 92876#L627_T0_init [5691] L627_T0_init-->L628_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_10}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 92872#L628_T0_init [5927] L628_T0_init-->L629_T0_init: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_10}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 92870#L629_T0_init [4388] L629_T0_init-->havocProcedureFINAL_T0_init: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_12}  AuxVars[]  AssignedVars[send_0.action_run] 92867#havocProcedureFINAL_T0_init [5868] havocProcedureFINAL_T0_init-->havocProcedureEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92861#havocProcedureEXIT_T0_init >[6505] havocProcedureEXIT_T0_init-->L1089-D239: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92859#L1089-D239 [4261] L1089-D239-->L1089_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92856#L1089_T0_init [3887] L1089_T0_init-->L1089_T0_init-D140: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92857#L1089_T0_init-D140 [4950] L1089_T0_init-D140-->_parser_ParserImplENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92865#_parser_ParserImplENTRY_T0_init [5447] _parser_ParserImplENTRY_T0_init-->_parser_ParserImplENTRY_T0_init-D164: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92866#_parser_ParserImplENTRY_T0_init-D164 [4718] _parser_ParserImplENTRY_T0_init-D164-->startENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92881#startENTRY_T0_init [4566] startENTRY_T0_init-->L1240_T0_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 92878#L1240_T0_init [5818] L1240_T0_init-->L1241_T0_init: Formula: (= v_hdr.ethernet.etherType_19 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_19}  AuxVars[]  AssignedVars[] 92874#L1241_T0_init [5449] L1241_T0_init-->L1241_T0_init-D38: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92875#L1241_T0_init-D38 [4374] L1241_T0_init-D38-->parse_ipv4ENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92891#parse_ipv4ENTRY_T0_init [5001] parse_ipv4ENTRY_T0_init-->L1169_T0_init: Formula: v_hdr.ipv4.valid_26  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_26}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 92888#L1169_T0_init [4211] L1169_T0_init-->L1170_T0_init: Formula: (= v_hdr.ipv4.protocol_17 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[] 92884#L1170_T0_init [3879] L1170_T0_init-->L1170_T0_init-D149: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92885#L1170_T0_init-D149 [5663] L1170_T0_init-D149-->parse_tcpENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92898#parse_tcpENTRY_T0_init [4827] parse_tcpENTRY_T0_init-->L1179_T0_init: Formula: v_hdr.tcp.valid_40  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_40}  AuxVars[]  AssignedVars[hdr.tcp.valid] 92894#L1179_T0_init [4811] L1179_T0_init-->L1179_T0_init-D56: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92895#L1179_T0_init-D56 [5411] L1179_T0_init-D56-->acceptFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92897#acceptFINAL_T0_init [5651] acceptFINAL_T0_init-->acceptEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92893#acceptEXIT_T0_init >[6275] acceptEXIT_T0_init-->parse_tcpFINAL-D380: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92890#parse_tcpFINAL-D380 [4203] parse_tcpFINAL-D380-->parse_tcpFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92887#parse_tcpFINAL_T0_init [5121] parse_tcpFINAL_T0_init-->parse_tcpEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92883#parse_tcpEXIT_T0_init >[6407] parse_tcpEXIT_T0_init-->L1169-1-D440: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92880#L1169-1-D440 [4617] L1169-1-D440-->L1169-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92877#L1169-1_T0_init [4020] L1169-1_T0_init-->parse_ipv4EXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92873#parse_ipv4EXIT_T0_init >[5995] parse_ipv4EXIT_T0_init-->L1240-1-D449: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92871#L1240-1-D449 [5059] L1240-1-D449-->L1240-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92869#L1240-1_T0_init [4102] L1240-1_T0_init-->startEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92864#startEXIT_T0_init >[5946] startEXIT_T0_init-->_parser_ParserImplFINAL-D428: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92860#_parser_ParserImplFINAL-D428 [4458] _parser_ParserImplFINAL-D428-->_parser_ParserImplFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92858#_parser_ParserImplFINAL_T0_init [4421] _parser_ParserImplFINAL_T0_init-->_parser_ParserImplEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92855#_parser_ParserImplEXIT_T0_init >[6641] _parser_ParserImplEXIT_T0_init-->L1090-D344: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92854#L1090-D344 [4202] L1090-D344-->L1090_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92851#L1090_T0_init [4189] L1090_T0_init-->L1090_T0_init-D116: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92852#L1090_T0_init-D116 [4186] L1090_T0_init-D116-->verifyChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92853#verifyChecksumFINAL_T0_init [4958] verifyChecksumFINAL_T0_init-->verifyChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92850#verifyChecksumEXIT_T0_init >[6538] verifyChecksumEXIT_T0_init-->L1091-D341: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92848#L1091-D341 [4822] L1091-D341-->L1091_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90353#L1091_T0_init [5536] L1091_T0_init-->L1091_T0_init-D221: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92846#L1091_T0_init-D221 [5319] L1091_T0_init-D221-->ingressENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92843#ingressENTRY_T0_init [3890] ingressENTRY_T0_init-->L638_T0_init: Formula: (= (select v_timestamp_reference_0_15 0) v_ts_tmp_0_20)  InVars {timestamp_reference_0=v_timestamp_reference_0_15}  OutVars{timestamp_reference_0=v_timestamp_reference_0_15, ts_tmp_0=v_ts_tmp_0_20}  AuxVars[]  AssignedVars[ts_tmp_0] 92840#L638_T0_init [4214] L638_T0_init-->L638-1_T0_init: Formula: (not (< 500000000 (mod (+ (* (mod v_ts_tmp_0_22 281474976710656) 281474976710655) (mod v_standard_metadata.ingress_global_timestamp_20 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_20, ts_tmp_0=v_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 92839#L638-1_T0_init [5068] L638-1_T0_init-->L644_T0_init: Formula: (= v_ts_tmp_0_23 (select v_timestamp_reference_0_16 0))  InVars {timestamp_reference_0=v_timestamp_reference_0_16}  OutVars{timestamp_reference_0=v_timestamp_reference_0_16, ts_tmp_0=v_ts_tmp_0_23}  AuxVars[]  AssignedVars[ts_tmp_0] 92838#L644_T0_init [4603] L644_T0_init-->L645_T0_init: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_25 281474976710656)) (.cse1 (mod v_ts_tmp_0_30 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1048575 .cse1)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_33)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_33, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_25, ts_tmp_0=v_ts_tmp_0_30}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 92837#L645_T0_init [5358] L645_T0_init-->L646_T0_init: Formula: (= v_meta.ingress_timestamp_millisecond_59 (mod (div (let ((.cse1 (mod v_standard_metadata.ingress_global_timestamp_18 281474976710656)) (.cse0 (mod v_ts_tmp_0_17 281474976710656))) (+ (mod (+ (* 281474976710655 .cse0) .cse1) 281474976710656) (* (- 1) (mod (+ .cse1 (* 1023 .cse0)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_59, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_18, ts_tmp_0=v_ts_tmp_0_17}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 92835#L646_T0_init [4959] L646_T0_init-->L646_T0_init-D185: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92836#L646_T0_init-D185 [5048] L646_T0_init-D185-->bgp_tag_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 93041#bgp_tag_0.applyENTRY_T0_init [5810] bgp_tag_0.applyENTRY_T0_init-->L427_T0_init: Formula: (not (= v_bgp_tag_0.action_run_26 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_26}  AuxVars[]  AssignedVars[] 93034#L427_T0_init [4927] L427_T0_init-->L427-1_T0_init: Formula: (not (= v_bgp_tag_0.action_run_20 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_20}  AuxVars[]  AssignedVars[] 93031#L427-1_T0_init [3987] L427-1_T0_init-->bgp_tag_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92834#bgp_tag_0.applyEXIT_T0_init >[6515] bgp_tag_0.applyEXIT_T0_init-->L646-1-D437: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92833#L646-1-D437 [3992] L646-1-D437-->L646-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92821#L646-1_T0_init [4409] L646-1_T0_init-->L646-1_T0_init-D8: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92822#L646-1_T0_init-D8 [3902] L646-1_T0_init-D8-->meta_fwtable_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92829#meta_fwtable_0.applyENTRY_T0_init [5435] meta_fwtable_0.applyENTRY_T0_init-->L1121_T0_init: Formula: (= v_meta_fwtable_0.action_run_17 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_17}  AuxVars[]  AssignedVars[] 92826#L1121_T0_init [4760] L1121_T0_init-->L1121_T0_init-D236: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 92827#L1121_T0_init-D236 [5636] L1121_T0_init-D236-->set_metaENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92832#set_metaENTRY_T0_init [5316] set_metaENTRY_T0_init-->L1219_T0_init: Formula: (= v_set_meta_id_2 v_meta.id_298)  InVars {set_meta_id=v_set_meta_id_2}  OutVars{meta.id=v_meta.id_298, set_meta_id=v_set_meta_id_2}  AuxVars[]  AssignedVars[meta.id] 92831#L1219_T0_init [4789] L1219_T0_init-->L1220_T0_init: Formula: (= v_set_meta_use_blink_2 v_meta.use_blink_38)  InVars {set_meta_use_blink=v_set_meta_use_blink_2}  OutVars{meta.use_blink=v_meta.use_blink_38, set_meta_use_blink=v_set_meta_use_blink_2}  AuxVars[]  AssignedVars[meta.use_blink] 92830#L1220_T0_init [5369] L1220_T0_init-->set_metaFINAL_T0_init: Formula: (= v_meta.next_hop_port_58 v_set_meta_default_nexthop_port_2)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  OutVars{meta.next_hop_port=v_meta.next_hop_port_58, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_2}  AuxVars[]  AssignedVars[meta.next_hop_port] 92828#set_metaFINAL_T0_init [5508] set_metaFINAL_T0_init-->set_metaEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92825#set_metaEXIT_T0_init >[5962] set_metaEXIT_T0_init-->L1123-1-D410: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 92824#L1123-1-D410 [5146] L1123-1-D410-->L1123-1_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92823#L1123-1_T0_init [4750] L1123-1_T0_init-->meta_fwtable_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92820#meta_fwtable_0.applyEXIT_T0_init >[6114] meta_fwtable_0.applyEXIT_T0_init-->L647-D392: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92819#L647-D392 [4904] L647-D392-->L647_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92818#L647_T0_init [4599] L647_T0_init-->L670_T0_init: Formula: (or (not (= v_hdr.ipv4.ttl_21 1)) (not v_hdr.tcp.valid_28) (not v_hdr.ipv4.valid_18))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_28, hdr.ipv4.valid=v_hdr.ipv4.valid_18, hdr.ipv4.ttl=v_hdr.ipv4.ttl_21}  AuxVars[]  AssignedVars[] 92817#L670_T0_init [4111] L670_T0_init-->L671_T0_init: Formula: (= v_threshold_tmp_0_34 (select v_threshold_registers_0_7 v_meta.id_286))  InVars {meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7}  OutVars{meta.id=v_meta.id_286, threshold_registers_0=v_threshold_registers_0_7, threshold_tmp_0=v_threshold_tmp_0_34}  AuxVars[]  AssignedVars[threshold_tmp_0] 92816#L671_T0_init [3994] L671_T0_init-->L672_T0_init: Formula: (and v_hdr.tcp.valid_25 (= v_meta.use_blink_30 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_25, meta.use_blink=v_meta.use_blink_30}  AuxVars[]  AssignedVars[] 92815#L672_T0_init [4123] L672_T0_init-->L676_T0_init: Formula: (and (not (= v_hdr.tcp.syn_16 1)) (not (= v_hdr.tcp.fin_32 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_16, hdr.tcp.fin=v_hdr.tcp.fin_32}  AuxVars[]  AssignedVars[] 92813#L676_T0_init [4046] L676_T0_init-->L672-2_T0_init: Formula: (= v_meta.tcp_payload_len_37 (mod (mod v_hdr.ipv4.totalLen_12 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12, meta.tcp_payload_len=v_meta.tcp_payload_len_37}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 92814#L672-2_T0_init [4411] L672-2_T0_init-->L671-1_T0_init: Formula: (not (< 0 v_meta.tcp_payload_len_27))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_27}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_27}  AuxVars[]  AssignedVars[] 93795#L671-1_T0_init [4376] L671-1_T0_init-->L979_T0_init: Formula: (= v_meta.use_blink_20 1)  InVars {meta.use_blink=v_meta.use_blink_20}  OutVars{meta.use_blink=v_meta.use_blink_20}  AuxVars[]  AssignedVars[] 93791#L979_T0_init [4087] L979_T0_init-->L981_T0_init: Formula: (= (select v_nh_avaibility_1_15 v_meta.id_205) v_nh_avaibility_1_tmp_0_13)  InVars {meta.id=v_meta.id_205, nh_avaibility_1=v_nh_avaibility_1_15}  OutVars{meta.id=v_meta.id_205, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_13, nh_avaibility_1=v_nh_avaibility_1_15}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 93792#L981_T0_init [4273] L981_T0_init-->L983_T0_init: Formula: (= (select v_nh_avaibility_2_16 v_meta.id_273) v_nh_avaibility_2_tmp_0_46)  InVars {nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273}  OutVars{nh_avaibility_2=v_nh_avaibility_2_16, meta.id=v_meta.id_273, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_46}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 93787#L983_T0_init [4178] L983_T0_init-->L985_T0_init: Formula: (= (select v_nh_avaibility_3_16 v_meta.id_234) v_nh_avaibility_3_tmp_0_34)  InVars {meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16}  OutVars{meta.id=v_meta.id_234, nh_avaibility_3=v_nh_avaibility_3_16, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_34}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 93788#L985_T0_init [5657] L985_T0_init-->L986_T0_init: Formula: (= (select v_rerouting_ts_0_13 v_meta.id_195) v_rerouting_ts_tmp_0_12)  InVars {meta.id=v_meta.id_195, rerouting_ts_0=v_rerouting_ts_0_13}  OutVars{meta.id=v_meta.id_195, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_12, rerouting_ts_0=v_rerouting_ts_0_13}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 93780#L986_T0_init [5577] L986_T0_init-->L1047_T0_init: Formula: (or (not (= v_meta.selected_19 1)) (not (< 0 v_rerouting_ts_tmp_0_20)) (not (< (mod (+ (mod v_meta.ingress_timestamp_millisecond_93 524288) (* (mod v_rerouting_ts_tmp_0_20 524288) 524287)) 524288) 976)))  InVars {meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  OutVars{meta.selected=v_meta.selected_19, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_93, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_20}  AuxVars[]  AssignedVars[] 93775#L1047_T0_init [5781] L1047_T0_init-->L1049_T0_init: Formula: (= v_nh_avaibility_1_tmp_0_16 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_16}  AuxVars[]  AssignedVars[] 93776#L1049_T0_init [5804] L1049_T0_init-->L1057-2_T0_init: Formula: (= (select v_next_hops_port_0_18 (mod (* 3 (mod v_meta.id_186 4294967296)) 4294967296)) v_meta.next_hop_port_30)  InVars {next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186}  OutVars{next_hops_port_0=v_next_hops_port_0_18, meta.id=v_meta.id_186, meta.next_hop_port=v_meta.next_hop_port_30}  AuxVars[]  AssignedVars[meta.next_hop_port] 93875#L1057-2_T0_init [3989] L1057-2_T0_init-->L977_T0_init: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_119 524288) (* 524287 (mod v_rerouting_ts_tmp_0_26 524288))) 524288))) (not (< 0 v_rerouting_ts_tmp_0_26)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_119, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_26}  AuxVars[]  AssignedVars[] 93859#L977_T0_init [4484] L977_T0_init-->L977_T0_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 93860#L977_T0_init-D80 [4813] L977_T0_init-D80-->send_0.applyENTRY_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 93867#send_0.applyENTRY_T0_init [5170] send_0.applyENTRY_T0_init-->L1198_T0_init: Formula: (not (= v_send_0.action_run_16 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_16}  OutVars{send_0.action_run=v_send_0.action_run_16}  AuxVars[]  AssignedVars[] 93868#L1198_T0_init [4371] L1198_T0_init-->L1198-1_T0_init: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_26))  InVars {send_0.action_run=v_send_0.action_run_26}  OutVars{send_0.action_run=v_send_0.action_run_26}  AuxVars[]  AssignedVars[] 94157#L1198-1_T0_init [4571] L1198-1_T0_init-->send_0.applyEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 94156#send_0.applyEXIT_T0_init >[6191] send_0.applyEXIT_T0_init-->L1083-D248: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 94155#L1083-D248 [3821] L1083-D248-->L1083_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 94154#L1083_T0_init [5180] L1083_T0_init-->ingressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 93853#ingressEXIT_T0_init >[5972] ingressEXIT_T0_init-->L1092-D452: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92621#L1092-D452 [4081] L1092-D452-->L1092_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92617#L1092_T0_init [4999] L1092_T0_init-->L1092_T0_init-D11: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92618#L1092_T0_init-D11 [4816] L1092_T0_init-D11-->egressFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92619#egressFINAL_T0_init [5706] egressFINAL_T0_init-->egressEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92616#egressEXIT_T0_init >[6005] egressEXIT_T0_init-->L1093-D461: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92614#L1093-D461 [4332] L1093-D461-->L1093_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92607#L1093_T0_init [5601] L1093_T0_init-->L1093_T0_init-D155: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92608#L1093_T0_init-D155 [4749] L1093_T0_init-D155-->computeChecksumFINAL_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92609#computeChecksumFINAL_T0_init [5587] computeChecksumFINAL_T0_init-->computeChecksumEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92606#computeChecksumEXIT_T0_init >[5948] computeChecksumEXIT_T0_init-->L1094-D245: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92604#L1094-D245 [5489] L1094-D245-->L1094_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92603#L1094_T0_init [5150] L1094_T0_init-->L1096_T0_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 92596#L1096_T0_init [4774] L1096_T0_init-->L1095-1_T0_init: Formula: v_drop_40  InVars {}  OutVars{drop=v_drop_40}  AuxVars[]  AssignedVars[drop] 90335#L1095-1_T0_init [3861] L1095-1_T0_init-->L1099_T0_init: Formula: (let ((.cse0 (< (select v_threshold_registers_0_10 v__p4ltl_free_a_7) (select v_sw_sum_0_54 v__p4ltl_free_a_7)))) (or (and v__p4ltl_0_9 .cse0) (and (not .cse0) (not v__p4ltl_0_9))))  InVars {sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  OutVars{_p4ltl_0=v__p4ltl_0_9, sw_sum_0=v_sw_sum_0_54, threshold_registers_0=v_threshold_registers_0_10, _p4ltl_free_a=v__p4ltl_free_a_7}  AuxVars[]  AssignedVars[_p4ltl_0] 90337#L1099_T0_init [5109] L1099_T0_init-->L1100_T0_init: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_24 v__p4ltl_free_a_14) 1))) (or (and (not v__p4ltl_1_9) (not .cse0)) (and v__p4ltl_1_9 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  OutVars{_p4ltl_1=v__p4ltl_1_9, nh_avaibility_1=v_nh_avaibility_1_24, _p4ltl_free_a=v__p4ltl_free_a_14}  AuxVars[]  AssignedVars[_p4ltl_1] 92116#L1100_T0_init [5348] L1100_T0_init-->L1101_T0_init: Formula: (let ((.cse0 (= v__p4ltl_free_a_8 v_meta.id_295))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.id=v_meta.id_295, _p4ltl_free_a=v__p4ltl_free_a_8}  AuxVars[]  AssignedVars[_p4ltl_2] 92293#L1101_T0_init [5590] L1101_T0_init-->L1102_T0_init: Formula: (let ((.cse0 (= 0 (select v_nh_avaibility_1_21 v__p4ltl_free_a_9)))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  OutVars{_p4ltl_3=v__p4ltl_3_7, nh_avaibility_1=v_nh_avaibility_1_21, _p4ltl_free_a=v__p4ltl_free_a_9}  AuxVars[]  AssignedVars[_p4ltl_3] 92411#L1102_T0_init [5192] L1102_T0_init-->L1103_T0_init: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_34 1))) (or (and .cse0 (not v__p4ltl_4_12)) (and v__p4ltl_4_12 (not .cse0))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  OutVars{_p4ltl_4=v__p4ltl_4_12, hdr.ipv4.ttl=v_hdr.ipv4.ttl_34}  AuxVars[]  AssignedVars[_p4ltl_4] 92535#L1103_T0_init [4922] L1103_T0_init-->mainFINAL_T0_init: Formula: (let ((.cse0 (= v_meta.use_blink_35 1))) (or (and v__p4ltl_5_10 .cse0) (and (not .cse0) (not v__p4ltl_5_10))))  InVars {meta.use_blink=v_meta.use_blink_35}  OutVars{meta.use_blink=v_meta.use_blink_35, _p4ltl_5=v__p4ltl_5_10}  AuxVars[]  AssignedVars[_p4ltl_5] 92534#mainFINAL_T0_init [5644] mainFINAL_T0_init-->mainEXIT_T0_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92533#mainEXIT_T0_init >[6240] mainEXIT_T0_init-->L1109-1-D269: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92523#L1109-1-D269 [5792] L1109-1-D269-->L1109-1_accept_S2: Formula: (and v__p4ltl_5_8 v__p4ltl_4_8 v__p4ltl_3_6 v__p4ltl_2_6 v_hdr.tcp.valid_38)  InVars {_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  OutVars{_p4ltl_2=v__p4ltl_2_6, hdr.tcp.valid=v_hdr.tcp.valid_38, _p4ltl_3=v__p4ltl_3_6, _p4ltl_4=v__p4ltl_4_8, _p4ltl_5=v__p4ltl_5_8}  AuxVars[]  AssignedVars[] 92355#L1109-1_accept_S2 [5461] L1109-1_accept_S2-->L1109_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90440#L1109_accept_S2 [4615] L1109_accept_S2-->L1109_accept_S2-D108: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91117#L1109_accept_S2-D108 [4263] L1109_accept_S2-D108-->mainENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90270#mainENTRY_accept_S2 [4368] mainENTRY_accept_S2-->mainENTRY_accept_S2-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91244#mainENTRY_accept_S2-D51 [4554] mainENTRY_accept_S2-D51-->havocProcedureENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90920#havocProcedureENTRY_accept_S2 [4147] havocProcedureENTRY_accept_S2-->L490_accept_S2: Formula: (not v_drop_38)  InVars {}  OutVars{drop=v_drop_38}  AuxVars[]  AssignedVars[drop] 90921#L490_accept_S2 [4899] L490_accept_S2-->L491_accept_S2: Formula: (not v_forward_23)  InVars {}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[forward] 91930#L491_accept_S2 [5893] L491_accept_S2-->L492_accept_S2: Formula: (= v_standard_metadata.ingress_port_17 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 92461#L492_accept_S2 [5721] L492_accept_S2-->L493_accept_S2: Formula: (= v_standard_metadata.egress_spec_19 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_19}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 91296#L493_accept_S2 [4405] L493_accept_S2-->L494_accept_S2: Formula: (= 0 v_standard_metadata.egress_port_20)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 91297#L494_accept_S2 [5583] L494_accept_S2-->L495_accept_S2: Formula: (= v_standard_metadata.instance_type_9 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 92315#L495_accept_S2 [5392] L495_accept_S2-->L496_accept_S2: Formula: (= v_standard_metadata.packet_length_9 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 91700#L496_accept_S2 [4704] L496_accept_S2-->L497_accept_S2: Formula: (= v_standard_metadata.enq_timestamp_9 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 91701#L497_accept_S2 [5112] L497_accept_S2-->L498_accept_S2: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 92118#L498_accept_S2 [5215] L498_accept_S2-->L499_accept_S2: Formula: (= v_standard_metadata.deq_timedelta_9 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_9}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 92036#L499_accept_S2 [5021] L499_accept_S2-->L500_accept_S2: Formula: (= v_standard_metadata.deq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 92037#L500_accept_S2 [5118] L500_accept_S2-->L501_accept_S2: Formula: (= v_standard_metadata.ingress_global_timestamp_26 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_26}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 92125#L501_accept_S2 [5525] L501_accept_S2-->L502_accept_S2: Formula: (= v_standard_metadata.egress_global_timestamp_10 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 92310#L502_accept_S2 [5388] L502_accept_S2-->L503_accept_S2: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 92311#L503_accept_S2 [5789] L503_accept_S2-->L504_accept_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 91334#L504_accept_S2 [4431] L504_accept_S2-->L505_accept_S2: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 90812#L505_accept_S2 [4090] L505_accept_S2-->L506_accept_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 90813#L506_accept_S2 [5409] L506_accept_S2-->L507_accept_S2: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 92327#L507_accept_S2 [5864] L507_accept_S2-->L508_accept_S2: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ethernet_2 false))  InVars {emit=v_emit_34, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_33, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 90868#L508_accept_S2 [4125] L508_accept_S2-->L509_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 90869#L509_accept_S2 [4854] L509_accept_S2-->L510_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_24}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 91048#L510_accept_S2 [4222] L510_accept_S2-->L511_accept_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_12}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 90982#L511_accept_S2 [4183] L511_accept_S2-->L512_accept_S2: Formula: (and (<= v_hdr.ethernet.etherType_13 65536) (<= 0 v_hdr.ethernet.etherType_13))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_13}  AuxVars[]  AssignedVars[] 90983#L512_accept_S2 [4900] L512_accept_S2-->L513_accept_S2: Formula: (not v_hdr.ipv4_icmp.valid_10)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 91288#L513_accept_S2 [4400] L513_accept_S2-->L514_accept_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.ipv4_icmp_13 false))  InVars {emit=v_emit_28, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  OutVars{emit=v_emit_27, hdr.ipv4_icmp=v_hdr.ipv4_icmp_13}  AuxVars[]  AssignedVars[emit] 90885#L514_accept_S2 [4132] L514_accept_S2-->L515_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 90886#L515_accept_S2 [5839] L515_accept_S2-->L516_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_10) (<= v_hdr.ipv4_icmp.version_10 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_10}  AuxVars[]  AssignedVars[] 91084#L516_accept_S2 [4244] L516_accept_S2-->L517_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 91022#L517_accept_S2 [4204] L517_accept_S2-->L518_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ihl_11 16) (<= 0 v_hdr.ipv4_icmp.ihl_11))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_11}  AuxVars[]  AssignedVars[] 91023#L518_accept_S2 [5182] L518_accept_S2-->L519_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 91519#L519_accept_S2 [4569] L519_accept_S2-->L520_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.dscp_10) (<= v_hdr.ipv4_icmp.dscp_10 64))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_10}  AuxVars[]  AssignedVars[] 91520#L520_accept_S2 [5434] L520_accept_S2-->L521_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 92232#L521_accept_S2 [5249] L521_accept_S2-->L522_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.ecn_12 4) (<= 0 v_hdr.ipv4_icmp.ecn_12))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_12}  AuxVars[]  AssignedVars[] 92233#L522_accept_S2 [5882] L522_accept_S2-->L523_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_18}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 92239#L523_accept_S2 [5263] L523_accept_S2-->L524_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.totalLen_15) (<= v_hdr.ipv4_icmp.totalLen_15 65536))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_15}  AuxVars[]  AssignedVars[] 91217#L524_accept_S2 [4346] L524_accept_S2-->L525_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 91218#L525_accept_S2 [5607] L525_accept_S2-->L526_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.identification_9) (<= v_hdr.ipv4_icmp.identification_9 65536))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_9}  AuxVars[]  AssignedVars[] 91767#L526_accept_S2 [4759] L526_accept_S2-->L527_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 91427#L527_accept_S2 [4499] L527_accept_S2-->L528_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.flags_11 8) (<= 0 v_hdr.ipv4_icmp.flags_11))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_11}  AuxVars[]  AssignedVars[] 90837#L528_accept_S2 [4104] L528_accept_S2-->L529_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 90838#L529_accept_S2 [4330] L529_accept_S2-->L530_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.fragOffset_10) (<= v_hdr.ipv4_icmp.fragOffset_10 8192))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_10}  AuxVars[]  AssignedVars[] 90651#L530_accept_S2 [4010] L530_accept_S2-->L531_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 90652#L531_accept_S2 [4724] L531_accept_S2-->L532_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_15) (<= v_hdr.ipv4_icmp.ttl_15 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_15}  AuxVars[]  AssignedVars[] 91167#L532_accept_S2 [4298] L532_accept_S2-->L533_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 91168#L533_accept_S2 [4470] L533_accept_S2-->L534_accept_S2: Formula: (and (<= 0 v_hdr.ipv4_icmp.protocol_17) (<= v_hdr.ipv4_icmp.protocol_17 256))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_17}  AuxVars[]  AssignedVars[] 91388#L534_accept_S2 [5253] L534_accept_S2-->L535_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 90730#L535_accept_S2 [4047] L535_accept_S2-->L536_accept_S2: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_14 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_14))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_14}  AuxVars[]  AssignedVars[] 90731#L536_accept_S2 [5848] L536_accept_S2-->L537_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 92285#L537_accept_S2 [5341] L537_accept_S2-->L538_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 91459#L538_accept_S2 [4528] L538_accept_S2-->L539_accept_S2: Formula: (not v_hdr.icmp.valid_9)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_9}  AuxVars[]  AssignedVars[hdr.icmp.valid] 91460#L539_accept_S2 [5486] L539_accept_S2-->L540_accept_S2: Formula: (= v_emit_21 (store v_emit_22 v_hdr.icmp_3 false))  InVars {emit=v_emit_22, hdr.icmp=v_hdr.icmp_3}  OutVars{emit=v_emit_21, hdr.icmp=v_hdr.icmp_3}  AuxVars[]  AssignedVars[emit] 91233#L540_accept_S2 [4358] L540_accept_S2-->L541_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_15}  AuxVars[]  AssignedVars[hdr.icmp.type] 91200#L541_accept_S2 [4329] L541_accept_S2-->L542_accept_S2: Formula: (and (<= v_hdr.icmp.type_19 256) (<= 0 v_hdr.icmp.type_19))  InVars {hdr.icmp.type=v_hdr.icmp.type_19}  OutVars{hdr.icmp.type=v_hdr.icmp.type_19}  AuxVars[]  AssignedVars[] 91198#L542_accept_S2 [4327] L542_accept_S2-->L543_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_19}  AuxVars[]  AssignedVars[hdr.icmp.code] 91199#L543_accept_S2 [5351] L543_accept_S2-->L544_accept_S2: Formula: (and (<= 0 v_hdr.icmp.code_17) (<= v_hdr.icmp.code_17 256))  InVars {hdr.icmp.code=v_hdr.icmp.code_17}  OutVars{hdr.icmp.code=v_hdr.icmp.code_17}  AuxVars[]  AssignedVars[] 91708#L544_accept_S2 [4710] L544_accept_S2-->L545_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_10}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 91407#L545_accept_S2 [4485] L545_accept_S2-->L546_accept_S2: Formula: (and (<= v_hdr.icmp.checksum_11 65536) (<= 0 v_hdr.icmp.checksum_11))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_11}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_11}  AuxVars[]  AssignedVars[] 91408#L546_accept_S2 [5396] L546_accept_S2-->L547_accept_S2: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_9}  AuxVars[]  AssignedVars[hdr.icmp.unused] 90427#L547_accept_S2 [3908] L547_accept_S2-->L548_accept_S2: Formula: (and (<= v_hdr.icmp.unused_12 4294967296) (<= 0 v_hdr.icmp.unused_12))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_12}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_12}  AuxVars[]  AssignedVars[] 90428#L548_accept_S2 [4641] L548_accept_S2-->L549_accept_S2: Formula: (not v_hdr.ipv4.valid_23)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_23}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 90587#L549_accept_S2 [3979] L549_accept_S2-->L550_accept_S2: Formula: (= (store v_emit_46 v_hdr.ipv4_8 false) v_emit_45)  InVars {hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_8, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 90588#L550_accept_S2 [4511] L550_accept_S2-->L551_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[hdr.ipv4.version] 91438#L551_accept_S2 [4696] L551_accept_S2-->L552_accept_S2: Formula: (and (<= v_hdr.ipv4.version_12 16) (<= 0 v_hdr.ipv4.version_12))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_12}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[] 91687#L552_accept_S2 [4769] L552_accept_S2-->L553_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_17}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 91777#L553_accept_S2 [5516] L553_accept_S2-->L554_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (<= v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 91731#L554_accept_S2 [4729] L554_accept_S2-->L555_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 91732#L555_accept_S2 [5459] L555_accept_S2-->L556_accept_S2: Formula: (and (<= v_hdr.ipv4.dscp_12 64) (<= 0 v_hdr.ipv4.dscp_12))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_12}  AuxVars[]  AssignedVars[] 91210#L556_accept_S2 [4338] L556_accept_S2-->L557_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_11}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 91211#L557_accept_S2 [4651] L557_accept_S2-->L558_accept_S2: Formula: (and (<= v_hdr.ipv4.ecn_14 4) (<= 0 v_hdr.ipv4.ecn_14))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_14}  AuxVars[]  AssignedVars[] 91634#L558_accept_S2 [4965] L558_accept_S2-->L559_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 91984#L559_accept_S2 [5168] L559_accept_S2-->L560_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.totalLen_17) (<= v_hdr.ipv4.totalLen_17 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[] 90269#L560_accept_S2 [3829] L560_accept_S2-->L561_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 90271#L561_accept_S2 [5597] L561_accept_S2-->L562_accept_S2: Formula: (and (<= v_hdr.ipv4.identification_12 65536) (<= 0 v_hdr.ipv4.identification_12))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 92360#L562_accept_S2 [5471] L562_accept_S2-->L563_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 91559#L563_accept_S2 [4593] L563_accept_S2-->L564_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.flags_10) (<= v_hdr.ipv4.flags_10 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 91560#L564_accept_S2 [4652] L564_accept_S2-->L565_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 90272#L565_accept_S2 [3830] L565_accept_S2-->L566_accept_S2: Formula: (and (<= v_hdr.ipv4.fragOffset_14 8192) (<= 0 v_hdr.ipv4.fragOffset_14))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 90273#L566_accept_S2 [4040] L566_accept_S2-->L567_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_27}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 90716#L567_accept_S2 [5686] L567_accept_S2-->L568_accept_S2: Formula: (and (<= v_hdr.ipv4.ttl_30 256) (<= 0 v_hdr.ipv4.ttl_30))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_30}  AuxVars[]  AssignedVars[] 91027#L568_accept_S2 [4207] L568_accept_S2-->L569_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 91028#L569_accept_S2 [4883] L569_accept_S2-->L570_accept_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_12) (<= v_hdr.ipv4.protocol_12 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_12}  AuxVars[]  AssignedVars[] 91912#L570_accept_S2 [5328] L570_accept_S2-->L571_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 91827#L571_accept_S2 [4807] L571_accept_S2-->L572_accept_S2: Formula: (and (<= v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 90754#L572_accept_S2 [4058] L572_accept_S2-->L573_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 90755#L573_accept_S2 [4355] L573_accept_S2-->L574_accept_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 91229#L574_accept_S2 [5700] L574_accept_S2-->L575_accept_S2: Formula: (not v_hdr.tcp.valid_34)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_34}  AuxVars[]  AssignedVars[hdr.tcp.valid] 92450#L575_accept_S2 [5846] L575_accept_S2-->L576_accept_S2: Formula: (= v_emit_19 (store v_emit_20 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 91870#L576_accept_S2 [4850] L576_accept_S2-->L577_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 91096#L577_accept_S2 [4253] L577_accept_S2-->L578_accept_S2: Formula: (and (<= 0 v_hdr.tcp.srcPort_12) (<= v_hdr.tcp.srcPort_12 65536))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[] 91097#L578_accept_S2 [5212] L578_accept_S2-->L579_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 92198#L579_accept_S2 [5669] L579_accept_S2-->L580_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (<= v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 92442#L580_accept_S2 [5905] L580_accept_S2-->L581_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_26}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 90879#L581_accept_S2 [4129] L581_accept_S2-->L582_accept_S2: Formula: (and (<= 0 v_hdr.tcp.seqNo_24) (<= v_hdr.tcp.seqNo_24 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_24}  AuxVars[]  AssignedVars[] 90880#L582_accept_S2 [4497] L582_accept_S2-->L583_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 91422#L583_accept_S2 [4824] L583_accept_S2-->L584_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (<= v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 91786#L584_accept_S2 [4779] L584_accept_S2-->L585_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 91787#L585_accept_S2 [5287] L585_accept_S2-->L586_accept_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_17) (<= v_hdr.tcp.dataOffset_17 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_17}  AuxVars[]  AssignedVars[] 92151#L586_accept_S2 [5154] L586_accept_S2-->L587_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 92152#L587_accept_S2 [5599] L587_accept_S2-->L588_accept_S2: Formula: (and (<= 0 v_hdr.tcp.res_11) (<= v_hdr.tcp.res_11 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 91476#L588_accept_S2 [4538] L588_accept_S2-->L589_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_14}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 91477#L589_accept_S2 [5297] L589_accept_S2-->L590_accept_S2: Formula: (and (<= 0 v_hdr.tcp.cwr_11) (<= v_hdr.tcp.cwr_11 2))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_11}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_11}  AuxVars[]  AssignedVars[] 91937#L590_accept_S2 [4908] L590_accept_S2-->L591_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_9}  AuxVars[]  AssignedVars[hdr.tcp.ece] 90817#L591_accept_S2 [4093] L591_accept_S2-->L592_accept_S2: Formula: (and (<= 0 v_hdr.tcp.ece_14) (<= v_hdr.tcp.ece_14 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_14}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_14}  AuxVars[]  AssignedVars[] 90818#L592_accept_S2 [5892] L592_accept_S2-->L593_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_9}  AuxVars[]  AssignedVars[hdr.tcp.urg] 92098#L593_accept_S2 [5094] L593_accept_S2-->L594_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urg_11) (<= v_hdr.tcp.urg_11 2))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_11}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_11}  AuxVars[]  AssignedVars[] 92099#L594_accept_S2 [5623] L594_accept_S2-->L595_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_11}  AuxVars[]  AssignedVars[hdr.tcp.ack] 92375#L595_accept_S2 [5512] L595_accept_S2-->L596_accept_S2: Formula: (and (<= v_hdr.tcp.ack_12 2) (<= 0 v_hdr.tcp.ack_12))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_12}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_12}  AuxVars[]  AssignedVars[] 92301#L596_accept_S2 [5370] L596_accept_S2-->L597_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_9}  AuxVars[]  AssignedVars[hdr.tcp.psh] 92008#L597_accept_S2 [4993] L597_accept_S2-->L598_accept_S2: Formula: (and (<= 0 v_hdr.tcp.psh_13) (<= v_hdr.tcp.psh_13 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_13}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_13}  AuxVars[]  AssignedVars[] 92009#L598_accept_S2 [5900] L598_accept_S2-->L599_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_12}  AuxVars[]  AssignedVars[hdr.tcp.rst] 91076#L599_accept_S2 [4240] L599_accept_S2-->L600_accept_S2: Formula: (and (<= v_hdr.tcp.rst_10 2) (<= 0 v_hdr.tcp.rst_10))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_10}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_10}  AuxVars[]  AssignedVars[] 90968#L600_accept_S2 [4173] L600_accept_S2-->L601_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_20}  AuxVars[]  AssignedVars[hdr.tcp.syn] 90969#L601_accept_S2 [4227] L601_accept_S2-->L602_accept_S2: Formula: (and (<= v_hdr.tcp.syn_17 2) (<= 0 v_hdr.tcp.syn_17))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_17}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_17}  AuxVars[]  AssignedVars[] 90340#L602_accept_S2 [3862] L602_accept_S2-->L603_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_38}  AuxVars[]  AssignedVars[hdr.tcp.fin] 90341#L603_accept_S2 [5929] L603_accept_S2-->L604_accept_S2: Formula: (and (<= 0 v_hdr.tcp.fin_35) (<= v_hdr.tcp.fin_35 2))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_35}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_35}  AuxVars[]  AssignedVars[] 91115#L604_accept_S2 [4262] L604_accept_S2-->L605_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 91116#L605_accept_S2 [4433] L605_accept_S2-->L606_accept_S2: Formula: (and (<= v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 91335#L606_accept_S2 [5227] L606_accept_S2-->L607_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 92210#L607_accept_S2 [5737] L607_accept_S2-->L608_accept_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (<= v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 92468#L608_accept_S2 [5878] L608_accept_S2-->L609_accept_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 91578#L609_accept_S2 [4607] L609_accept_S2-->L610_accept_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (<= v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 91579#L610_accept_S2 [5574] L610_accept_S2-->L611_accept_S2: Formula: (= v_meta.id_292 0)  InVars {}  OutVars{meta.id=v_meta.id_292}  AuxVars[]  AssignedVars[meta.id] 92319#L611_accept_S2 [5399] L611_accept_S2-->L612_accept_S2: Formula: (= v_meta.use_blink_32 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_32}  AuxVars[]  AssignedVars[meta.use_blink] 91764#L612_accept_S2 [4756] L612_accept_S2-->L613_accept_S2: Formula: (= v_meta.is_retransmission_30 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_30}  AuxVars[]  AssignedVars[meta.is_retransmission] 91208#L613_accept_S2 [4337] L613_accept_S2-->L614_accept_S2: Formula: (= v_meta.next_hop_port_56 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_56}  AuxVars[]  AssignedVars[meta.next_hop_port] 91209#L614_accept_S2 [5911] L614_accept_S2-->L615_accept_S2: Formula: (= v_meta.tcp_payload_len_39 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_39}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 91959#L615_accept_S2 [4935] L615_accept_S2-->L616_accept_S2: Formula: (= 0 v_meta.ingress_timestamp_second_35)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_35}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 91932#L616_accept_S2 [4905] L616_accept_S2-->L617_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_124 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_124}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 91933#L617_accept_S2 [5922] L617_accept_S2-->L618_accept_S2: Formula: (= v_meta.flowselector_cellid_49 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_49}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 92333#L618_accept_S2 [5418] L618_accept_S2-->L619_accept_S2: Formula: (= v_meta.selected_27 0)  InVars {}  OutVars{meta.selected=v_meta.selected_27}  AuxVars[]  AssignedVars[meta.selected] 90628#L619_accept_S2 [3999] L619_accept_S2-->L620_accept_S2: Formula: (= v_meta.bgp_ngh_type_16 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_16}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 90629#L620_accept_S2 [4438] L620_accept_S2-->L621_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 91339#L621_accept_S2 [4830] L621_accept_S2-->L622_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 91338#L622_accept_S2 [4437] L622_accept_S2-->L623_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 90280#L623_accept_S2 [3832] L623_accept_S2-->L624_accept_S2: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_13}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 90281#L624_accept_S2 [5155] L624_accept_S2-->L625_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_10}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 91649#L625_accept_S2 [4668] L625_accept_S2-->L626_accept_S2: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_13}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 91355#L626_accept_S2 [4446] L626_accept_S2-->L627_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_11}  AuxVars[]  AssignedVars[send_0.set_nh.port] 91059#L627_accept_S2 [4230] L627_accept_S2-->L628_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_12}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 91060#L628_accept_S2 [4353] L628_accept_S2-->L629_accept_S2: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_12}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 91228#L629_accept_S2 [5540] L629_accept_S2-->havocProcedureFINAL_accept_S2: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_13}  AuxVars[]  AssignedVars[send_0.action_run] 92391#havocProcedureFINAL_accept_S2 [5685] havocProcedureFINAL_accept_S2-->havocProcedureEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90789#havocProcedureEXIT_accept_S2 >[6272] havocProcedureEXIT_accept_S2-->L1089-D240: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90790#L1089-D240 [4439] L1089-D240-->L1089_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91340#L1089_accept_S2 [4761] L1089_accept_S2-->L1089_accept_S2-D141: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91770#L1089_accept_S2-D141 [5895] L1089_accept_S2-D141-->_parser_ParserImplENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90358#_parser_ParserImplENTRY_accept_S2 [4592] _parser_ParserImplENTRY_accept_S2-->_parser_ParserImplENTRY_accept_S2-D165: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91405#_parser_ParserImplENTRY_accept_S2-D165 [4486] _parser_ParserImplENTRY_accept_S2-D165-->startENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91250#startENTRY_accept_S2 [4373] startENTRY_accept_S2-->L1240_accept_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 90357#L1240_accept_S2 [3872] L1240_accept_S2-->L1241_accept_S2: Formula: (= v_hdr.ethernet.etherType_21 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_21}  AuxVars[]  AssignedVars[] 90359#L1241_accept_S2 [4361] L1241_accept_S2-->L1241_accept_S2-D39: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91236#L1241_accept_S2-D39 [4544] L1241_accept_S2-D39-->parse_ipv4ENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91482#parse_ipv4ENTRY_accept_S2 [5289] parse_ipv4ENTRY_accept_S2-->L1169_accept_S2: Formula: v_hdr.ipv4.valid_28  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_28}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 92195#L1169_accept_S2 [5205] L1169_accept_S2-->L1170_accept_S2: Formula: (= v_hdr.ipv4.protocol_21 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_21}  AuxVars[]  AssignedVars[] 90570#L1170_accept_S2 [4849] L1170_accept_S2-->L1170_accept_S2-D150: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90569#L1170_accept_S2-D150 [3969] L1170_accept_S2-D150-->parse_tcpENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90571#parse_tcpENTRY_accept_S2 [5075] parse_tcpENTRY_accept_S2-->L1179_accept_S2: Formula: v_hdr.tcp.valid_41  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_41}  AuxVars[]  AssignedVars[hdr.tcp.valid] 91691#L1179_accept_S2 [5594] L1179_accept_S2-->L1179_accept_S2-D57: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92271#L1179_accept_S2-D57 [5320] L1179_accept_S2-D57-->acceptFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91852#acceptFINAL_accept_S2 [4829] acceptFINAL_accept_S2-->acceptEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91690#acceptEXIT_accept_S2 >[6335] acceptEXIT_accept_S2-->parse_tcpFINAL-D381: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91692#parse_tcpFINAL-D381 [4881] parse_tcpFINAL-D381-->parse_tcpFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90660#parse_tcpFINAL_accept_S2 [4014] parse_tcpFINAL_accept_S2-->parse_tcpEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90661#parse_tcpEXIT_accept_S2 >[5954] parse_tcpEXIT_accept_S2-->L1169-1-D441: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92440#L1169-1-D441 [5655] L1169-1-D441-->L1169-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92441#L1169-1_accept_S2 [5709] L1169-1_accept_S2-->parse_ipv4EXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92372#parse_ipv4EXIT_accept_S2 >[6156] parse_ipv4EXIT_accept_S2-->L1240-1-D450: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92373#L1240-1-D450 [5684] L1240-1-D450-->L1240-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90677#L1240-1_accept_S2 [4021] L1240-1_accept_S2-->startEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90678#startEXIT_accept_S2 >[5981] startEXIT_accept_S2-->_parser_ParserImplFINAL-D429: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91425#_parser_ParserImplFINAL-D429 [4848] _parser_ParserImplFINAL-D429-->_parser_ParserImplFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91869#_parser_ParserImplFINAL_accept_S2 [5857] _parser_ParserImplFINAL_accept_S2-->_parser_ParserImplEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92317#_parser_ParserImplEXIT_accept_S2 >[6617] _parser_ParserImplEXIT_accept_S2-->L1090-D345: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92172#L1090-D345 [5174] L1090-D345-->L1090_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90667#L1090_accept_S2 [4018] L1090_accept_S2-->L1090_accept_S2-D117: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90668#L1090_accept_S2-D117 [4224] L1090_accept_S2-D117-->verifyChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91050#verifyChecksumFINAL_accept_S2 [4987] verifyChecksumFINAL_accept_S2-->verifyChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92000#verifyChecksumEXIT_accept_S2 >[6354] verifyChecksumEXIT_accept_S2-->L1091-D342: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92393#L1091-D342 [5618] L1091-D342-->L1091_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90255#L1091_accept_S2 [4328] L1091_accept_S2-->L1091_accept_S2-D222: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90683#L1091_accept_S2-D222 [4024] L1091_accept_S2-D222-->ingressENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90684#ingressENTRY_accept_S2 [5692] ingressENTRY_accept_S2-->L638_accept_S2: Formula: (= (select v_timestamp_reference_0_14 0) v_ts_tmp_0_19)  InVars {timestamp_reference_0=v_timestamp_reference_0_14}  OutVars{timestamp_reference_0=v_timestamp_reference_0_14, ts_tmp_0=v_ts_tmp_0_19}  AuxVars[]  AssignedVars[ts_tmp_0] 91137#L638_accept_S2 [4277] L638_accept_S2-->L638-1_accept_S2: Formula: (not (< 500000000 (mod (+ (* 281474976710655 (mod v_ts_tmp_0_25 281474976710656)) (mod v_standard_metadata.ingress_global_timestamp_22 281474976710656)) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_22, ts_tmp_0=v_ts_tmp_0_25}  AuxVars[]  AssignedVars[] 91138#L638-1_accept_S2 [5865] L638-1_accept_S2-->L644_accept_S2: Formula: (= (select v_timestamp_reference_0_17 0) v_ts_tmp_0_28)  InVars {timestamp_reference_0=v_timestamp_reference_0_17}  OutVars{timestamp_reference_0=v_timestamp_reference_0_17, ts_tmp_0=v_ts_tmp_0_28}  AuxVars[]  AssignedVars[ts_tmp_0] 91439#L644_accept_S2 [4512] L644_accept_S2-->L645_accept_S2: Formula: (= (mod (div (let ((.cse1 (mod v_ts_tmp_0_16 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_17 281474976710656))) (+ (* (mod (+ .cse0 (* .cse1 1048575)) 1048576) (- 1)) (mod (+ (* 281474976710655 .cse1) .cse0) 281474976710656))) 1048576) 512) v_meta.ingress_timestamp_second_20)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_20, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_17, ts_tmp_0=v_ts_tmp_0_16}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 91440#L645_accept_S2 [4884] L645_accept_S2-->L646_accept_S2: Formula: (= v_meta.ingress_timestamp_millisecond_45 (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_14 281474976710656)) (.cse1 (mod v_ts_tmp_0_13 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* 1023 .cse1)) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_45, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14, ts_tmp_0=v_ts_tmp_0_13}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 91141#L646_accept_S2 [5054] L646_accept_S2-->L646_accept_S2-D186: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91140#L646_accept_S2-D186 [4280] L646_accept_S2-D186-->bgp_tag_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91142#bgp_tag_0.applyENTRY_accept_S2 [5429] bgp_tag_0.applyENTRY_accept_S2-->L427_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_18 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_18}  AuxVars[]  AssignedVars[] 92340#L427_accept_S2 [5689] L427_accept_S2-->L427-1_accept_S2: Formula: (not (= v_bgp_tag_0.action_run_22 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_22}  AuxVars[]  AssignedVars[] 91916#L427-1_accept_S2 [5379] L427-1_accept_S2-->bgp_tag_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91574#bgp_tag_0.applyEXIT_accept_S2 >[6412] bgp_tag_0.applyEXIT_accept_S2-->L646-1-D438: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91575#L646-1-D438 [5189] L646-1-D438-->L646-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90452#L646-1_accept_S2 [4863] L646-1_accept_S2-->L646-1_accept_S2-D9: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90467#L646-1_accept_S2-D9 [3930] L646-1_accept_S2-D9-->meta_fwtable_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90468#meta_fwtable_0.applyENTRY_accept_S2 [5924] meta_fwtable_0.applyENTRY_accept_S2-->L1121_accept_S2: Formula: (= v_meta_fwtable_0.action_run_23 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_23}  AuxVars[]  AssignedVars[] 91185#L1121_accept_S2 [4733] L1121_accept_S2-->L1121_accept_S2-D237: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 91735#L1121_accept_S2-D237 [5143] L1121_accept_S2-D237-->set_metaENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91780#set_metaENTRY_accept_S2 [4772] set_metaENTRY_accept_S2-->L1219_accept_S2: Formula: (= v_set_meta_id_4 v_meta.id_300)  InVars {set_meta_id=v_set_meta_id_4}  OutVars{meta.id=v_meta.id_300, set_meta_id=v_set_meta_id_4}  AuxVars[]  AssignedVars[meta.id] 91184#L1219_accept_S2 [4313] L1219_accept_S2-->L1220_accept_S2: Formula: (= v_set_meta_use_blink_3 v_meta.use_blink_39)  InVars {set_meta_use_blink=v_set_meta_use_blink_3}  OutVars{meta.use_blink=v_meta.use_blink_39, set_meta_use_blink=v_set_meta_use_blink_3}  AuxVars[]  AssignedVars[meta.use_blink] 91186#L1220_accept_S2 [4442] L1220_accept_S2-->set_metaFINAL_accept_S2: Formula: (= v_meta.next_hop_port_59 v_set_meta_default_nexthop_port_3)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  OutVars{meta.next_hop_port=v_meta.next_hop_port_59, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_3}  AuxVars[]  AssignedVars[meta.next_hop_port] 91345#set_metaFINAL_accept_S2 [4452] set_metaFINAL_accept_S2-->set_metaEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91321#set_metaEXIT_accept_S2 >[6052] set_metaEXIT_accept_S2-->L1123-1-D411: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 91322#L1123-1-D411 [5921] L1123-1-D411-->L1123-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91348#L1123-1_accept_S2 [4444] L1123-1_accept_S2-->meta_fwtable_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90451#meta_fwtable_0.applyEXIT_accept_S2 >[5935] meta_fwtable_0.applyEXIT_accept_S2-->L647-D393: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90453#L647-D393 [4801] L647-D393-->L647_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91314#L647_accept_S2 [4420] L647_accept_S2-->L670_accept_S2: Formula: (or (not v_hdr.ipv4.valid_22) (not (= v_hdr.ipv4.ttl_25 1)) (not v_hdr.tcp.valid_32))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_32, hdr.ipv4.valid=v_hdr.ipv4.valid_22, hdr.ipv4.ttl=v_hdr.ipv4.ttl_25}  AuxVars[]  AssignedVars[] 90679#L670_accept_S2 [4022] L670_accept_S2-->L671_accept_S2: Formula: (= v_threshold_tmp_0_15 (select v_threshold_registers_0_6 v_meta.id_167))  InVars {meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6}  OutVars{meta.id=v_meta.id_167, threshold_registers_0=v_threshold_registers_0_6, threshold_tmp_0=v_threshold_tmp_0_15}  AuxVars[]  AssignedVars[threshold_tmp_0] 90680#L671_accept_S2 [5677] L671_accept_S2-->L672_accept_S2: Formula: (and (= v_meta.use_blink_26 1) v_hdr.tcp.valid_21)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_21, meta.use_blink=v_meta.use_blink_26}  AuxVars[]  AssignedVars[] 92231#L672_accept_S2 [5246] L672_accept_S2-->L673_accept_S2: Formula: (or (= v_hdr.tcp.fin_29 1) (= v_hdr.tcp.syn_13 1))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_13, hdr.tcp.fin=v_hdr.tcp.fin_29}  AuxVars[]  AssignedVars[] 91587#L673_accept_S2 [4620] L673_accept_S2-->L672-2_accept_S2: Formula: (= v_meta.tcp_payload_len_25 1)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_25}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 90691#L672-2_accept_S2 [4835] L672-2_accept_S2-->L680_accept_S2: Formula: (< 0 v_meta.tcp_payload_len_30)  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_30}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_30}  AuxVars[]  AssignedVars[] 91863#L680_accept_S2 [5487] L680_accept_S2-->L681_accept_S2: Formula: (= v_fc_last_sw_time_42 (select v_sw_time_0_20 v_meta.id_150))  InVars {sw_time_0=v_sw_time_0_20, meta.id=v_meta.id_150}  OutVars{meta.id=v_meta.id_150, fc_last_sw_time=v_fc_last_sw_time_42, sw_time_0=v_sw_time_0_20}  AuxVars[]  AssignedVars[fc_last_sw_time] 91972#L681_accept_S2 [4949] L681_accept_S2-->L681-1_accept_S2: Formula: (not (< 780 (mod (+ (* (mod v_fc_last_sw_time_65 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_75 524288)) 524288)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_75, fc_last_sw_time=v_fc_last_sw_time_65}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_75, fc_last_sw_time=v_fc_last_sw_time_65}  AuxVars[]  AssignedVars[] 91521#L681-1_accept_S2 [4570] L681-1_accept_S2-->L712_accept_S2: Formula: (= (select v_sw_time_0_36 v_meta.id_224) v_fc_last_sw_time_76)  InVars {sw_time_0=v_sw_time_0_36, meta.id=v_meta.id_224}  OutVars{meta.id=v_meta.id_224, fc_last_sw_time=v_fc_last_sw_time_76, sw_time_0=v_sw_time_0_36}  AuxVars[]  AssignedVars[fc_last_sw_time] 91522#L712_accept_S2 [5746] L712_accept_S2-->L714_accept_S2: Formula: (= (select v_sw_index_0_15 v_meta.id_157) v_fc_cur_sw_index_53)  InVars {sw_index_0=v_sw_index_0_15, meta.id=v_meta.id_157}  OutVars{sw_index_0=v_sw_index_0_15, meta.id=v_meta.id_157, fc_cur_sw_index=v_fc_cur_sw_index_53}  AuxVars[]  AssignedVars[fc_cur_sw_index] 92433#L714_accept_S2 [5648] L714_accept_S2-->L715_accept_S2: Formula: (= v_fc_cur_sw_sum_35 (select v_sw_sum_0_34 v_meta.id_199))  InVars {meta.id=v_meta.id_199, sw_sum_0=v_sw_sum_0_34}  OutVars{meta.id=v_meta.id_199, sw_sum_0=v_sw_sum_0_34, fc_cur_sw_sum=v_fc_cur_sw_sum_35}  AuxVars[]  AssignedVars[fc_cur_sw_sum] 91181#L715_accept_S2 [4312] L715_accept_S2-->L715-1_accept_S2: Formula: (not (< 78 (mod (+ (* 524287 (mod v_fc_last_sw_time_98 524288)) (mod v_meta.ingress_timestamp_millisecond_105 524288)) 524288)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_105, fc_last_sw_time=v_fc_last_sw_time_98}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_105, fc_last_sw_time=v_fc_last_sw_time_98}  AuxVars[]  AssignedVars[] 91182#L715-1_accept_S2 [4319] L715-1_accept_S2-->L815_accept_S2: Formula: true  InVars {}  OutVars{fc_newflow_key=v_fc_newflow_key_16}  AuxVars[]  AssignedVars[fc_newflow_key] 91145#L815_accept_S2 [4284] L815_accept_S2-->L816_accept_S2: Formula: (and (<= v_fc_newflow_key_31 4294967295) (<= 0 v_fc_newflow_key_31))  InVars {fc_newflow_key=v_fc_newflow_key_31}  OutVars{fc_newflow_key=v_fc_newflow_key_31}  AuxVars[]  AssignedVars[] 91146#L816_accept_S2 [5420] L816_accept_S2-->L818_accept_S2: Formula: (= v_fc_newflow_key_29 (mod (+ (mod v_fc_newflow_key_30 4294967296) 1) 4294967296))  InVars {fc_newflow_key=v_fc_newflow_key_30}  OutVars{fc_newflow_key=v_fc_newflow_key_29}  AuxVars[]  AssignedVars[fc_newflow_key] 90840#L818_accept_S2 [4106] L818_accept_S2-->L819_accept_S2: Formula: true  InVars {}  OutVars{fc_cell_id=v_fc_cell_id_15}  AuxVars[]  AssignedVars[fc_cell_id] 90681#L819_accept_S2 [4023] L819_accept_S2-->L820_accept_S2: Formula: (and (<= v_fc_cell_id_17 64) (<= 0 v_fc_cell_id_17))  InVars {fc_cell_id=v_fc_cell_id_17}  OutVars{fc_cell_id=v_fc_cell_id_17}  AuxVars[]  AssignedVars[] 90682#L820_accept_S2 [5923] L820_accept_S2-->L821_accept_S2: Formula: (= v_meta.flowselector_cellid_28 v_fc_cell_id_13)  InVars {fc_cell_id=v_fc_cell_id_13}  OutVars{fc_cell_id=v_fc_cell_id_13, meta.flowselector_cellid=v_meta.flowselector_cellid_28}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 91263#L821_accept_S2 [4382] L821_accept_S2-->L823_accept_S2: Formula: (= v_fc_flowselector_index_70 (mod v_fc_cell_id_19 4294967296))  InVars {fc_cell_id=v_fc_cell_id_19}  OutVars{fc_cell_id=v_fc_cell_id_19, fc_flowselector_index=v_fc_flowselector_index_70}  AuxVars[]  AssignedVars[fc_flowselector_index] 91264#L823_accept_S2 [5045] L823_accept_S2-->L825_accept_S2: Formula: (= v_fc_curflow_key_28 (select v_flowselector_key_0_14 v_fc_flowselector_index_62))  InVars {flowselector_key_0=v_flowselector_key_0_14, fc_flowselector_index=v_fc_flowselector_index_62}  OutVars{flowselector_key_0=v_flowselector_key_0_14, fc_flowselector_index=v_fc_flowselector_index_62, fc_curflow_key=v_fc_curflow_key_28}  AuxVars[]  AssignedVars[fc_curflow_key] 90825#L825_accept_S2 [4098] L825_accept_S2-->L827_accept_S2: Formula: (= v_fc_curflow_ts_26 (select v_flowselector_ts_0_18 v_fc_flowselector_index_75))  InVars {flowselector_ts_0=v_flowselector_ts_0_18, fc_flowselector_index=v_fc_flowselector_index_75}  OutVars{fc_curflow_ts=v_fc_curflow_ts_26, flowselector_ts_0=v_flowselector_ts_0_18, fc_flowselector_index=v_fc_flowselector_index_75}  AuxVars[]  AssignedVars[fc_curflow_ts] 90826#L827_accept_S2 [5803] L827_accept_S2-->L829_accept_S2: Formula: (= v_fc_curflow_nep_14 (select v_flowselector_nep_0_16 v_fc_flowselector_index_52))  InVars {flowselector_nep_0=v_flowselector_nep_0_16, fc_flowselector_index=v_fc_flowselector_index_52}  OutVars{fc_curflow_nep=v_fc_curflow_nep_14, fc_flowselector_index=v_fc_flowselector_index_52, flowselector_nep_0=v_flowselector_nep_0_16}  AuxVars[]  AssignedVars[fc_curflow_nep] 90475#L829_accept_S2 [3934] L829_accept_S2-->L830_accept_S2: Formula: (= (select v_rerouting_ts_0_18 v_meta.id_291) v_fc_rerouting_ts_tmp_18)  InVars {meta.id=v_meta.id_291, rerouting_ts_0=v_rerouting_ts_0_18}  OutVars{meta.id=v_meta.id_291, fc_rerouting_ts_tmp=v_fc_rerouting_ts_tmp_18, rerouting_ts_0=v_rerouting_ts_0_18}  AuxVars[]  AssignedVars[fc_rerouting_ts_tmp] 90476#L830_accept_S2 [5842] L830_accept_S2-->L927_accept_S2: Formula: (or (not (= v_fc_newflow_key_24 v_fc_curflow_key_31)) (not (<= v_fc_curflow_ts_22 v_meta.ingress_timestamp_second_30)))  InVars {fc_curflow_ts=v_fc_curflow_ts_22, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_30, fc_newflow_key=v_fc_newflow_key_24, fc_curflow_key=v_fc_curflow_key_31}  OutVars{fc_curflow_ts=v_fc_curflow_ts_22, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_30, fc_newflow_key=v_fc_newflow_key_24, fc_curflow_key=v_fc_curflow_key_31}  AuxVars[]  AssignedVars[] 92426#L927_accept_S2 [5625] L927_accept_S2-->L927-1_accept_S2: Formula: (or (and (not (= v_fc_curflow_key_15 0)) (not (< 2 (mod (+ (* 511 (mod v_fc_curflow_ts_13 512)) (mod v_meta.ingress_timestamp_second_22 512)) 512))) (not (< v_meta.ingress_timestamp_second_22 v_fc_curflow_ts_13))) (not (= v_hdr.tcp.fin_16 0)))  InVars {fc_curflow_ts=v_fc_curflow_ts_13, hdr.tcp.fin=v_hdr.tcp.fin_16, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_22, fc_curflow_key=v_fc_curflow_key_15}  OutVars{fc_curflow_ts=v_fc_curflow_ts_13, hdr.tcp.fin=v_hdr.tcp.fin_16, meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_22, fc_curflow_key=v_fc_curflow_key_15}  AuxVars[]  AssignedVars[] 91854#L927-1_accept_S2 [4832] L927-1_accept_S2-->L964_accept_S2: Formula: (= v_sum_tmp_0_17 (select v_sw_sum_0_44 v_meta.id_284))  InVars {meta.id=v_meta.id_284, sw_sum_0=v_sw_sum_0_44}  OutVars{meta.id=v_meta.id_284, sw_sum_0=v_sw_sum_0_44, sum_tmp_0=v_sum_tmp_0_17}  AuxVars[]  AssignedVars[sum_tmp_0] 91855#L964_accept_S2 [5318] L964_accept_S2-->L965_accept_S2: Formula: (= (select v_nh_avaibility_1_19 v_meta.id_250) v_nh_avaibility_1_tmp_0_29)  InVars {meta.id=v_meta.id_250, nh_avaibility_1=v_nh_avaibility_1_19}  OutVars{meta.id=v_meta.id_250, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_29, nh_avaibility_1=v_nh_avaibility_1_19}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 92135#L965_accept_S2 [5136] L965_accept_S2-->L967_accept_S2: Formula: (and (< v_threshold_tmp_0_26 v_sum_tmp_0_12) (= v_nh_avaibility_1_tmp_0_24 0))  InVars {threshold_tmp_0=v_threshold_tmp_0_26, sum_tmp_0=v_sum_tmp_0_12, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_24}  OutVars{threshold_tmp_0=v_threshold_tmp_0_26, sum_tmp_0=v_sum_tmp_0_12, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_24}  AuxVars[]  AssignedVars[] 90578#L967_accept_S2 [3975] L967_accept_S2-->L967_accept_S2-D153: Formula: (and (= v_nh_avaibility_1.write_valueInParam_1 1) (= v_nh_avaibility_1.write_indexInParam_1 v_meta.id_138))  InVars {meta.id=v_meta.id_138}  OutVars{meta.id=v_meta.id_138, nh_avaibility_1.write_index=v_nh_avaibility_1.write_indexInParam_1, nh_avaibility_1.write_value=v_nh_avaibility_1.write_valueInParam_1}  AuxVars[]  AssignedVars[nh_avaibility_1.write_value, nh_avaibility_1.write_index]< 90579#L967_accept_S2-D153 [4821] L967_accept_S2-D153-->nh_avaibility_1.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91841#nh_avaibility_1.writeENTRY_accept_S2 [4878] nh_avaibility_1.writeENTRY_accept_S2-->nh_avaibility_1.writeFINAL_accept_S2: Formula: (= v_nh_avaibility_1_29 (store v_nh_avaibility_1_30 v_nh_avaibility_1.write_index_3 v_nh_avaibility_1.write_value_3))  InVars {nh_avaibility_1.write_index=v_nh_avaibility_1.write_index_3, nh_avaibility_1=v_nh_avaibility_1_30, nh_avaibility_1.write_value=v_nh_avaibility_1.write_value_3}  OutVars{nh_avaibility_1.write_index=v_nh_avaibility_1.write_index_3, nh_avaibility_1=v_nh_avaibility_1_29, nh_avaibility_1.write_value=v_nh_avaibility_1.write_value_3}  AuxVars[]  AssignedVars[nh_avaibility_1] 91741#nh_avaibility_1.writeFINAL_accept_S2 [4737] nh_avaibility_1.writeFINAL_accept_S2-->nh_avaibility_1.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90954#nh_avaibility_1.writeEXIT_accept_S2 >[6277] nh_avaibility_1.writeEXIT_accept_S2-->L967-1-D435: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_nh_avaibility_1.write_valueInParam_1 1) (= v_nh_avaibility_1.write_indexInParam_1 v_meta.id_138))  InVars {meta.id=v_meta.id_138}  OutVars{meta.id=v_meta.id_138, nh_avaibility_1.write_index=v_nh_avaibility_1.write_indexInParam_1, nh_avaibility_1.write_value=v_nh_avaibility_1.write_valueInParam_1}  AuxVars[]  AssignedVars[nh_avaibility_1.write_value, nh_avaibility_1.write_index] 90870#L967-1-D435 [4126] L967-1-D435-->L967-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90871#L967-1_accept_S2 [4770] L967-1_accept_S2-->L967-1_accept_S2-D147: Formula: (and (= v_nbflows_progressing_2.write_indexInParam_2 v_meta.id_139) (= v_nbflows_progressing_2.write_valueInParam_2 0))  InVars {meta.id=v_meta.id_139}  OutVars{meta.id=v_meta.id_139, nbflows_progressing_2.write_value=v_nbflows_progressing_2.write_valueInParam_2, nbflows_progressing_2.write_index=v_nbflows_progressing_2.write_indexInParam_2}  AuxVars[]  AssignedVars[nbflows_progressing_2.write_value, nbflows_progressing_2.write_index]< 91778#L967-1_accept_S2-D147 [4915] L967-1_accept_S2-D147-->nbflows_progressing_2.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91940#nbflows_progressing_2.writeENTRY_accept_S2 [5110] nbflows_progressing_2.writeENTRY_accept_S2-->nbflows_progressing_2.writeFINAL_accept_S2: Formula: (= (store v_nbflows_progressing_2_22 v_nbflows_progressing_2.write_index_2 v_nbflows_progressing_2.write_value_2) v_nbflows_progressing_2_21)  InVars {nbflows_progressing_2.write_value=v_nbflows_progressing_2.write_value_2, nbflows_progressing_2=v_nbflows_progressing_2_22, nbflows_progressing_2.write_index=v_nbflows_progressing_2.write_index_2}  OutVars{nbflows_progressing_2.write_value=v_nbflows_progressing_2.write_value_2, nbflows_progressing_2=v_nbflows_progressing_2_21, nbflows_progressing_2.write_index=v_nbflows_progressing_2.write_index_2}  AuxVars[]  AssignedVars[nbflows_progressing_2] 91054#nbflows_progressing_2.writeFINAL_accept_S2 [4228] nbflows_progressing_2.writeFINAL_accept_S2-->nbflows_progressing_2.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91055#nbflows_progressing_2.writeEXIT_accept_S2 >[5992] nbflows_progressing_2.writeEXIT_accept_S2-->L969-D261: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_nbflows_progressing_2.write_indexInParam_2 v_meta.id_139) (= v_nbflows_progressing_2.write_valueInParam_2 0))  InVars {meta.id=v_meta.id_139}  OutVars{meta.id=v_meta.id_139, nbflows_progressing_2.write_value=v_nbflows_progressing_2.write_valueInParam_2, nbflows_progressing_2.write_index=v_nbflows_progressing_2.write_indexInParam_2}  AuxVars[]  AssignedVars[nbflows_progressing_2.write_value, nbflows_progressing_2.write_index] 91147#L969-D261 [4629] L969-D261-->L969_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90897#L969_accept_S2 [4367] L969_accept_S2-->L969_accept_S2-D177: Formula: (and (= v_nbflows_progressing_3.write_valueInParam_2 0) (= v_nbflows_progressing_3.write_indexInParam_2 v_meta.id_140))  InVars {meta.id=v_meta.id_140}  OutVars{meta.id=v_meta.id_140, nbflows_progressing_3.write_index=v_nbflows_progressing_3.write_indexInParam_2, nbflows_progressing_3.write_value=v_nbflows_progressing_3.write_valueInParam_2}  AuxVars[]  AssignedVars[nbflows_progressing_3.write_index, nbflows_progressing_3.write_value]< 91241#L969_accept_S2-D177 [4461] L969_accept_S2-D177-->nbflows_progressing_3.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91376#nbflows_progressing_3.writeENTRY_accept_S2 [5602] nbflows_progressing_3.writeENTRY_accept_S2-->nbflows_progressing_3.writeFINAL_accept_S2: Formula: (= v_nbflows_progressing_3_25 (store v_nbflows_progressing_3_26 v_nbflows_progressing_3.write_index_4 v_nbflows_progressing_3.write_value_4))  InVars {nbflows_progressing_3=v_nbflows_progressing_3_26, nbflows_progressing_3.write_index=v_nbflows_progressing_3.write_index_4, nbflows_progressing_3.write_value=v_nbflows_progressing_3.write_value_4}  OutVars{nbflows_progressing_3=v_nbflows_progressing_3_25, nbflows_progressing_3.write_index=v_nbflows_progressing_3.write_index_4, nbflows_progressing_3.write_value=v_nbflows_progressing_3.write_value_4}  AuxVars[]  AssignedVars[nbflows_progressing_3] 92289#nbflows_progressing_3.writeFINAL_accept_S2 [5347] nbflows_progressing_3.writeFINAL_accept_S2-->nbflows_progressing_3.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90896#nbflows_progressing_3.writeEXIT_accept_S2 >[5963] nbflows_progressing_3.writeEXIT_accept_S2-->L971-D417: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_nbflows_progressing_3.write_valueInParam_2 0) (= v_nbflows_progressing_3.write_indexInParam_2 v_meta.id_140))  InVars {meta.id=v_meta.id_140}  OutVars{meta.id=v_meta.id_140, nbflows_progressing_3.write_index=v_nbflows_progressing_3.write_indexInParam_2, nbflows_progressing_3.write_value=v_nbflows_progressing_3.write_valueInParam_2}  AuxVars[]  AssignedVars[nbflows_progressing_3.write_index, nbflows_progressing_3.write_value] 90898#L971-D417 [5376] L971-D417-->L971_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91394#L971_accept_S2 [4478] L971_accept_S2-->L971_accept_S2-D174: Formula: (and (= v_rerouting_ts_0.write_indexInParam_1 v_meta.id_141) (= v_meta.ingress_timestamp_millisecond_42 v_rerouting_ts_0.write_valueInParam_1))  InVars {meta.id=v_meta.id_141, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_42}  OutVars{meta.id=v_meta.id_141, rerouting_ts_0.write_index=v_rerouting_ts_0.write_indexInParam_1, rerouting_ts_0.write_value=v_rerouting_ts_0.write_valueInParam_1, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_42}  AuxVars[]  AssignedVars[rerouting_ts_0.write_value, rerouting_ts_0.write_index]< 91395#L971_accept_S2-D174 [5586] L971_accept_S2-D174-->rerouting_ts_0.writeENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91857#rerouting_ts_0.writeENTRY_accept_S2 [4833] rerouting_ts_0.writeENTRY_accept_S2-->rerouting_ts_0.writeFINAL_accept_S2: Formula: (= v_rerouting_ts_0_19 (store v_rerouting_ts_0_20 v_rerouting_ts_0.write_index_2 v_rerouting_ts_0.write_value_2))  InVars {rerouting_ts_0.write_index=v_rerouting_ts_0.write_index_2, rerouting_ts_0.write_value=v_rerouting_ts_0.write_value_2, rerouting_ts_0=v_rerouting_ts_0_20}  OutVars{rerouting_ts_0.write_index=v_rerouting_ts_0.write_index_2, rerouting_ts_0.write_value=v_rerouting_ts_0.write_value_2, rerouting_ts_0=v_rerouting_ts_0_19}  AuxVars[]  AssignedVars[rerouting_ts_0] 91858#rerouting_ts_0.writeFINAL_accept_S2 [5417] rerouting_ts_0.writeFINAL_accept_S2-->rerouting_ts_0.writeEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92181#rerouting_ts_0.writeEXIT_accept_S2 >[6145] rerouting_ts_0.writeEXIT_accept_S2-->L671-1-D255: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_rerouting_ts_0.write_indexInParam_1 v_meta.id_141) (= v_meta.ingress_timestamp_millisecond_42 v_rerouting_ts_0.write_valueInParam_1))  InVars {meta.id=v_meta.id_141, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_42}  OutVars{meta.id=v_meta.id_141, rerouting_ts_0.write_index=v_rerouting_ts_0.write_indexInParam_1, rerouting_ts_0.write_value=v_rerouting_ts_0.write_valueInParam_1, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_42}  AuxVars[]  AssignedVars[rerouting_ts_0.write_value, rerouting_ts_0.write_index] 92182#L671-1-D255 [5401] L671-1-D255-->L671-1_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91551#L671-1_accept_S2 [4587] L671-1_accept_S2-->L979_accept_S2: Formula: (= v_meta.use_blink_24 1)  InVars {meta.use_blink=v_meta.use_blink_24}  OutVars{meta.use_blink=v_meta.use_blink_24}  AuxVars[]  AssignedVars[] 91552#L979_accept_S2 [5627] L979_accept_S2-->L981_accept_S2: Formula: (= v_nh_avaibility_1_tmp_0_14 (select v_nh_avaibility_1_16 v_meta.id_212))  InVars {meta.id=v_meta.id_212, nh_avaibility_1=v_nh_avaibility_1_16}  OutVars{meta.id=v_meta.id_212, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_14, nh_avaibility_1=v_nh_avaibility_1_16}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 91816#L981_accept_S2 [4804] L981_accept_S2-->L983_accept_S2: Formula: (= (select v_nh_avaibility_2_15 v_meta.id_258) v_nh_avaibility_2_tmp_0_45)  InVars {nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258}  OutVars{nh_avaibility_2=v_nh_avaibility_2_15, meta.id=v_meta.id_258, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_45}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 91817#L983_accept_S2 [5142] L983_accept_S2-->L985_accept_S2: Formula: (= (select v_nh_avaibility_3_14 v_meta.id_221) v_nh_avaibility_3_tmp_0_30)  InVars {meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14}  OutVars{meta.id=v_meta.id_221, nh_avaibility_3=v_nh_avaibility_3_14, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_30}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 90600#L985_accept_S2 [3985] L985_accept_S2-->L986_accept_S2: Formula: (= v_rerouting_ts_tmp_0_13 (select v_rerouting_ts_0_14 v_meta.id_196))  InVars {meta.id=v_meta.id_196, rerouting_ts_0=v_rerouting_ts_0_14}  OutVars{meta.id=v_meta.id_196, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_13, rerouting_ts_0=v_rerouting_ts_0_14}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 90601#L986_accept_S2 [4917] L986_accept_S2-->L1047_accept_S2: Formula: (or (not (< (mod (+ (* (mod v_rerouting_ts_tmp_0_22 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_113 524288)) 524288) 976)) (not (= v_meta.selected_23 1)) (not (< 0 v_rerouting_ts_tmp_0_22)))  InVars {meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  OutVars{meta.selected=v_meta.selected_23, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_113, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_22}  AuxVars[]  AssignedVars[] 90404#L1047_accept_S2 [3896] L1047_accept_S2-->L1052_accept_S2: Formula: (not (= v_nh_avaibility_1_tmp_0_23 0))  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_23}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_23}  AuxVars[]  AssignedVars[] 90405#L1052_accept_S2 [5055] L1052_accept_S2-->L1054_accept_S2: Formula: (= v_nh_avaibility_2_tmp_0_33 0)  InVars {nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_33}  OutVars{nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_33}  AuxVars[]  AssignedVars[] 91640#L1054_accept_S2 [4656] L1054_accept_S2-->L1057-2_accept_S2: Formula: (= v_meta.next_hop_port_40 (select v_next_hops_port_0_28 (mod (+ (mod (* 3 (mod v_meta.id_241 4294967296)) 4294967296) 1) 4294967296)))  InVars {next_hops_port_0=v_next_hops_port_0_28, meta.id=v_meta.id_241}  OutVars{next_hops_port_0=v_next_hops_port_0_28, meta.id=v_meta.id_241, meta.next_hop_port=v_meta.next_hop_port_40}  AuxVars[]  AssignedVars[meta.next_hop_port] 91120#L1057-2_accept_S2 [5096] L1057-2_accept_S2-->L977_accept_S2: Formula: (or (not (< 976 (mod (+ (mod v_meta.ingress_timestamp_millisecond_91 524288) (* (mod v_rerouting_ts_tmp_0_18 524288) 524287)) 524288))) (not (< 0 v_rerouting_ts_tmp_0_18)))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_91, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_18}  AuxVars[]  AssignedVars[] 90974#L977_accept_S2 [5756] L977_accept_S2-->L977_accept_S2-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90973#L977_accept_S2-D81 [4176] L977_accept_S2-D81-->send_0.applyENTRY_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90975#send_0.applyENTRY_accept_S2 [5210] send_0.applyENTRY_accept_S2-->L1198_accept_S2: Formula: (not (= v_send_0.action_run_24 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_24}  OutVars{send_0.action_run=v_send_0.action_run_24}  AuxVars[]  AssignedVars[] 91336#L1198_accept_S2 [4435] L1198_accept_S2-->L1198-1_accept_S2: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_20))  InVars {send_0.action_run=v_send_0.action_run_20}  OutVars{send_0.action_run=v_send_0.action_run_20}  AuxVars[]  AssignedVars[] 91337#L1198-1_accept_S2 [5157] L1198-1_accept_S2-->send_0.applyEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92155#send_0.applyEXIT_accept_S2 >[6383] send_0.applyEXIT_accept_S2-->L1083-D249: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91758#L1083-D249 [4751] L1083-D249-->L1083_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90261#L1083_accept_S2 [3826] L1083_accept_S2-->ingressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90262#ingressEXIT_accept_S2 >[6291] ingressEXIT_accept_S2-->L1092-D453: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91882#L1092-D453 [4864] L1092-D453-->L1092_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91737#L1092_accept_S2 [5416] L1092_accept_S2-->L1092_accept_S2-D12: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91736#L1092_accept_S2-D12 [4734] L1092_accept_S2-D12-->egressFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91738#egressFINAL_accept_S2 [5060] egressFINAL_accept_S2-->egressEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92332#egressEXIT_accept_S2 >[6188] egressEXIT_accept_S2-->L1093-D462: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91537#L1093-D462 [4581] L1093-D462-->L1093_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91538#L1093_accept_S2 [5528] L1093_accept_S2-->L1093_accept_S2-D156: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91590#L1093_accept_S2-D156 [4625] L1093_accept_S2-D156-->computeChecksumFINAL_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91591#computeChecksumFINAL_accept_S2 [3936] computeChecksumFINAL_accept_S2-->computeChecksumEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91698#computeChecksumEXIT_accept_S2 >[6009] computeChecksumEXIT_accept_S2-->L1094-D246: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91699#L1094-D246 [5724] L1094-D246-->L1094_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91409#L1094_accept_S2 [4488] L1094_accept_S2-->L1096_accept_S2: Formula: (not v_forward_28)  InVars {forward=v_forward_28}  OutVars{forward=v_forward_28}  AuxVars[]  AssignedVars[] 90439#L1096_accept_S2 [3914] L1096_accept_S2-->L1095-1_accept_S2: Formula: v_drop_41  InVars {}  OutVars{drop=v_drop_41}  AuxVars[]  AssignedVars[drop] 90441#L1095-1_accept_S2 [4624] L1095-1_accept_S2-->L1099_accept_S2: Formula: (let ((.cse0 (< (select v_threshold_registers_0_9 v__p4ltl_free_a_6) (select v_sw_sum_0_53 v__p4ltl_free_a_6)))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  OutVars{_p4ltl_0=v__p4ltl_0_8, sw_sum_0=v_sw_sum_0_53, threshold_registers_0=v_threshold_registers_0_9, _p4ltl_free_a=v__p4ltl_free_a_6}  AuxVars[]  AssignedVars[_p4ltl_0] 91589#L1099_accept_S2 [4831] L1099_accept_S2-->L1100_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_22 v__p4ltl_free_a_10) 1))) (or (and v__p4ltl_1_7 .cse0) (and (not v__p4ltl_1_7) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  OutVars{_p4ltl_1=v__p4ltl_1_7, nh_avaibility_1=v_nh_avaibility_1_22, _p4ltl_free_a=v__p4ltl_free_a_10}  AuxVars[]  AssignedVars[_p4ltl_1] 91853#L1100_accept_S2 [5595] L1100_accept_S2-->L1101_accept_S2: Formula: (let ((.cse0 (= v__p4ltl_free_a_12 v_meta.id_296))) (or (and (not .cse0) (not v__p4ltl_2_9)) (and v__p4ltl_2_9 .cse0)))  InVars {meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  OutVars{_p4ltl_2=v__p4ltl_2_9, meta.id=v_meta.id_296, _p4ltl_free_a=v__p4ltl_free_a_12}  AuxVars[]  AssignedVars[_p4ltl_2] 91444#L1101_accept_S2 [4515] L1101_accept_S2-->L1102_accept_S2: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_25 v__p4ltl_free_a_15) 0))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and v__p4ltl_3_8 .cse0)))  InVars {nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  OutVars{_p4ltl_3=v__p4ltl_3_8, nh_avaibility_1=v_nh_avaibility_1_25, _p4ltl_free_a=v__p4ltl_free_a_15}  AuxVars[]  AssignedVars[_p4ltl_3] 91131#L1102_accept_S2 [4271] L1102_accept_S2-->L1103_accept_S2: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_32 1))) (or (and v__p4ltl_4_10 (not .cse0)) (and .cse0 (not v__p4ltl_4_10))))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  OutVars{_p4ltl_4=v__p4ltl_4_10, hdr.ipv4.ttl=v_hdr.ipv4.ttl_32}  AuxVars[]  AssignedVars[_p4ltl_4] 90758#L1103_accept_S2 [4061] L1103_accept_S2-->mainFINAL_accept_S2: Formula: (let ((.cse0 (= v_meta.use_blink_36 1))) (or (and (not .cse0) (not v__p4ltl_5_11)) (and v__p4ltl_5_11 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_36}  OutVars{meta.use_blink=v_meta.use_blink_36, _p4ltl_5=v__p4ltl_5_11}  AuxVars[]  AssignedVars[_p4ltl_5] 90634#mainFINAL_accept_S2 [4002] mainFINAL_accept_S2-->mainEXIT_accept_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90635#mainEXIT_accept_S2 >[6343] mainEXIT_accept_S2-->L1109-1-D270: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91002#L1109-1-D270 [4193] L1109-1-D270-->L1109-1_accept_S3: Formula: (and v__p4ltl_1_6 v__p4ltl_5_9 v__p4ltl_4_9 v__p4ltl_2_7 (not v__p4ltl_0_6) v_hdr.tcp.valid_39)  InVars {_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  OutVars{_p4ltl_2=v__p4ltl_2_7, _p4ltl_0=v__p4ltl_0_6, _p4ltl_1=v__p4ltl_1_6, _p4ltl_4=v__p4ltl_4_9, _p4ltl_5=v__p4ltl_5_9, hdr.tcp.valid=v_hdr.tcp.valid_39}  AuxVars[]  AssignedVars[] 91003#L1109-1_accept_S3 
[2023-01-16 04:11:49,280 INFO  L754   eck$LassoCheckResult]: Loop: 91003#L1109-1_accept_S3 [4466] L1109-1_accept_S3-->L1109_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90252#L1109_accept_S3 [5074] L1109_accept_S3-->L1109_accept_S3-D106: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92081#L1109_accept_S3-D106 [5198] L1109_accept_S3-D106-->mainENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90278#mainENTRY_accept_S3 [5275] mainENTRY_accept_S3-->mainENTRY_accept_S3-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92246#mainENTRY_accept_S3-D49 [5302] mainENTRY_accept_S3-D49-->havocProcedureENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92264#havocProcedureENTRY_accept_S3 [5896] havocProcedureENTRY_accept_S3-->L490_accept_S3: Formula: (not v_drop_37)  InVars {}  OutVars{drop=v_drop_37}  AuxVars[]  AssignedVars[drop] 91383#L490_accept_S3 [4468] L490_accept_S3-->L491_accept_S3: Formula: (not v_forward_22)  InVars {}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[forward] 91384#L491_accept_S3 [5241] L491_accept_S3-->L492_accept_S3: Formula: (= v_standard_metadata.ingress_port_16 0)  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 92025#L492_accept_S3 [5009] L492_accept_S3-->L493_accept_S3: Formula: (= v_standard_metadata.egress_spec_20 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_20}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 90939#L493_accept_S3 [4154] L493_accept_S3-->L494_accept_S3: Formula: (= 0 v_standard_metadata.egress_port_21)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 90940#L494_accept_S3 [5611] L494_accept_S3-->L495_accept_S3: Formula: (= v_standard_metadata.instance_type_10 0)  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 91369#L495_accept_S3 [4454] L495_accept_S3-->L496_accept_S3: Formula: (= v_standard_metadata.packet_length_10 0)  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 91370#L496_accept_S3 [5113] L496_accept_S3-->L497_accept_S3: Formula: (= v_standard_metadata.enq_timestamp_10 0)  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 90465#L497_accept_S3 [3928] L497_accept_S3-->L498_accept_S3: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 90466#L498_accept_S3 [4060] L498_accept_S3-->L499_accept_S3: Formula: (= v_standard_metadata.deq_timedelta_10 0)  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_10}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 90757#L499_accept_S3 [4700] L499_accept_S3-->L500_accept_S3: Formula: (= v_standard_metadata.deq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 91693#L500_accept_S3 [5545] L500_accept_S3-->L501_accept_S3: Formula: (= v_standard_metadata.ingress_global_timestamp_27 0)  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_27}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 91722#L501_accept_S3 [4722] L501_accept_S3-->L502_accept_S3: Formula: (= v_standard_metadata.egress_global_timestamp_9 0)  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 91723#L502_accept_S3 [5890] L502_accept_S3-->L503_accept_S3: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 90447#L503_accept_S3 [3918] L503_accept_S3-->L504_accept_S3: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 90448#L504_accept_S3 [4344] L504_accept_S3-->L505_accept_S3: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 91216#L505_accept_S3 [5187] L505_accept_S3-->L506_accept_S3: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 90724#L506_accept_S3 [4043] L506_accept_S3-->L507_accept_S3: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 90725#L507_accept_S3 [4740] L507_accept_S3-->L508_accept_S3: Formula: (= v_emit_35 (store v_emit_36 v_hdr.ethernet_3 false))  InVars {emit=v_emit_36, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_35, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 91748#L508_accept_S3 [5208] L508_accept_S3-->L509_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.dstAddr=v_hdr.ethernet.dstAddr_25}  AuxVars[]  AssignedVars[hdr.ethernet.dstAddr] 92196#L509_accept_S3 [5448] L509_accept_S3-->L510_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.srcAddr=v_hdr.ethernet.srcAddr_23}  AuxVars[]  AssignedVars[hdr.ethernet.srcAddr] 92234#L510_accept_S3 [5255] L510_accept_S3-->L511_accept_S3: Formula: true  InVars {}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_11}  AuxVars[]  AssignedVars[hdr.ethernet.etherType] 91029#L511_accept_S3 [4209] L511_accept_S3-->L512_accept_S3: Formula: (and (<= 0 v_hdr.ethernet.etherType_14) (<= v_hdr.ethernet.etherType_14 65536))  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_14}  AuxVars[]  AssignedVars[] 91030#L512_accept_S3 [4892] L512_accept_S3-->L513_accept_S3: Formula: (not v_hdr.ipv4_icmp.valid_9)  InVars {}  OutVars{hdr.ipv4_icmp.valid=v_hdr.ipv4_icmp.valid_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.valid] 91924#L513_accept_S3 [4982] L513_accept_S3-->L514_accept_S3: Formula: (= v_emit_29 (store v_emit_30 v_hdr.ipv4_icmp_14 false))  InVars {emit=v_emit_30, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  OutVars{emit=v_emit_29, hdr.ipv4_icmp=v_hdr.ipv4_icmp_14}  AuxVars[]  AssignedVars[emit] 91996#L514_accept_S3 [5558] L514_accept_S3-->L515_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_12}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.version] 92292#L515_accept_S3 [5345] L515_accept_S3-->L516_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.version_9) (<= v_hdr.ipv4_icmp.version_9 16))  InVars {hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  OutVars{hdr.ipv4_icmp.version=v_hdr.ipv4_icmp.version_9}  AuxVars[]  AssignedVars[] 92133#L516_accept_S3 [5131] L516_accept_S3-->L517_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ihl] 92134#L517_accept_S3 [5856] L517_accept_S3-->L518_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ihl_10 16) (<= 0 v_hdr.ipv4_icmp.ihl_10))  InVars {hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  OutVars{hdr.ipv4_icmp.ihl=v_hdr.ipv4_icmp.ihl_10}  AuxVars[]  AssignedVars[] 92455#L518_accept_S3 [5710] L518_accept_S3-->L519_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_13}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dscp] 91071#L519_accept_S3 [4237] L519_accept_S3-->L520_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.dscp_11 64) (<= 0 v_hdr.ipv4_icmp.dscp_11))  InVars {hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  OutVars{hdr.ipv4_icmp.dscp=v_hdr.ipv4_icmp.dscp_11}  AuxVars[]  AssignedVars[] 91072#L520_accept_S3 [5200] L520_accept_S3-->L521_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ecn] 92130#L521_accept_S3 [5124] L521_accept_S3-->L522_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.ecn_11 4) (<= 0 v_hdr.ipv4_icmp.ecn_11))  InVars {hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  OutVars{hdr.ipv4_icmp.ecn=v_hdr.ipv4_icmp.ecn_11}  AuxVars[]  AssignedVars[] 92131#L522_accept_S3 [5279] L522_accept_S3-->L523_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.totalLen] 91724#L523_accept_S3 [4725] L523_accept_S3-->L524_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.totalLen_16 65536) (<= 0 v_hdr.ipv4_icmp.totalLen_16))  InVars {hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  OutVars{hdr.ipv4_icmp.totalLen=v_hdr.ipv4_icmp.totalLen_16}  AuxVars[]  AssignedVars[] 91643#L524_accept_S3 [4659] L524_accept_S3-->L525_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.identification] 90856#L525_accept_S3 [4117] L525_accept_S3-->L526_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.identification_10 65536) (<= 0 v_hdr.ipv4_icmp.identification_10))  InVars {hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  OutVars{hdr.ipv4_icmp.identification=v_hdr.ipv4_icmp.identification_10}  AuxVars[]  AssignedVars[] 90423#L526_accept_S3 [3906] L526_accept_S3-->L527_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.flags] 90424#L527_accept_S3 [5658] L527_accept_S3-->L528_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.flags_12 8) (<= 0 v_hdr.ipv4_icmp.flags_12))  InVars {hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  OutVars{hdr.ipv4_icmp.flags=v_hdr.ipv4_icmp.flags_12}  AuxVars[]  AssignedVars[] 92085#L528_accept_S3 [5082] L528_accept_S3-->L529_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_11}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.fragOffset] 92086#L529_accept_S3 [5537] L529_accept_S3-->L530_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.fragOffset_9 8192) (<= 0 v_hdr.ipv4_icmp.fragOffset_9))  InVars {hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  OutVars{hdr.ipv4_icmp.fragOffset=v_hdr.ipv4_icmp.fragOffset_9}  AuxVars[]  AssignedVars[] 92247#L530_accept_S3 [5276] L530_accept_S3-->L531_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_19}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.ttl] 92248#L531_accept_S3 [5675] L531_accept_S3-->L532_accept_S3: Formula: (and (<= 0 v_hdr.ipv4_icmp.ttl_16) (<= v_hdr.ipv4_icmp.ttl_16 256))  InVars {hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  OutVars{hdr.ipv4_icmp.ttl=v_hdr.ipv4_icmp.ttl_16}  AuxVars[]  AssignedVars[] 92046#L532_accept_S3 [5032] L532_accept_S3-->L533_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_20}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.protocol] 90437#L533_accept_S3 [3913] L533_accept_S3-->L534_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.protocol_18 256) (<= 0 v_hdr.ipv4_icmp.protocol_18))  InVars {hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  OutVars{hdr.ipv4_icmp.protocol=v_hdr.ipv4_icmp.protocol_18}  AuxVars[]  AssignedVars[] 90438#L534_accept_S3 [5488] L534_accept_S3-->L535_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_9}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.hdrChecksum] 90992#L535_accept_S3 [4187] L535_accept_S3-->L536_accept_S3: Formula: (and (<= v_hdr.ipv4_icmp.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4_icmp.hdrChecksum_13))  InVars {hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  OutVars{hdr.ipv4_icmp.hdrChecksum=v_hdr.ipv4_icmp.hdrChecksum_13}  AuxVars[]  AssignedVars[] 90993#L536_accept_S3 [4941] L536_accept_S3-->L537_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.srcAddr=v_hdr.ipv4_icmp.srcAddr_15}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.srcAddr] 91966#L537_accept_S3 [5744] L537_accept_S3-->L538_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4_icmp.dstAddr=v_hdr.ipv4_icmp.dstAddr_16}  AuxVars[]  AssignedVars[hdr.ipv4_icmp.dstAddr] 92387#L538_accept_S3 [5529] L538_accept_S3-->L539_accept_S3: Formula: (not v_hdr.icmp.valid_10)  InVars {}  OutVars{hdr.icmp.valid=v_hdr.icmp.valid_10}  AuxVars[]  AssignedVars[hdr.icmp.valid] 91358#L539_accept_S3 [4448] L539_accept_S3-->L540_accept_S3: Formula: (= v_emit_23 (store v_emit_24 v_hdr.icmp_4 false))  InVars {emit=v_emit_24, hdr.icmp=v_hdr.icmp_4}  OutVars{emit=v_emit_23, hdr.icmp=v_hdr.icmp_4}  AuxVars[]  AssignedVars[emit] 90905#L540_accept_S3 [4139] L540_accept_S3-->L541_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.type=v_hdr.icmp.type_16}  AuxVars[]  AssignedVars[hdr.icmp.type] 90784#L541_accept_S3 [4076] L541_accept_S3-->L542_accept_S3: Formula: (and (<= v_hdr.icmp.type_20 256) (<= 0 v_hdr.icmp.type_20))  InVars {hdr.icmp.type=v_hdr.icmp.type_20}  OutVars{hdr.icmp.type=v_hdr.icmp.type_20}  AuxVars[]  AssignedVars[] 90785#L542_accept_S3 [5659] L542_accept_S3-->L543_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.code=v_hdr.icmp.code_18}  AuxVars[]  AssignedVars[hdr.icmp.code] 92322#L543_accept_S3 [5406] L543_accept_S3-->L544_accept_S3: Formula: (and (<= v_hdr.icmp.code_16 256) (<= 0 v_hdr.icmp.code_16))  InVars {hdr.icmp.code=v_hdr.icmp.code_16}  OutVars{hdr.icmp.code=v_hdr.icmp.code_16}  AuxVars[]  AssignedVars[] 91991#L544_accept_S3 [4975] L544_accept_S3-->L545_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_9}  AuxVars[]  AssignedVars[hdr.icmp.checksum] 91992#L545_accept_S3 [5472] L545_accept_S3-->L546_accept_S3: Formula: (and (<= 0 v_hdr.icmp.checksum_12) (<= v_hdr.icmp.checksum_12 65536))  InVars {hdr.icmp.checksum=v_hdr.icmp.checksum_12}  OutVars{hdr.icmp.checksum=v_hdr.icmp.checksum_12}  AuxVars[]  AssignedVars[] 92316#L546_accept_S3 [5394] L546_accept_S3-->L547_accept_S3: Formula: true  InVars {}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_10}  AuxVars[]  AssignedVars[hdr.icmp.unused] 90497#L547_accept_S3 [3941] L547_accept_S3-->L548_accept_S3: Formula: (and (<= 0 v_hdr.icmp.unused_11) (<= v_hdr.icmp.unused_11 4294967296))  InVars {hdr.icmp.unused=v_hdr.icmp.unused_11}  OutVars{hdr.icmp.unused=v_hdr.icmp.unused_11}  AuxVars[]  AssignedVars[] 90456#L548_accept_S3 [3922] L548_accept_S3-->L549_accept_S3: Formula: (not v_hdr.ipv4.valid_24)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_24}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 90457#L549_accept_S3 [3966] L549_accept_S3-->L550_accept_S3: Formula: (= v_emit_43 (store v_emit_44 v_hdr.ipv4_7 false))  InVars {hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_44}  OutVars{hdr.ipv4=v_hdr.ipv4_7, emit=v_emit_43}  AuxVars[]  AssignedVars[emit] 90562#L550_accept_S3 [4306] L550_accept_S3-->L551_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[hdr.ipv4.version] 91178#L551_accept_S3 [4594] L551_accept_S3-->L552_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.version_13) (<= v_hdr.ipv4.version_13 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_13}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[] 91561#L552_accept_S3 [4667] L552_accept_S3-->L553_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_18}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 91648#L553_accept_S3 [5496] L553_accept_S3-->L554_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ihl_13) (<= v_hdr.ipv4.ihl_13 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[] 92083#L554_accept_S3 [5077] L554_accept_S3-->L555_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_14}  AuxVars[]  AssignedVars[hdr.ipv4.dscp] 90853#L555_accept_S3 [4115] L555_accept_S3-->L556_accept_S3: Formula: (and (<= v_hdr.ipv4.dscp_11 64) (<= 0 v_hdr.ipv4.dscp_11))  InVars {hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  OutVars{hdr.ipv4.dscp=v_hdr.ipv4.dscp_11}  AuxVars[]  AssignedVars[] 90709#L556_accept_S3 [4031] L556_accept_S3-->L557_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_12}  AuxVars[]  AssignedVars[hdr.ipv4.ecn] 90495#L557_accept_S3 [3940] L557_accept_S3-->L558_accept_S3: Formula: (and (<= v_hdr.ipv4.ecn_13 4) (<= 0 v_hdr.ipv4.ecn_13))  InVars {hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  OutVars{hdr.ipv4.ecn=v_hdr.ipv4.ecn_13}  AuxVars[]  AssignedVars[] 90496#L558_accept_S3 [4786] L558_accept_S3-->L559_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 91794#L559_accept_S3 [5172] L559_accept_S3-->L560_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.totalLen_16) (<= v_hdr.ipv4.totalLen_16 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[] 92171#L560_accept_S3 [5452] L560_accept_S3-->L561_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 90638#L561_accept_S3 [4005] L561_accept_S3-->L562_accept_S3: Formula: (and (<= v_hdr.ipv4.identification_11 65536) (<= 0 v_hdr.ipv4.identification_11))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_11}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[] 90639#L562_accept_S3 [5373] L562_accept_S3-->L563_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 90857#L563_accept_S3 [4118] L563_accept_S3-->L564_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (<= v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 90858#L564_accept_S3 [5833] L564_accept_S3-->L565_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 90553#L565_accept_S3 [3962] L565_accept_S3-->L566_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_13) (<= v_hdr.ipv4.fragOffset_13 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[] 90554#L566_accept_S3 [4169] L566_accept_S3-->L567_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_28}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 90965#L567_accept_S3 [5696] L567_accept_S3-->L568_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.ttl_29) (<= v_hdr.ipv4.ttl_29 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_29}  AuxVars[]  AssignedVars[] 91765#L568_accept_S3 [4757] L568_accept_S3-->L569_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 91174#L569_accept_S3 [4302] L569_accept_S3-->L570_accept_S3: Formula: (and (<= 0 v_hdr.ipv4.protocol_11) (<= v_hdr.ipv4.protocol_11 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_11}  AuxVars[]  AssignedVars[] 91175#L570_accept_S3 [4505] L570_accept_S3-->L571_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 91430#L571_accept_S3 [4799] L571_accept_S3-->L572_accept_S3: Formula: (and (<= v_hdr.ipv4.hdrChecksum_12 65536) (<= 0 v_hdr.ipv4.hdrChecksum_12))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[] 91812#L572_accept_S3 [4923] L572_accept_S3-->L573_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 90589#L573_accept_S3 [3980] L573_accept_S3-->L574_accept_S3: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 90590#L574_accept_S3 [5425] L574_accept_S3-->L575_accept_S3: Formula: (not v_hdr.tcp.valid_35)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_35}  AuxVars[]  AssignedVars[hdr.tcp.valid] 91483#L575_accept_S3 [4546] L575_accept_S3-->L576_accept_S3: Formula: (= (store v_emit_18 v_hdr.tcp_2 false) v_emit_17)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_18}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_17}  AuxVars[]  AssignedVars[emit] 91484#L576_accept_S3 [4809] L576_accept_S3-->L577_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 90277#L577_accept_S3 [3831] L577_accept_S3-->L578_accept_S3: Formula: (and (<= v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 90279#L578_accept_S3 [4573] L578_accept_S3-->L579_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 91527#L579_accept_S3 [5759] L579_accept_S3-->L580_accept_S3: Formula: (and (<= v_hdr.tcp.dstPort_10 65536) (<= 0 v_hdr.tcp.dstPort_10))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[] 92079#L580_accept_S3 [5071] L580_accept_S3-->L581_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_25}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 92080#L581_accept_S3 [5784] L581_accept_S3-->L582_accept_S3: Formula: (and (<= 0 v_hdr.tcp.seqNo_23) (<= v_hdr.tcp.seqNo_23 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_23}  AuxVars[]  AssignedVars[] 92477#L582_accept_S3 [5932] L582_accept_S3-->L583_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 91752#L583_accept_S3 [4746] L583_accept_S3-->L584_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ackNo_13) (<= v_hdr.tcp.ackNo_13 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[] 91753#L584_accept_S3 [5638] L584_accept_S3-->L585_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 90768#L585_accept_S3 [4066] L585_accept_S3-->L586_accept_S3: Formula: (and (<= 0 v_hdr.tcp.dataOffset_18) (<= v_hdr.tcp.dataOffset_18 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_18}  AuxVars[]  AssignedVars[] 90769#L586_accept_S3 [4205] L586_accept_S3-->L587_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[hdr.tcp.res] 91024#L587_accept_S3 [5111] L587_accept_S3-->L588_accept_S3: Formula: (and (<= 0 v_hdr.tcp.res_12) (<= v_hdr.tcp.res_12 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_12}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[] 92117#L588_accept_S3 [5741] L588_accept_S3-->L589_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_13}  AuxVars[]  AssignedVars[hdr.tcp.cwr] 92438#L589_accept_S3 [5652] L589_accept_S3-->L590_accept_S3: Formula: (and (<= v_hdr.tcp.cwr_10 2) (<= 0 v_hdr.tcp.cwr_10))  InVars {hdr.tcp.cwr=v_hdr.tcp.cwr_10}  OutVars{hdr.tcp.cwr=v_hdr.tcp.cwr_10}  AuxVars[]  AssignedVars[] 92306#L590_accept_S3 [5380] L590_accept_S3-->L591_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_10}  AuxVars[]  AssignedVars[hdr.tcp.ece] 92307#L591_accept_S3 [5679] L591_accept_S3-->L592_accept_S3: Formula: (and (<= 0 v_hdr.tcp.ece_13) (<= v_hdr.tcp.ece_13 2))  InVars {hdr.tcp.ece=v_hdr.tcp.ece_13}  OutVars{hdr.tcp.ece=v_hdr.tcp.ece_13}  AuxVars[]  AssignedVars[] 90924#L592_accept_S3 [4148] L592_accept_S3-->L593_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_10}  AuxVars[]  AssignedVars[hdr.tcp.urg] 90925#L593_accept_S3 [5063] L593_accept_S3-->L594_accept_S3: Formula: (and (<= v_hdr.tcp.urg_12 2) (<= 0 v_hdr.tcp.urg_12))  InVars {hdr.tcp.urg=v_hdr.tcp.urg_12}  OutVars{hdr.tcp.urg=v_hdr.tcp.urg_12}  AuxVars[]  AssignedVars[] 90328#L594_accept_S3 [3856] L594_accept_S3-->L595_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_10}  AuxVars[]  AssignedVars[hdr.tcp.ack] 90329#L595_accept_S3 [5272] L595_accept_S3-->L596_accept_S3: Formula: (and (<= v_hdr.tcp.ack_13 2) (<= 0 v_hdr.tcp.ack_13))  InVars {hdr.tcp.ack=v_hdr.tcp.ack_13}  OutVars{hdr.tcp.ack=v_hdr.tcp.ack_13}  AuxVars[]  AssignedVars[] 91205#L596_accept_S3 [4333] L596_accept_S3-->L597_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_10}  AuxVars[]  AssignedVars[hdr.tcp.psh] 91206#L597_accept_S3 [5683] L597_accept_S3-->L598_accept_S3: Formula: (and (<= 0 v_hdr.tcp.psh_12) (<= v_hdr.tcp.psh_12 2))  InVars {hdr.tcp.psh=v_hdr.tcp.psh_12}  OutVars{hdr.tcp.psh=v_hdr.tcp.psh_12}  AuxVars[]  AssignedVars[] 91872#L598_accept_S3 [4852] L598_accept_S3-->L599_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_13}  AuxVars[]  AssignedVars[hdr.tcp.rst] 91873#L599_accept_S3 [5707] L599_accept_S3-->L600_accept_S3: Formula: (and (<= 0 v_hdr.tcp.rst_11) (<= v_hdr.tcp.rst_11 2))  InVars {hdr.tcp.rst=v_hdr.tcp.rst_11}  OutVars{hdr.tcp.rst=v_hdr.tcp.rst_11}  AuxVars[]  AssignedVars[] 92023#L600_accept_S3 [5003] L600_accept_S3-->L601_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_19}  AuxVars[]  AssignedVars[hdr.tcp.syn] 91058#L601_accept_S3 [4229] L601_accept_S3-->L602_accept_S3: Formula: (and (<= v_hdr.tcp.syn_18 2) (<= 0 v_hdr.tcp.syn_18))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_18}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_18}  AuxVars[]  AssignedVars[] 90613#L602_accept_S3 [3990] L602_accept_S3-->L603_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_37}  AuxVars[]  AssignedVars[hdr.tcp.fin] 90614#L603_accept_S3 [4053] L603_accept_S3-->L604_accept_S3: Formula: (and (<= v_hdr.tcp.fin_36 2) (<= 0 v_hdr.tcp.fin_36))  InVars {hdr.tcp.fin=v_hdr.tcp.fin_36}  OutVars{hdr.tcp.fin=v_hdr.tcp.fin_36}  AuxVars[]  AssignedVars[] 90740#L604_accept_S3 [4266] L604_accept_S3-->L605_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 91099#L605_accept_S3 [4255] L605_accept_S3-->L606_accept_S3: Formula: (and (<= v_hdr.tcp.window_11 65536) (<= 0 v_hdr.tcp.window_11))  InVars {hdr.tcp.window=v_hdr.tcp.window_11}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[] 91100#L606_accept_S3 [4506] L606_accept_S3-->L607_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 91431#L607_accept_S3 [5066] L607_accept_S3-->L608_accept_S3: Formula: (and (<= 0 v_hdr.tcp.checksum_13) (<= v_hdr.tcp.checksum_13 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_13}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[] 92077#L608_accept_S3 [5424] L608_accept_S3-->L609_accept_S3: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 91212#L609_accept_S3 [4339] L609_accept_S3-->L610_accept_S3: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_13) (<= v_hdr.tcp.urgentPtr_13 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[] 91213#L610_accept_S3 [4679] L610_accept_S3-->L611_accept_S3: Formula: (= v_meta.id_293 0)  InVars {}  OutVars{meta.id=v_meta.id_293}  AuxVars[]  AssignedVars[meta.id] 91506#L611_accept_S3 [4558] L611_accept_S3-->L612_accept_S3: Formula: (= v_meta.use_blink_33 0)  InVars {}  OutVars{meta.use_blink=v_meta.use_blink_33}  AuxVars[]  AssignedVars[meta.use_blink] 91507#L612_accept_S3 [5403] L612_accept_S3-->L613_accept_S3: Formula: (= v_meta.is_retransmission_31 0)  InVars {}  OutVars{meta.is_retransmission=v_meta.is_retransmission_31}  AuxVars[]  AssignedVars[meta.is_retransmission] 92321#L613_accept_S3 [5419] L613_accept_S3-->L614_accept_S3: Formula: (= v_meta.next_hop_port_57 0)  InVars {}  OutVars{meta.next_hop_port=v_meta.next_hop_port_57}  AuxVars[]  AssignedVars[meta.next_hop_port] 91066#L614_accept_S3 [4234] L614_accept_S3-->L615_accept_S3: Formula: (= v_meta.tcp_payload_len_38 0)  InVars {}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_38}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 91067#L615_accept_S3 [5681] L615_accept_S3-->L616_accept_S3: Formula: (= 0 v_meta.ingress_timestamp_second_34)  InVars {}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_34}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 92443#L616_accept_S3 [5855] L616_accept_S3-->L617_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_125 0)  InVars {}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_125}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 90293#L617_accept_S3 [3839] L617_accept_S3-->L618_accept_S3: Formula: (= v_meta.flowselector_cellid_50 0)  InVars {}  OutVars{meta.flowselector_cellid=v_meta.flowselector_cellid_50}  AuxVars[]  AssignedVars[meta.flowselector_cellid] 90294#L618_accept_S3 [5499] L618_accept_S3-->L619_accept_S3: Formula: (= v_meta.selected_28 0)  InVars {}  OutVars{meta.selected=v_meta.selected_28}  AuxVars[]  AssignedVars[meta.selected] 91733#L619_accept_S3 [4731] L619_accept_S3-->L620_accept_S3: Formula: (= v_meta.bgp_ngh_type_17 0)  InVars {}  OutVars{meta.bgp_ngh_type=v_meta.bgp_ngh_type_17}  AuxVars[]  AssignedVars[meta.bgp_ngh_type] 90726#L620_accept_S3 [4044] L620_accept_S3-->L621_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_11}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.id] 90727#L621_accept_S3 [5135] L621_accept_S3-->L622_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.use_blink] 90526#L622_accept_S3 [3952] L622_accept_S3-->L623_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_10}  AuxVars[]  AssignedVars[meta_fwtable_0.set_meta.default_nexthop_port] 90527#L623_accept_S3 [5588] L623_accept_S3-->L624_accept_S3: Formula: true  InVars {}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_12}  AuxVars[]  AssignedVars[meta_fwtable_0.action_run] 91606#L624_accept_S3 [4633] L624_accept_S3-->L625_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.set_bgp_tag.neighbor_bgp_type=v_bgp_tag_0.set_bgp_tag.neighbor_bgp_type_11}  AuxVars[]  AssignedVars[bgp_tag_0.set_bgp_tag.neighbor_bgp_type] 91607#L625_accept_S3 [5828] L625_accept_S3-->L626_accept_S3: Formula: true  InVars {}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_14}  AuxVars[]  AssignedVars[bgp_tag_0.action_run] 91683#L626_accept_S3 [4694] L626_accept_S3-->L627_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.port=v_send_0.set_nh.port_12}  AuxVars[]  AssignedVars[send_0.set_nh.port] 91684#L627_accept_S3 [4945] L627_accept_S3-->L628_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.smac=v_send_0.set_nh.smac_11}  AuxVars[]  AssignedVars[send_0.set_nh.smac] 91759#L628_accept_S3 [4752] L628_accept_S3-->L629_accept_S3: Formula: true  InVars {}  OutVars{send_0.set_nh.dmac=v_send_0.set_nh.dmac_11}  AuxVars[]  AssignedVars[send_0.set_nh.dmac] 91656#L629_accept_S3 [4676] L629_accept_S3-->havocProcedureFINAL_accept_S3: Formula: true  InVars {}  OutVars{send_0.action_run=v_send_0.action_run_14}  AuxVars[]  AssignedVars[send_0.action_run] 90518#havocProcedureFINAL_accept_S3 [3949] havocProcedureFINAL_accept_S3-->havocProcedureEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90519#havocProcedureEXIT_accept_S3 >[6048] havocProcedureEXIT_accept_S3-->L1089-D238: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90251#L1089-D238 [3822] L1089-D238-->L1089_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90253#L1089_accept_S3 [3942] L1089_accept_S3-->L1089_accept_S3-D139: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90498#L1089_accept_S3-D139 [4415] L1089_accept_S3-D139-->_parser_ParserImplENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91126#_parser_ParserImplENTRY_accept_S3 [5758] _parser_ParserImplENTRY_accept_S3-->_parser_ParserImplENTRY_accept_S3-D163: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 91897#_parser_ParserImplENTRY_accept_S3-D163 [4876] _parser_ParserImplENTRY_accept_S3-D163-->startENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91792#startENTRY_accept_S3 [4784] startENTRY_accept_S3-->L1240_accept_S3: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 91793#L1240_accept_S3 [5463] L1240_accept_S3-->L1241_accept_S3: Formula: (= v_hdr.ethernet.etherType_17 2048)  InVars {hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  OutVars{hdr.ethernet.etherType=v_hdr.ethernet.etherType_17}  AuxVars[]  AssignedVars[] 90598#L1241_accept_S3 [4509] L1241_accept_S3-->L1241_accept_S3-D37: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90779#L1241_accept_S3-D37 [4073] L1241_accept_S3-D37-->parse_ipv4ENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90597#parse_ipv4ENTRY_accept_S3 [3984] parse_ipv4ENTRY_accept_S3-->L1169_accept_S3: Formula: v_hdr.ipv4.valid_27  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_27}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 90599#L1169_accept_S3 [5902] L1169_accept_S3-->L1170_accept_S3: Formula: (= v_hdr.ipv4.protocol_19 6)  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_19}  AuxVars[]  AssignedVars[] 90324#L1170_accept_S3 [5641] L1170_accept_S3-->L1170_accept_S3-D148: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92423#L1170_accept_S3-D148 [5614] L1170_accept_S3-D148-->parse_tcpENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91878#parse_tcpENTRY_accept_S3 [4861] parse_tcpENTRY_accept_S3-->L1179_accept_S3: Formula: v_hdr.tcp.valid_42  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_42}  AuxVars[]  AssignedVars[hdr.tcp.valid] 90323#L1179_accept_S3 [3854] L1179_accept_S3-->L1179_accept_S3-D55: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90325#L1179_accept_S3-D55 [5159] L1179_accept_S3-D55-->acceptFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91800#acceptFINAL_accept_S3 [4791] acceptFINAL_accept_S3-->acceptEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91801#acceptEXIT_accept_S3 >[6448] acceptEXIT_accept_S3-->parse_tcpFINAL-D379: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91627#parse_tcpFINAL-D379 [4644] parse_tcpFINAL-D379-->parse_tcpFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91033#parse_tcpFINAL_accept_S3 [4210] parse_tcpFINAL_accept_S3-->parse_tcpEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91034#parse_tcpEXIT_accept_S3 >[6293] parse_tcpEXIT_accept_S3-->L1169-1-D439: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92383#L1169-1-D439 [5521] L1169-1-D439-->L1169-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92384#L1169-1_accept_S3 [5826] L1169-1_accept_S3-->parse_ipv4EXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92173#parse_ipv4EXIT_accept_S3 >[6177] parse_ipv4EXIT_accept_S3-->L1240-1-D448: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91125#L1240-1-D448 [4269] L1240-1-D448-->L1240-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91127#L1240-1_accept_S3 [4837] L1240-1_accept_S3-->startEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91820#startEXIT_accept_S3 >[6186] startEXIT_accept_S3-->_parser_ParserImplFINAL-D427: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91031#_parser_ParserImplFINAL-D427 [4208] _parser_ParserImplFINAL-D427-->_parser_ParserImplFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91032#_parser_ParserImplFINAL_accept_S3 [4708] _parser_ParserImplFINAL_accept_S3-->_parser_ParserImplEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91246#_parser_ParserImplEXIT_accept_S3 >[6224] _parser_ParserImplEXIT_accept_S3-->L1090-D343: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91247#L1090-D343 [4735] L1090-D343-->L1090_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90675#L1090_accept_S3 [5061] L1090_accept_S3-->L1090_accept_S3-D115: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90674#L1090_accept_S3-D115 [4019] L1090_accept_S3-D115-->verifyChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90676#verifyChecksumFINAL_accept_S3 [5325] verifyChecksumFINAL_accept_S3-->verifyChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91895#verifyChecksumEXIT_accept_S3 >[6015] verifyChecksumEXIT_accept_S3-->L1091-D340: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90659#L1091-D340 [4013] L1091-D340-->L1091_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90259#L1091_accept_S3 [5879] L1091_accept_S3-->L1091_accept_S3-D220: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90741#L1091_accept_S3-D220 [4054] L1091_accept_S3-D220-->ingressENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90742#ingressENTRY_accept_S3 [5712] ingressENTRY_accept_S3-->L638_accept_S3: Formula: (= (select v_timestamp_reference_0_13 0) v_ts_tmp_0_18)  InVars {timestamp_reference_0=v_timestamp_reference_0_13}  OutVars{timestamp_reference_0=v_timestamp_reference_0_13, ts_tmp_0=v_ts_tmp_0_18}  AuxVars[]  AssignedVars[ts_tmp_0] 91975#L638_accept_S3 [4955] L638_accept_S3-->L638-1_accept_S3: Formula: (not (< 500000000 (mod (+ (mod v_standard_metadata.ingress_global_timestamp_24 281474976710656) (* 281474976710655 (mod v_ts_tmp_0_27 281474976710656))) 281474976710656)))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_24, ts_tmp_0=v_ts_tmp_0_27}  AuxVars[]  AssignedVars[] 91728#L638-1_accept_S3 [5843] L638-1_accept_S3-->L644_accept_S3: Formula: (= (select v_timestamp_reference_0_18 0) v_ts_tmp_0_29)  InVars {timestamp_reference_0=v_timestamp_reference_0_18}  OutVars{timestamp_reference_0=v_timestamp_reference_0_18, ts_tmp_0=v_ts_tmp_0_29}  AuxVars[]  AssignedVars[ts_tmp_0] 90463#L644_accept_S3 [3926] L644_accept_S3-->L645_accept_S3: Formula: (= (mod (div (let ((.cse0 (mod v_standard_metadata.ingress_global_timestamp_16 281474976710656)) (.cse1 (mod v_ts_tmp_0_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ .cse0 (* .cse1 1048575)) 1048576)))) 1048576) 512) v_meta.ingress_timestamp_second_19)  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  OutVars{meta.ingress_timestamp_second=v_meta.ingress_timestamp_second_19, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_16, ts_tmp_0=v_ts_tmp_0_15}  AuxVars[]  AssignedVars[meta.ingress_timestamp_second] 90464#L645_accept_S3 [4004] L645_accept_S3-->L646_accept_S3: Formula: (= v_meta.ingress_timestamp_millisecond_46 (mod (div (let ((.cse1 (mod v_ts_tmp_0_14 281474976710656)) (.cse0 (mod v_standard_metadata.ingress_global_timestamp_15 281474976710656))) (+ (mod (+ .cse0 (* 281474976710655 .cse1)) 281474976710656) (* (- 1) (mod (+ (* 1023 .cse1) .cse0) 1024)))) 1024) 524288))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_46, standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_15, ts_tmp_0=v_ts_tmp_0_14}  AuxVars[]  AssignedVars[meta.ingress_timestamp_millisecond] 90344#L646_accept_S3 [3864] L646_accept_S3-->L646_accept_S3-D184: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90345#L646_accept_S3-D184 [5541] L646_accept_S3-D184-->bgp_tag_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91622#bgp_tag_0.applyENTRY_accept_S3 [4640] bgp_tag_0.applyENTRY_accept_S3-->L427_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_16 bgp_tag_0.action.set_bgp_tag))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_16}  AuxVars[]  AssignedVars[] 91623#L427_accept_S3 [5058] L427_accept_S3-->L427-1_accept_S3: Formula: (not (= v_bgp_tag_0.action_run_24 bgp_tag_0.action.NoAction_0))  InVars {bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  OutVars{bgp_tag_0.action_run=v_bgp_tag_0.action_run_24}  AuxVars[]  AssignedVars[] 90798#L427-1_accept_S3 [5225] L427-1_accept_S3-->bgp_tag_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92190#bgp_tag_0.applyEXIT_accept_S3 >[6550] bgp_tag_0.applyEXIT_accept_S3-->L646-1-D436: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92191#L646-1-D436 [5248] L646-1-D436-->L646-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90310#L646-1_accept_S3 [5711] L646-1_accept_S3-->L646-1_accept_S3-D7: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90778#L646-1_accept_S3-D7 [4072] L646-1_accept_S3-D7-->meta_fwtable_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90309#meta_fwtable_0.applyENTRY_accept_S3 [3846] meta_fwtable_0.applyENTRY_accept_S3-->L1121_accept_S3: Formula: (= v_meta_fwtable_0.action_run_25 meta_fwtable_0.action.set_meta)  InVars {meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  OutVars{meta_fwtable_0.action_run=v_meta_fwtable_0.action_run_25}  AuxVars[]  AssignedVars[] 90311#L1121_accept_S3 [3948] L1121_accept_S3-->L1121_accept_S3-D235: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink]< 90520#L1121_accept_S3-D235 [4357] L1121_accept_S3-D235-->set_metaENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91232#set_metaENTRY_accept_S3 [4360] set_metaENTRY_accept_S3-->L1219_accept_S3: Formula: (= v_set_meta_id_3 v_meta.id_299)  InVars {set_meta_id=v_set_meta_id_3}  OutVars{meta.id=v_meta.id_299, set_meta_id=v_set_meta_id_3}  AuxVars[]  AssignedVars[meta.id] 90367#L1219_accept_S3 [3877] L1219_accept_S3-->L1220_accept_S3: Formula: (= v_set_meta_use_blink_4 v_meta.use_blink_40)  InVars {set_meta_use_blink=v_set_meta_use_blink_4}  OutVars{meta.use_blink=v_meta.use_blink_40, set_meta_use_blink=v_set_meta_use_blink_4}  AuxVars[]  AssignedVars[meta.use_blink] 90368#L1220_accept_S3 [4851] L1220_accept_S3-->set_metaFINAL_accept_S3: Formula: (= v_meta.next_hop_port_60 v_set_meta_default_nexthop_port_4)  InVars {set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  OutVars{meta.next_hop_port=v_meta.next_hop_port_60, set_meta_default_nexthop_port=v_set_meta_default_nexthop_port_4}  AuxVars[]  AssignedVars[meta.next_hop_port] 91871#set_metaFINAL_accept_S3 [5523] set_metaFINAL_accept_S3-->set_metaEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92382#set_metaEXIT_accept_S3 >[6292] set_metaEXIT_accept_S3-->L1123-1-D409: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_set_meta_idInParam_1 v_meta_fwtable_0.set_meta.id_9) (= v_set_meta_use_blinkInParam_1 v_meta_fwtable_0.set_meta.use_blink_9) (= v_meta_fwtable_0.set_meta.default_nexthop_port_9 v_set_meta_default_nexthop_portInParam_1))  InVars {meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  OutVars{meta_fwtable_0.set_meta.use_blink=v_meta_fwtable_0.set_meta.use_blink_9, meta_fwtable_0.set_meta.default_nexthop_port=v_meta_fwtable_0.set_meta.default_nexthop_port_9, set_meta_default_nexthop_port=v_set_meta_default_nexthop_portInParam_1, set_meta_id=v_set_meta_idInParam_1, set_meta_use_blink=v_set_meta_use_blinkInParam_1, meta_fwtable_0.set_meta.id=v_meta_fwtable_0.set_meta.id_9}  AuxVars[]  AssignedVars[set_meta_default_nexthop_port, set_meta_id, set_meta_use_blink] 92003#L1123-1-D409 [4988] L1123-1-D409-->L1123-1_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91688#L1123-1_accept_S3 [4697] L1123-1_accept_S3-->meta_fwtable_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91628#meta_fwtable_0.applyEXIT_accept_S3 >[6301] meta_fwtable_0.applyEXIT_accept_S3-->L647-D391: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91629#L647-D391 [5664] L647-D391-->L647_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90710#L647_accept_S3 [4037] L647_accept_S3-->L670_accept_S3: Formula: (or (not v_hdr.ipv4.valid_20) (not v_hdr.tcp.valid_30) (not (= v_hdr.ipv4.ttl_23 1)))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_30, hdr.ipv4.valid=v_hdr.ipv4.valid_20, hdr.ipv4.ttl=v_hdr.ipv4.ttl_23}  AuxVars[]  AssignedVars[] 90711#L670_accept_S3 [4524] L670_accept_S3-->L671_accept_S3: Formula: (= (select v_threshold_registers_0_5 v_meta.id_166) v_threshold_tmp_0_14)  InVars {meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5}  OutVars{meta.id=v_meta.id_166, threshold_registers_0=v_threshold_registers_0_5, threshold_tmp_0=v_threshold_tmp_0_14}  AuxVars[]  AssignedVars[threshold_tmp_0] 91452#L671_accept_S3 [4906] L671_accept_S3-->L672_accept_S3: Formula: (and v_hdr.tcp.valid_23 (= v_meta.use_blink_28 1))  InVars {hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_23, meta.use_blink=v_meta.use_blink_28}  AuxVars[]  AssignedVars[] 91935#L672_accept_S3 [5337] L672_accept_S3-->L676_accept_S3: Formula: (and (not (= v_hdr.tcp.fin_28 1)) (not (= v_hdr.tcp.syn_12 1)))  InVars {hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  OutVars{hdr.tcp.syn=v_hdr.tcp.syn_12, hdr.tcp.fin=v_hdr.tcp.fin_28}  AuxVars[]  AssignedVars[] 91230#L676_accept_S3 [4356] L676_accept_S3-->L672-2_accept_S3: Formula: (= v_meta.tcp_payload_len_34 (mod (mod v_hdr.ipv4.totalLen_11 65536) 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_11, meta.tcp_payload_len=v_meta.tcp_payload_len_34}  AuxVars[]  AssignedVars[meta.tcp_payload_len] 91231#L672-2_accept_S3 [5775] L672-2_accept_S3-->L671-1_accept_S3: Formula: (not (< 0 v_meta.tcp_payload_len_29))  InVars {meta.tcp_payload_len=v_meta.tcp_payload_len_29}  OutVars{meta.tcp_payload_len=v_meta.tcp_payload_len_29}  AuxVars[]  AssignedVars[] 91956#L671-1_accept_S3 [5565] L671-1_accept_S3-->L979_accept_S3: Formula: (= v_meta.use_blink_22 1)  InVars {meta.use_blink=v_meta.use_blink_22}  OutVars{meta.use_blink=v_meta.use_blink_22}  AuxVars[]  AssignedVars[] 92342#L979_accept_S3 [5437] L979_accept_S3-->L981_accept_S3: Formula: (= (select v_nh_avaibility_1_17 v_meta.id_213) v_nh_avaibility_1_tmp_0_15)  InVars {meta.id=v_meta.id_213, nh_avaibility_1=v_nh_avaibility_1_17}  OutVars{meta.id=v_meta.id_213, nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_15, nh_avaibility_1=v_nh_avaibility_1_17}  AuxVars[]  AssignedVars[nh_avaibility_1_tmp_0] 92343#L981_accept_S3 [5695] L981_accept_S3-->L983_accept_S3: Formula: (= (select v_nh_avaibility_2_14 v_meta.id_257) v_nh_avaibility_2_tmp_0_44)  InVars {nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257}  OutVars{nh_avaibility_2=v_nh_avaibility_2_14, meta.id=v_meta.id_257, nh_avaibility_2_tmp_0=v_nh_avaibility_2_tmp_0_44}  AuxVars[]  AssignedVars[nh_avaibility_2_tmp_0] 92091#L983_accept_S3 [5089] L983_accept_S3-->L985_accept_S3: Formula: (= (select v_nh_avaibility_3_15 v_meta.id_231) v_nh_avaibility_3_tmp_0_31)  InVars {meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15}  OutVars{meta.id=v_meta.id_231, nh_avaibility_3=v_nh_avaibility_3_15, nh_avaibility_3_tmp_0=v_nh_avaibility_3_tmp_0_31}  AuxVars[]  AssignedVars[nh_avaibility_3_tmp_0] 92092#L985_accept_S3 [5300] L985_accept_S3-->L986_accept_S3: Formula: (= (select v_rerouting_ts_0_15 v_meta.id_197) v_rerouting_ts_tmp_0_14)  InVars {meta.id=v_meta.id_197, rerouting_ts_0=v_rerouting_ts_0_15}  OutVars{meta.id=v_meta.id_197, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_14, rerouting_ts_0=v_rerouting_ts_0_15}  AuxVars[]  AssignedVars[rerouting_ts_tmp_0] 90926#L986_accept_S3 [4151] L986_accept_S3-->L1047_accept_S3: Formula: (or (not (< (mod (+ (* 524287 (mod v_rerouting_ts_tmp_0_24 524288)) (mod v_meta.ingress_timestamp_millisecond_115 524288)) 524288) 976)) (not (< 0 v_rerouting_ts_tmp_0_24)) (not (= v_meta.selected_25 1)))  InVars {meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  OutVars{meta.selected=v_meta.selected_25, meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_115, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_24}  AuxVars[]  AssignedVars[] 90927#L1047_accept_S3 [5022] L1047_accept_S3-->L1049_accept_S3: Formula: (= v_nh_avaibility_1_tmp_0_20 0)  InVars {nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  OutVars{nh_avaibility_1_tmp_0=v_nh_avaibility_1_tmp_0_20}  AuxVars[]  AssignedVars[] 92038#L1049_accept_S3 [5387] L1049_accept_S3-->L1057-2_accept_S3: Formula: (= (select v_next_hops_port_0_15 (mod (* (mod v_meta.id_169 4294967296) 3) 4294967296)) v_meta.next_hop_port_27)  InVars {next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169}  OutVars{next_hops_port_0=v_next_hops_port_0_15, meta.id=v_meta.id_169, meta.next_hop_port=v_meta.next_hop_port_27}  AuxVars[]  AssignedVars[meta.next_hop_port] 91081#L1057-2_accept_S3 [4279] L1057-2_accept_S3-->L977_accept_S3: Formula: (or (not (< 0 v_rerouting_ts_tmp_0_16)) (not (< 976 (mod (+ (* (mod v_rerouting_ts_tmp_0_16 524288) 524287) (mod v_meta.ingress_timestamp_millisecond_89 524288)) 524288))))  InVars {meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  OutVars{meta.ingress_timestamp_millisecond=v_meta.ingress_timestamp_millisecond_89, rerouting_ts_tmp_0=v_rerouting_ts_tmp_0_16}  AuxVars[]  AssignedVars[] 91139#L977_accept_S3 [5552] L977_accept_S3-->L977_accept_S3-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92188#L977_accept_S3-D79 [5191] L977_accept_S3-D79-->send_0.applyENTRY_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92186#send_0.applyENTRY_accept_S3 [5185] send_0.applyENTRY_accept_S3-->L1198_accept_S3: Formula: (not (= v_send_0.action_run_22 send_0.action.set_nh))  InVars {send_0.action_run=v_send_0.action_run_22}  OutVars{send_0.action_run=v_send_0.action_run_22}  AuxVars[]  AssignedVars[] 91176#L1198_accept_S3 [4304] L1198_accept_S3-->L1198-1_accept_S3: Formula: (not (= send_0.action._drop_2 v_send_0.action_run_18))  InVars {send_0.action_run=v_send_0.action_run_18}  OutVars{send_0.action_run=v_send_0.action_run_18}  AuxVars[]  AssignedVars[] 91177#L1198-1_accept_S3 [5356] L1198-1_accept_S3-->send_0.applyEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92294#send_0.applyEXIT_accept_S3 >[6372] send_0.applyEXIT_accept_S3-->L1083-D247: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90956#L1083-D247 [4165] L1083-D247-->L1083_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90957#L1083_accept_S3 [5643] L1083_accept_S3-->ingressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91707#ingressEXIT_accept_S3 >[5979] ingressEXIT_accept_S3-->L1092-D451: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91663#L1092-D451 [4683] L1092-D451-->L1092_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91129#L1092_accept_S3 [5405] L1092_accept_S3-->L1092_accept_S3-D10: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 92255#L1092_accept_S3-D10 [5290] L1092_accept_S3-D10-->egressFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92256#egressFINAL_accept_S3 [4232] egressFINAL_accept_S3-->egressEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91128#egressEXIT_accept_S3 >[6035] egressEXIT_accept_S3-->L1093-D460: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91130#L1093-D460 [5660] L1093-D460-->L1093_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90822#L1093_accept_S3 [4096] L1093_accept_S3-->L1093_accept_S3-D154: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 90823#L1093_accept_S3-D154 [5438] L1093_accept_S3-D154-->computeChecksumFINAL_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92346#computeChecksumFINAL_accept_S3 [4416] computeChecksumFINAL_accept_S3-->computeChecksumEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91995#computeChecksumEXIT_accept_S3 >[6199] computeChecksumEXIT_accept_S3-->L1094-D244: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90516#L1094-D244 [3947] L1094-D244-->L1094_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 90517#L1094_accept_S3 [4341] L1094_accept_S3-->L1096_accept_S3: Formula: (not v_forward_26)  InVars {forward=v_forward_26}  OutVars{forward=v_forward_26}  AuxVars[]  AssignedVars[] 91215#L1096_accept_S3 [4963] L1096_accept_S3-->L1095-1_accept_S3: Formula: v_drop_42  InVars {}  OutVars{drop=v_drop_42}  AuxVars[]  AssignedVars[drop] 90622#L1095-1_accept_S3 [3996] L1095-1_accept_S3-->L1099_accept_S3: Formula: (let ((.cse0 (< (select v_threshold_registers_0_8 v__p4ltl_free_a_5) (select v_sw_sum_0_52 v__p4ltl_free_a_5)))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  OutVars{_p4ltl_0=v__p4ltl_0_7, sw_sum_0=v_sw_sum_0_52, threshold_registers_0=v_threshold_registers_0_8, _p4ltl_free_a=v__p4ltl_free_a_5}  AuxVars[]  AssignedVars[_p4ltl_0] 90623#L1099_accept_S3 [5020] L1099_accept_S3-->L1100_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_23 v__p4ltl_free_a_11) 1))) (or (and v__p4ltl_1_8 .cse0) (and (not .cse0) (not v__p4ltl_1_8))))  InVars {nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  OutVars{_p4ltl_1=v__p4ltl_1_8, nh_avaibility_1=v_nh_avaibility_1_23, _p4ltl_free_a=v__p4ltl_free_a_11}  AuxVars[]  AssignedVars[_p4ltl_1] 91659#L1100_accept_S3 [4677] L1100_accept_S3-->L1101_accept_S3: Formula: (let ((.cse0 (= v__p4ltl_free_a_13 v_meta.id_297))) (or (and (not v__p4ltl_2_10) (not .cse0)) (and v__p4ltl_2_10 .cse0)))  InVars {meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  OutVars{_p4ltl_2=v__p4ltl_2_10, meta.id=v_meta.id_297, _p4ltl_free_a=v__p4ltl_free_a_13}  AuxVars[]  AssignedVars[_p4ltl_2] 91660#L1101_accept_S3 [4842] L1101_accept_S3-->L1102_accept_S3: Formula: (let ((.cse0 (= (select v_nh_avaibility_1_26 v__p4ltl_free_a_16) 0))) (or (and v__p4ltl_3_9 .cse0) (and (not v__p4ltl_3_9) (not .cse0))))  InVars {nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  OutVars{_p4ltl_3=v__p4ltl_3_9, nh_avaibility_1=v_nh_avaibility_1_26, _p4ltl_free_a=v__p4ltl_free_a_16}  AuxVars[]  AssignedVars[_p4ltl_3] 91866#L1102_accept_S3 [5646] L1102_accept_S3-->L1103_accept_S3: Formula: (let ((.cse0 (= v_hdr.ipv4.ttl_33 1))) (or (and v__p4ltl_4_11 (not .cse0)) (and (not v__p4ltl_4_11) .cse0)))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  OutVars{_p4ltl_4=v__p4ltl_4_11, hdr.ipv4.ttl=v_hdr.ipv4.ttl_33}  AuxVars[]  AssignedVars[_p4ltl_4] 91861#L1103_accept_S3 [4834] L1103_accept_S3-->mainFINAL_accept_S3: Formula: (let ((.cse0 (= v_meta.use_blink_37 1))) (or (and (not .cse0) (not v__p4ltl_5_12)) (and v__p4ltl_5_12 .cse0)))  InVars {meta.use_blink=v_meta.use_blink_37}  OutVars{meta.use_blink=v_meta.use_blink_37, _p4ltl_5=v__p4ltl_5_12}  AuxVars[]  AssignedVars[_p4ltl_5] 91862#mainFINAL_accept_S3 [5007] mainFINAL_accept_S3-->mainEXIT_accept_S3: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91883#mainEXIT_accept_S3 >[6606] mainEXIT_accept_S3-->L1109-1-D268: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 91884#L1109-1-D268 [5573] L1109-1-D268-->L1109-1_accept_S3: Formula: (and v__p4ltl_5_6 v__p4ltl_4_6 v_hdr.tcp.valid_36)  InVars {hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_36, _p4ltl_4=v__p4ltl_4_6, _p4ltl_5=v__p4ltl_5_6}  AuxVars[]  AssignedVars[] 91003#L1109-1_accept_S3 
[2023-01-16 04:11:49,280 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-01-16 04:11:49,281 INFO  L85        PathProgramCache]: Analyzing trace with hash -972945889, now seen corresponding path program 1 times
[2023-01-16 04:11:49,281 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-01-16 04:11:49,281 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1720198298]
[2023-01-16 04:11:49,281 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-01-16 04:11:49,281 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-01-16 04:11:49,319 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,535 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:11:49,543 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,625 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:11:49,629 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,639 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:11:49,640 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,644 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:11:49,645 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,649 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:11:49,649 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,653 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:11:49,653 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,654 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:11:49,654 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,655 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:11:49,655 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,707 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:11:49,711 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,719 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:11:49,719 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,726 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:11:49,726 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,732 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:11:49,733 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,741 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 42
[2023-01-16 04:11:49,741 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,742 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 235
[2023-01-16 04:11:49,743 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,744 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 240
[2023-01-16 04:11:49,745 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,748 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 260
[2023-01-16 04:11:49,764 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,806 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:11:49,811 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,820 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 147
[2023-01-16 04:11:49,821 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,822 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-01-16 04:11:49,823 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,824 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:11:49,824 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,825 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-01-16 04:11:49,825 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,825 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:11:49,826 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,826 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 177
[2023-01-16 04:11:49,827 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,828 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 182
[2023-01-16 04:11:49,835 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,864 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 6
[2023-01-16 04:11:49,865 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,866 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 13
[2023-01-16 04:11:49,867 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,868 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-01-16 04:11:49,869 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,879 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 55
[2023-01-16 04:11:49,880 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,890 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 61
[2023-01-16 04:11:49,891 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,900 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 67
[2023-01-16 04:11:49,901 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,911 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 73
[2023-01-16 04:11:49,912 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,913 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 89
[2023-01-16 04:11:49,915 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,916 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 282
[2023-01-16 04:11:49,917 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,918 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 287
[2023-01-16 04:11:49,919 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-01-16 04:11:49,921 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-01-16 04:11:49,921 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-01-16 04:11:49,921 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1720198298]
[2023-01-16 04:11:49,921 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1720198298] provided 1 perfect and 0 imperfect interpolant sequences
[2023-01-16 04:11:49,921 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-01-16 04:11:49,921 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [21] imperfect sequences [] total 21
[2023-01-16 04:11:49,922 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [759434118]
[2023-01-16 04:11:49,922 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-01-16 04:11:49,922 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-01-16 04:11:49,922 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-01-16 04:11:49,923 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 22 interpolants.
[2023-01-16 04:11:49,923 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=79, Invalid=383, Unknown=0, NotChecked=0, Total=462
[2023-01-16 04:11:49,923 INFO  L87              Difference]: Start difference. First operand 3952 states and 4511 transitions. cyclomatic complexity: 562 Second operand  has 22 states, 21 states have (on average 23.571428571428573) internal successors, (495), 7 states have internal predecessors, (495), 2 states have call successors, (35), 16 states have call predecessors, (35), 3 states have return successors, (34), 3 states have call predecessors, (34), 2 states have call successors, (34)
[2023-01-16 04:13:26,288 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-01-16 04:13:26,288 INFO  L93              Difference]: Finished difference Result 10136 states and 12684 transitions.
[2023-01-16 04:13:26,288 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 189 states. 
[2023-01-16 04:13:26,289 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 10136 states and 12684 transitions.
[2023-01-16 04:13:26,313 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2023-01-16 04:13:26,313 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 10136 states to 0 states and 0 transitions.
[2023-01-16 04:13:26,313 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2023-01-16 04:13:26,314 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2023-01-16 04:13:26,314 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2023-01-16 04:13:26,314 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-01-16 04:13:26,314 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 0 states and 0 transitions.
[2023-01-16 04:13:26,314 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 0 states and 0 transitions.
[2023-01-16 04:13:26,314 INFO  L399   stractBuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2023-01-16 04:13:26,314 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 12 ============
[2023-01-16 04:13:26,314 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2023-01-16 04:13:26,314 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2023-01-16 04:13:26,314 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2023-01-16 04:13:26,320 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 16.01 04:13:26 BasicIcfg
[2023-01-16 04:13:26,320 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2023-01-16 04:13:26,321 INFO  L158              Benchmark]: Toolchain (without parser) took 542725.17ms. Allocated memory was 34.6MB in the beginning and 1.9GB in the end (delta: 1.9GB). Free memory was 17.9MB in the beginning and 870.1MB in the end (delta: -852.2MB). Peak memory consumption was 999.2MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,321 INFO  L158              Benchmark]: Boogie PL CUP Parser took 0.12ms. Allocated memory is still 34.6MB. Free memory was 16.3MB in the beginning and 16.3MB in the end (delta: 24.6kB). There was no memory consumed. Max. memory is 4.3GB.
[2023-01-16 04:13:26,321 INFO  L158              Benchmark]: Boogie Preprocessor took 90.13ms. Allocated memory was 34.6MB in the beginning and 41.9MB in the end (delta: 7.3MB). Free memory was 17.8MB in the beginning and 23.5MB in the end (delta: -5.7MB). Peak memory consumption was 8.4MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,321 INFO  L158              Benchmark]: ThufvSpecLang took 45.79ms. Allocated memory is still 41.9MB. Free memory was 23.5MB in the beginning and 21.1MB in the end (delta: 2.5MB). Peak memory consumption was 1.0MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,322 INFO  L158              Benchmark]: RCFGBuilder took 999.35ms. Allocated memory was 41.9MB in the beginning and 54.5MB in the end (delta: 12.6MB). Free memory was 21.1MB in the beginning and 29.6MB in the end (delta: -8.6MB). Peak memory consumption was 21.4MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,322 INFO  L158              Benchmark]: ThufvLTL2Aut took 73.40ms. Allocated memory is still 54.5MB. Free memory was 29.6MB in the beginning and 26.5MB in the end (delta: 3.1MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,322 INFO  L158              Benchmark]: BÃ¼chi Program Product took 893.31ms. Allocated memory was 54.5MB in the beginning and 109.1MB in the end (delta: 54.5MB). Free memory was 26.5MB in the beginning and 44.5MB in the end (delta: -18.1MB). Peak memory consumption was 39.0MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,322 INFO  L158              Benchmark]: BlockEncodingV2 took 158.39ms. Allocated memory is still 109.1MB. Free memory was 44.5MB in the beginning and 31.7MB in the end (delta: 12.8MB). Peak memory consumption was 12.8MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,322 INFO  L158              Benchmark]: BuchiAutomizer took 540459.02ms. Allocated memory was 109.1MB in the beginning and 1.9GB in the end (delta: 1.8GB). Free memory was 31.7MB in the beginning and 870.1MB in the end (delta: -838.4MB). Peak memory consumption was 938.9MB. Max. memory is 4.3GB.
[2023-01-16 04:13:26,324 INFO  L339   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2037 locations, 2820 edges
  - StatisticsResult: Encoded RCFG
    2026 locations, 2804 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.12ms. Allocated memory is still 34.6MB. Free memory was 16.3MB in the beginning and 16.3MB in the end (delta: 24.6kB). There was no memory consumed. Max. memory is 4.3GB.
 * Boogie Preprocessor took 90.13ms. Allocated memory was 34.6MB in the beginning and 41.9MB in the end (delta: 7.3MB). Free memory was 17.8MB in the beginning and 23.5MB in the end (delta: -5.7MB). Peak memory consumption was 8.4MB. Max. memory is 4.3GB.
 * ThufvSpecLang took 45.79ms. Allocated memory is still 41.9MB. Free memory was 23.5MB in the beginning and 21.1MB in the end (delta: 2.5MB). Peak memory consumption was 1.0MB. Max. memory is 4.3GB.
 * RCFGBuilder took 999.35ms. Allocated memory was 41.9MB in the beginning and 54.5MB in the end (delta: 12.6MB). Free memory was 21.1MB in the beginning and 29.6MB in the end (delta: -8.6MB). Peak memory consumption was 21.4MB. Max. memory is 4.3GB.
 * ThufvLTL2Aut took 73.40ms. Allocated memory is still 54.5MB. Free memory was 29.6MB in the beginning and 26.5MB in the end (delta: 3.1MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
 * BÃ¼chi Program Product took 893.31ms. Allocated memory was 54.5MB in the beginning and 109.1MB in the end (delta: 54.5MB). Free memory was 26.5MB in the beginning and 44.5MB in the end (delta: -18.1MB). Peak memory consumption was 39.0MB. Max. memory is 4.3GB.
 * BlockEncodingV2 took 158.39ms. Allocated memory is still 109.1MB. Free memory was 44.5MB in the beginning and 31.7MB in the end (delta: 12.8MB). Peak memory consumption was 12.8MB. Max. memory is 4.3GB.
 * BuchiAutomizer took 540459.02ms. Allocated memory was 109.1MB in the beginning and 1.9GB in the end (delta: 1.8GB). Free memory was 31.7MB in the beginning and 870.1MB in the end (delta: -838.4MB). Peak memory consumption was 938.9MB. Max. memory is 4.3GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    3 locations, 4 edges
  - StatisticsResult: Initial RCFG
    522 locations, 703 edges
  - StatisticsResult: BuchiProgram size
    2037 locations, 2820 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 11 terminating modules (11 trivial, 0 deterministic, 0 nondeterministic). 11 modules have a trivial ranking function, the largest among these consists of 22 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 540.4s and 12 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.7s. Construction of modules took 475.4s. BÃ¼chi inclusion checks took 55.0s. Highest rank in rank-based complementation 0. Minimization of det autom 11. Minimization of nondet autom 0. Automata minimization 0.5s AutomataMinimizationTime, 10 MinimizatonAttempts, 26034 StatesRemovedByMinimization, 10 NontrivialMinimizations. Non-live state removal took 0.4s Buchi closure took 0.0s. Biggest automaton had -1 states and ocurred in iteration -1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 0 mSolverCounterUnknown, 175775 SdHoareTripleChecker+Valid, 490.7s IncrementalHoareTripleChecker+Time, 0 mSdLazyCounter, 175407 mSDsluCounter, 57490 SdHoareTripleChecker+Invalid, 475.5s Time, 0 mProtectedAction, 0 SdHoareTripleChecker+Unchecked, 0 IncrementalHoareTripleChecker+Unchecked, 29688 mSDsCounter, 69108 IncrementalHoareTripleChecker+Valid, 0 mProtectedPredicate, 176632 IncrementalHoareTripleChecker+Invalid, 245740 SdHoareTripleChecker+Unknown, 0 mSolverCounterNotChecked, 69108 mSolverCounterUnsat, 27802 mSDtfsCounter, 176632 mSolverCounterSat, 1.7s SdHoareTripleChecker+Time, 0 IncrementalHoareTripleChecker+Unknown	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU11 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	InitialAbstractionConstructionTime: 0.0s
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property !(( [](((hdr.tcp.valid == true && _p4ltl_5 == true) && _p4ltl_4 == true)) )) || ( ( [](( (_p4ltl_2 == true && _p4ltl_3 == true) ==> ( X((_p4ltl_2 == true && _p4ltl_1 == true ==> _p4ltl_0 == true)) ) )) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...

Total verification running time: 00:03:24
Result: Timeout/Counterexample/Error
Path: CoDel/main.p4

[P4 + P4LTL->Boogie]:
P4LTL parsing result: ([]((AP(((meta.codel.state_dropping == 1) && (meta.codel.ok_to_drop == 0))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((meta.codel.time_now >= meta.codel.drop_time)))))))))

P4LTL parsing result: ([](AP((standard_metadata.ingress_port == 1))))

//#LTLProperty:
 ([]((AP(((_p4ltl_2 == true) && (_p4ltl_1 == true))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((_p4ltl_0 == true)))))))))
//#LTLFairness:
 ([](AP((_p4ltl_3 == true))))
backend cpu time 0.002735 s
program cpu time 0.399718 s

[Boogie Line Num]
651 /home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl

[Boogie->Verified Result]:
This is Ultimate 0.2.2-P4LTL-348d754-m
[2023-02-07 02:28:04,970 INFO  L177        SettingsManager]: Resetting all preferences to default values...
[2023-02-07 02:28:04,972 INFO  L181        SettingsManager]: Resetting UltimateCore preferences to default values
[2023-02-07 02:28:04,997 INFO  L184        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2023-02-07 02:28:04,997 INFO  L181        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2023-02-07 02:28:04,998 INFO  L181        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2023-02-07 02:28:04,999 INFO  L181        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2023-02-07 02:28:05,000 INFO  L181        SettingsManager]: Resetting LassoRanker preferences to default values
[2023-02-07 02:28:05,001 INFO  L181        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2023-02-07 02:28:05,001 INFO  L181        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2023-02-07 02:28:05,002 INFO  L181        SettingsManager]: Resetting Sifa preferences to default values
[2023-02-07 02:28:05,003 INFO  L184        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2023-02-07 02:28:05,003 INFO  L181        SettingsManager]: Resetting LTL2Aut preferences to default values
[2023-02-07 02:28:05,004 INFO  L181        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2023-02-07 02:28:05,004 INFO  L181        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2023-02-07 02:28:05,005 INFO  L181        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2023-02-07 02:28:05,006 INFO  L181        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2023-02-07 02:28:05,006 INFO  L181        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2023-02-07 02:28:05,007 INFO  L181        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2023-02-07 02:28:05,009 INFO  L181        SettingsManager]: Resetting CodeCheck preferences to default values
[2023-02-07 02:28:05,010 INFO  L181        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2023-02-07 02:28:05,011 INFO  L181        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2023-02-07 02:28:05,012 INFO  L181        SettingsManager]: Resetting Referee preferences to default values
[2023-02-07 02:28:05,012 INFO  L181        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2023-02-07 02:28:05,014 INFO  L184        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2023-02-07 02:28:05,014 INFO  L184        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2023-02-07 02:28:05,014 INFO  L181        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2023-02-07 02:28:05,015 INFO  L181        SettingsManager]: Resetting IcfgToChc preferences to default values
[2023-02-07 02:28:05,015 INFO  L181        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2023-02-07 02:28:05,016 INFO  L184        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2023-02-07 02:28:05,016 INFO  L181        SettingsManager]: Resetting ThufvLTL2Aut preferences to default values
[2023-02-07 02:28:05,017 INFO  L181        SettingsManager]: Resetting ThufvSpecLang preferences to default values
[2023-02-07 02:28:05,017 INFO  L181        SettingsManager]: Resetting Boogie Printer preferences to default values
[2023-02-07 02:28:05,018 INFO  L181        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2023-02-07 02:28:05,019 INFO  L181        SettingsManager]: Resetting ReqPrinter preferences to default values
[2023-02-07 02:28:05,019 INFO  L181        SettingsManager]: Resetting Witness Printer preferences to default values
[2023-02-07 02:28:05,024 INFO  L184        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2023-02-07 02:28:05,024 INFO  L181        SettingsManager]: Resetting CDTParser preferences to default values
[2023-02-07 02:28:05,025 INFO  L184        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2023-02-07 02:28:05,025 INFO  L184        SettingsManager]: ReqParser provides no preferences, ignoring...
[2023-02-07 02:28:05,025 INFO  L181        SettingsManager]: Resetting SmtParser preferences to default values
[2023-02-07 02:28:05,026 INFO  L181        SettingsManager]: Resetting Witness Parser preferences to default values
[2023-02-07 02:28:05,027 INFO  L188        SettingsManager]: Finished resetting all preferences to default values...
[2023-02-07 02:28:05,027 INFO  L101        SettingsManager]: Beginning loading settings from /home/p4ltl/Desktop/UP4LTL-linux/config/P4LTL.epf
[2023-02-07 02:28:05,034 INFO  L113        SettingsManager]: Loading preferences was successful
[2023-02-07 02:28:05,034 INFO  L115        SettingsManager]: Preferences different from defaults after loading the file:
[2023-02-07 02:28:05,035 INFO  L136        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2023-02-07 02:28:05,035 INFO  L138        SettingsManager]:  * Read property from file=true
[2023-02-07 02:28:05,035 INFO  L136        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2023-02-07 02:28:05,035 INFO  L138        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2023-02-07 02:28:05,035 INFO  L136        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2023-02-07 02:28:05,035 INFO  L138        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2023-02-07 02:28:05,035 INFO  L138        SettingsManager]:  * Use old map elimination=false
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Try twofold refinement=false
[2023-02-07 02:28:05,036 INFO  L136        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Overapproximate operations on floating types=true
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Check division by zero=IGNORE
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Pointer to allocated memory at dereference=IGNORE
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=IGNORE
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Check array bounds for arrays that are off heap=IGNORE
[2023-02-07 02:28:05,036 INFO  L138        SettingsManager]:  * Check if freed pointer was valid=false
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Pointer base address is valid at dereference=IGNORE
[2023-02-07 02:28:05,037 INFO  L136        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Size of a code block=SingleStatement
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Remove assume true statements=false
[2023-02-07 02:28:05,037 INFO  L136        SettingsManager]: Preferences of TraceAbstraction differ from their defaults:
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Compute Interpolants along a Counterexample=FPandBP
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Trace refinement strategy=CAMEL
[2023-02-07 02:28:05,037 INFO  L138        SettingsManager]:  * Command for external solver=z3 SMTLIB2_COMPLIANT=true -memory:2024 -smt2 -in
[2023-02-07 02:28:05,038 INFO  L138        SettingsManager]:  * SMT solver=External_ModelsAndUnsatCoreMode
[2023-02-07 02:28:05,038 INFO  L136        SettingsManager]: Preferences of Boogie Printer differ from their defaults:
[2023-02-07 02:28:05,039 INFO  L138        SettingsManager]:  * Dump path:=C:\Users\Greenie\Desktop\Project\P4LTL\trunk\examples\P4LTL
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1 (file:/home/p4ltl/Desktop/UP4LTL-linux/plugins/com.sun.xml.bind_2.2.0.v201505121915.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
WARNING: Please consider reporting this to the maintainers of com.sun.xml.bind.v2.runtime.reflect.opt.Injector$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[2023-02-07 02:28:05,223 INFO  L75    nceAwareModelManager]: Repository-Root is: /tmp
[2023-02-07 02:28:05,239 INFO  L261   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2023-02-07 02:28:05,240 INFO  L217   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2023-02-07 02:28:05,241 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2023-02-07 02:28:05,243 INFO  L275        PluginConnector]: Boogie PL CUP Parser initialized
[2023-02-07 02:28:05,243 INFO  L432   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl
[2023-02-07 02:28:05,244 INFO  L110           BoogieParser]: Parsing: '/home/p4ltl/Desktop/UP4LTL-linux/p4ltl_boogie.bpl'
[2023-02-07 02:28:05,273 INFO  L299   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2023-02-07 02:28:05,274 INFO  L131        ToolchainWalker]: Walking toolchain with 7 elements.
[2023-02-07 02:28:05,274 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2023-02-07 02:28:05,274 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2023-02-07 02:28:05,274 INFO  L275        PluginConnector]: Boogie Preprocessor initialized
[2023-02-07 02:28:05,284 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,285 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,293 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,293 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,301 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,305 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,308 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,311 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2023-02-07 02:28:05,311 INFO  L113        PluginConnector]: ------------------------ThufvSpecLang----------------------------
[2023-02-07 02:28:05,311 INFO  L271        PluginConnector]: Initializing ThufvSpecLang...
[2023-02-07 02:28:05,314 INFO  L275        PluginConnector]: ThufvSpecLang initialized
[2023-02-07 02:28:05,318 INFO  L185        PluginConnector]: Executing the observer ThufvSpecLangObserver from plugin ThufvSpecLang for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/1) ...
[2023-02-07 02:28:05,322 INFO  L184   hufvSpecLangObserver]: P4LTL Spec is: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_1 == true))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((_p4ltl_0 == true)))))))))
[2023-02-07 02:28:05,323 INFO  L312   hufvSpecLangObserver]: translating P4LTL formula: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_1 == true))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((_p4ltl_0 == true)))))))))
[2023-02-07 02:28:05,323 INFO  L331   hufvSpecLangObserver]: Starting to parse P4LTL Formula to AstNode: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_1 == true))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((_p4ltl_0 == true)))))))))
Token: (
Token: []
Token: (
Token: (
Token: AP
Token: (
Token: (
Token: (
Token: _p4ltl_2
Token: ==
Token: true
Token: )
Token: &&
Token: (
Token: _p4ltl_1
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: ==>
Token: (
Token: X
Token: (
Token: (
Token: (
Token: []
Token: (
Token: AP
Token: (
Token: (
Token: !
Token: (
Token: drop
Token: )
Token: )
Token: )
Token: )
Token: )
Token: ||
Token: (
Token: AP
Token: (
Token: (
Token: !
Token: (
Token: drop
Token: )
Token: )
Token: )
Token: U
Token: AP
Token: (
Token: (
Token: _p4ltl_0
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: )
Token: 
Token: 
[2023-02-07 02:28:05,332 INFO  L336   hufvSpecLangObserver]: Successfully lexed and parsed: ([]((AP(((_p4ltl_2 == true) && (_p4ltl_1 == true))) ==> (X((([](AP((!(drop))))) || (AP((!(drop))) U AP((_p4ltl_0 == true)))))))))
[2023-02-07 02:28:05,333 INFO  L316   hufvSpecLangObserver]: translated to regular LTL formula: ( [](( AP(( _p4ltl_2==true && _p4ltl_1==true )) ==> ( X(( ( [](AP((!(drop)))) ) || ( AP((!(drop))) U AP(_p4ltl_0==true) ) )) ) )) )
==== class: class ast.UnaryTemporalOperator
==== class: class ast.BinaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BinaryOperator
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
==== class: class ast.UnaryTemporalOperator
==== class: class ast.BinaryTemporalOperator
==== class: class ast.UnaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Not
==== class: class ast.Drop
==== class: class ast.BinaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Not
==== class: class ast.Drop
==== class: class ast.P4LTLAtomicProposition
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
[2023-02-07 02:28:05,335 INFO  L218   hufvSpecLangObserver]: P4LTL Fairness Spec is: ([](AP((_p4ltl_3 == true))))
[2023-02-07 02:28:05,335 INFO  L312   hufvSpecLangObserver]: translating P4LTL formula: ([](AP((_p4ltl_3 == true))))
[2023-02-07 02:28:05,335 INFO  L331   hufvSpecLangObserver]: Starting to parse P4LTL Formula to AstNode: ([](AP((_p4ltl_3 == true))))
Token: (
Token: []
Token: (
Token: AP
Token: (
Token: (
Token: _p4ltl_3
Token: ==
Token: true
Token: )
Token: )
Token: )
Token: )
Token: 
Token: 
[2023-02-07 02:28:05,336 INFO  L336   hufvSpecLangObserver]: Successfully lexed and parsed: ([](AP((_p4ltl_3 == true))))
[2023-02-07 02:28:05,336 INFO  L316   hufvSpecLangObserver]: translated to regular LTL formula: ( [](AP(_p4ltl_3==true)) )
==== class: class ast.UnaryTemporalOperator
==== class: class ast.P4LTLAtomicProposition
==== class: class ast.ExtendedComparativeOperator
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.Name
==== class: class de.uni_freiburg.informatik.ultimate.ltl2aut.ast.BoolLiteral
[2023-02-07 02:28:05,337 INFO  L288   hufvSpecLangObserver]: File already exists and will be overwritten: /home/p4ltl/Desktop/UP4LTL-linux/__p4ltl_ast.json
[2023-02-07 02:28:05,337 INFO  L291   hufvSpecLangObserver]: Writing to file /home/p4ltl/Desktop/UP4LTL-linux/__p4ltl_ast.json
[2023-02-07 02:28:05,340 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.tsinghua.ss.thufv.specLang AST 07.02 02:28:05 PropertyContainer
[2023-02-07 02:28:05,340 INFO  L132        PluginConnector]: ------------------------ END ThufvSpecLang----------------------------
[2023-02-07 02:28:05,341 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2023-02-07 02:28:05,341 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2023-02-07 02:28:05,341 INFO  L275        PluginConnector]: RCFGBuilder initialized
[2023-02-07 02:28:05,343 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/2) ...
[2023-02-07 02:28:05,349 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:05,417 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure NoAction_0 given in one single declaration
[2023-02-07 02:28:05,418 INFO  L130     BoogieDeclarations]: Found specification of procedure NoAction_0
[2023-02-07 02:28:05,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure NoAction_0
[2023-02-07 02:28:05,418 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure NoAction_1 given in one single declaration
[2023-02-07 02:28:05,418 INFO  L130     BoogieDeclarations]: Found specification of procedure NoAction_1
[2023-02-07 02:28:05,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure NoAction_1
[2023-02-07 02:28:05,418 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure ULTIMATE.start given in one single declaration
[2023-02-07 02:28:05,418 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2023-02-07 02:28:05,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2023-02-07 02:28:05,419 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure _parser_ParserImpl given in one single declaration
[2023-02-07 02:28:05,419 INFO  L130     BoogieDeclarations]: Found specification of procedure _parser_ParserImpl
[2023-02-07 02:28:05,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure _parser_ParserImpl
[2023-02-07 02:28:05,419 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure accept given in one single declaration
[2023-02-07 02:28:05,419 INFO  L130     BoogieDeclarations]: Found specification of procedure accept
[2023-02-07 02:28:05,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure accept
[2023-02-07 02:28:05,419 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure c_codel_0_a_codel_control_law_0 given in one single declaration
[2023-02-07 02:28:05,419 INFO  L130     BoogieDeclarations]: Found specification of procedure c_codel_0_a_codel_control_law_0
[2023-02-07 02:28:05,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure c_codel_0_a_codel_control_law_0
[2023-02-07 02:28:05,420 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure c_codel_0_a_codel_init_0 given in one single declaration
[2023-02-07 02:28:05,420 INFO  L130     BoogieDeclarations]: Found specification of procedure c_codel_0_a_codel_init_0
[2023-02-07 02:28:05,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure c_codel_0_a_codel_init_0
[2023-02-07 02:28:05,420 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure c_codel_0_a_go_to_drop_state_0 given in one single declaration
[2023-02-07 02:28:05,420 INFO  L130     BoogieDeclarations]: Found specification of procedure c_codel_0_a_go_to_drop_state_0
[2023-02-07 02:28:05,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure c_codel_0_a_go_to_drop_state_0
[2023-02-07 02:28:05,420 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure c_codel_0_t_codel_control_law.apply given in one single declaration
[2023-02-07 02:28:05,420 INFO  L130     BoogieDeclarations]: Found specification of procedure c_codel_0_t_codel_control_law.apply
[2023-02-07 02:28:05,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure c_codel_0_t_codel_control_law.apply
[2023-02-07 02:28:05,420 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure computeChecksum given in one single declaration
[2023-02-07 02:28:05,420 INFO  L130     BoogieDeclarations]: Found specification of procedure computeChecksum
[2023-02-07 02:28:05,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure computeChecksum
[2023-02-07 02:28:05,421 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure egress given in one single declaration
[2023-02-07 02:28:05,421 INFO  L130     BoogieDeclarations]: Found specification of procedure egress
[2023-02-07 02:28:05,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure egress
[2023-02-07 02:28:05,421 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure forward given in one single declaration
[2023-02-07 02:28:05,421 INFO  L130     BoogieDeclarations]: Found specification of procedure forward
[2023-02-07 02:28:05,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure forward
[2023-02-07 02:28:05,421 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure forwarding_0.apply given in one single declaration
[2023-02-07 02:28:05,421 INFO  L130     BoogieDeclarations]: Found specification of procedure forwarding_0.apply
[2023-02-07 02:28:05,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure forwarding_0.apply
[2023-02-07 02:28:05,422 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure havocProcedure given in one single declaration
[2023-02-07 02:28:05,422 INFO  L130     BoogieDeclarations]: Found specification of procedure havocProcedure
[2023-02-07 02:28:05,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure havocProcedure
[2023-02-07 02:28:05,422 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure ingress given in one single declaration
[2023-02-07 02:28:05,422 INFO  L130     BoogieDeclarations]: Found specification of procedure ingress
[2023-02-07 02:28:05,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure ingress
[2023-02-07 02:28:05,422 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure main given in one single declaration
[2023-02-07 02:28:05,422 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2023-02-07 02:28:05,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2023-02-07 02:28:05,423 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure mainProcedure given in one single declaration
[2023-02-07 02:28:05,423 INFO  L130     BoogieDeclarations]: Found specification of procedure mainProcedure
[2023-02-07 02:28:05,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure mainProcedure
[2023-02-07 02:28:05,423 INFO  L130     BoogieDeclarations]: Found specification of procedure mark_to_drop
[2023-02-07 02:28:05,423 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_ipv4 given in one single declaration
[2023-02-07 02:28:05,423 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_ipv4
[2023-02-07 02:28:05,423 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_ipv4
[2023-02-07 02:28:05,423 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_payload given in one single declaration
[2023-02-07 02:28:05,424 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_payload
[2023-02-07 02:28:05,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_payload
[2023-02-07 02:28:05,424 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_tcp given in one single declaration
[2023-02-07 02:28:05,424 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_tcp
[2023-02-07 02:28:05,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_tcp
[2023-02-07 02:28:05,424 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure parse_udp given in one single declaration
[2023-02-07 02:28:05,424 INFO  L130     BoogieDeclarations]: Found specification of procedure parse_udp
[2023-02-07 02:28:05,424 INFO  L138     BoogieDeclarations]: Found implementation of procedure parse_udp
[2023-02-07 02:28:05,424 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure r_drop_count.write given in one single declaration
[2023-02-07 02:28:05,425 INFO  L130     BoogieDeclarations]: Found specification of procedure r_drop_count.write
[2023-02-07 02:28:05,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure r_drop_count.write
[2023-02-07 02:28:05,425 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure r_drop_time.write given in one single declaration
[2023-02-07 02:28:05,425 INFO  L130     BoogieDeclarations]: Found specification of procedure r_drop_time.write
[2023-02-07 02:28:05,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure r_drop_time.write
[2023-02-07 02:28:05,425 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure r_last_drop_count.write given in one single declaration
[2023-02-07 02:28:05,425 INFO  L130     BoogieDeclarations]: Found specification of procedure r_last_drop_count.write
[2023-02-07 02:28:05,425 INFO  L138     BoogieDeclarations]: Found implementation of procedure r_last_drop_count.write
[2023-02-07 02:28:05,426 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure r_next_drop.write given in one single declaration
[2023-02-07 02:28:05,426 INFO  L130     BoogieDeclarations]: Found specification of procedure r_next_drop.write
[2023-02-07 02:28:05,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure r_next_drop.write
[2023-02-07 02:28:05,426 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure r_state_dropping.write given in one single declaration
[2023-02-07 02:28:05,426 INFO  L130     BoogieDeclarations]: Found specification of procedure r_state_dropping.write
[2023-02-07 02:28:05,426 INFO  L138     BoogieDeclarations]: Found implementation of procedure r_state_dropping.write
[2023-02-07 02:28:05,427 INFO  L130     BoogieDeclarations]: Found specification of procedure reject
[2023-02-07 02:28:05,427 INFO  L130     BoogieDeclarations]: Found specification of procedure setInvalid
[2023-02-07 02:28:05,427 INFO  L130     BoogieDeclarations]: Found specification of procedure setValid
[2023-02-07 02:28:05,427 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure start given in one single declaration
[2023-02-07 02:28:05,427 INFO  L130     BoogieDeclarations]: Found specification of procedure start
[2023-02-07 02:28:05,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure start
[2023-02-07 02:28:05,427 INFO  L124     BoogieDeclarations]: Specification and implementation of procedure verifyChecksum given in one single declaration
[2023-02-07 02:28:05,427 INFO  L130     BoogieDeclarations]: Found specification of procedure verifyChecksum
[2023-02-07 02:28:05,427 INFO  L138     BoogieDeclarations]: Found implementation of procedure verifyChecksum
[2023-02-07 02:28:05,463 INFO  L234             CfgBuilder]: Building ICFG
[2023-02-07 02:28:05,465 INFO  L260             CfgBuilder]: Building CFG for each procedure with an implementation
[2023-02-07 02:28:05,664 INFO  L275             CfgBuilder]: Performing block encoding
[2023-02-07 02:28:05,672 INFO  L294             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2023-02-07 02:28:05,672 INFO  L299             CfgBuilder]: Removed 0 assume(true) statements.
[2023-02-07 02:28:05,673 INFO  L202        PluginConnector]: Adding new model p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 07.02 02:28:05 BoogieIcfgContainer
[2023-02-07 02:28:05,674 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 07.02 02:28:05" (2/2) ...
[2023-02-07 02:28:05,674 INFO  L82     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2023-02-07 02:28:05,674 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7e3ea009 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 07.02 02:28:05, skipping insertion in model container
[2023-02-07 02:28:05,674 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2023-02-07 02:28:05,675 INFO  L113        PluginConnector]: ------------------------ThufvLTL2Aut----------------------------
[2023-02-07 02:28:05,675 INFO  L271        PluginConnector]: Initializing ThufvLTL2Aut...
[2023-02-07 02:28:05,675 INFO  L275        PluginConnector]: ThufvLTL2Aut initialized
[2023-02-07 02:28:05,676 INFO  L185        PluginConnector]: Executing the observer ThufvLTL2AutObserver from plugin ThufvLTL2Aut for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 07.02 02:28:05" (2/3) ...
[2023-02-07 02:28:05,676 INFO  L119   ThufvLTL2AutObserver]: Checking fairness + property: !(( [](AP(_p4ltl_3==true)) )) || ( ( [](( AP(( _p4ltl_2==true && _p4ltl_1==true )) ==> ( X(( ( [](AP((!(drop)))) ) || ( AP((!(drop))) U AP(_p4ltl_0==true) ) )) ) )) ))
[2023-02-07 02:28:05,682 INFO  L189       MonitoredProcess]: No working directory specified, using /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba
[2023-02-07 02:28:05,696 INFO  L229       MonitoredProcess]: Starting monitored process 1 with /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba -f ! ( ! ( ( [] ( a ) ) ) || ( ( [] ( ( b -> ( X ( ( ( [] ( c ) ) || ( c U d ) ) ) ) ) ) ) ) )  (exit command is null, workingDir is null)
[2023-02-07 02:28:05,701 INFO  L552       MonitoredProcess]: [MP /home/p4ltl/Desktop/UP4LTL-linux/ltl2ba -f ! ( ! ( ( [] ( a ) ) ) || ( ( [] ( ( b -> ( X ( ( ( [] ( c ) ) || ( c U d ) ) ) ) ) ) ) ) )  (1)] Ended with exit code 0
[2023-02-07 02:28:05,719 INFO  L133   ThufvLTL2AutObserver]: LTL Property is: !(( []((_p4ltl_3 == true)) )) || ( ( [](( (_p4ltl_2 == true && _p4ltl_1 == true) ==> ( X(( ( []((!drop)) ) || ( (!drop) U (_p4ltl_0 == true) ) )) ) )) ))
[2023-02-07 02:28:05,720 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 07.02 02:28:05 NWAContainer
[2023-02-07 02:28:05,720 INFO  L132        PluginConnector]: ------------------------ END ThufvLTL2Aut----------------------------
[2023-02-07 02:28:05,721 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2023-02-07 02:28:05,721 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2023-02-07 02:28:05,722 INFO  L275        PluginConnector]: BÃ¼chi Program Product initialized
[2023-02-07 02:28:05,723 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 07.02 02:28:05" (3/4) ...
[2023-02-07 02:28:05,724 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5901126c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 07.02 02:28:05, skipping insertion in model container
[2023-02-07 02:28:05,724 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 07.02 02:28:05" (4/4) ...
[2023-02-07 02:28:05,727 INFO  L104   BuchiProductObserver]: Initial property automaton 3 locations, 5 edges
[2023-02-07 02:28:05,729 INFO  L110   BuchiProductObserver]: Initial RCFG 278 locations, 338 edges
[2023-02-07 02:28:05,729 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2023-02-07 02:28:05,732 INFO  L170       ProductGenerator]: ----- Annotating TransactionInfo ...
[2023-02-07 02:28:05,732 INFO  L189       ProductGenerator]: +++++ Call method name: r_next_drop.write
[2023-02-07 02:28:05,732 INFO  L189       ProductGenerator]: +++++ Call method name: forwarding_0.apply
[2023-02-07 02:28:05,732 INFO  L189       ProductGenerator]: +++++ Call method name: mainProcedure
[2023-02-07 02:28:05,732 INFO  L189       ProductGenerator]: +++++ Call method name: NoAction_1
[2023-02-07 02:28:05,732 INFO  L189       ProductGenerator]: +++++ Call method name: NoAction_0
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: main
[2023-02-07 02:28:05,733 INFO  L192       ProductGenerator]: ----- Handling transaction edge from mainEXIT to L553-1
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: c_codel_0_a_codel_init_0
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: egress
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: r_last_drop_count.write
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: computeChecksum
[2023-02-07 02:28:05,733 INFO  L189       ProductGenerator]: +++++ Call method name: c_codel_0_a_go_to_drop_state_0
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: parse_tcp
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: parse_payload
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_drop_count.write
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_drop_count.write
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_drop_count.write
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: forward
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: start
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: accept
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: accept
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: ingress
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: _parser_ParserImpl
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_drop_time.write
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_drop_time.write
[2023-02-07 02:28:05,734 INFO  L189       ProductGenerator]: +++++ Call method name: r_state_dropping.write
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: r_state_dropping.write
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: parse_ipv4
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: parse_udp
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: c_codel_0_a_codel_control_law_0
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: verifyChecksum
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: c_codel_0_t_codel_control_law.apply
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: c_codel_0_t_codel_control_law.apply
[2023-02-07 02:28:05,735 INFO  L189       ProductGenerator]: +++++ Call method name: havocProcedure
[2023-02-07 02:28:05,739 INFO  L244       ProductGenerator]: Creating Product States...
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L517
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L357-1
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L580
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L360
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: ingressFINAL
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: havocProcedureEXIT
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L414
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L266
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L371
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: c_codel_0_a_codel_init_0FINAL
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: c_codel_0_a_codel_init_0ENTRY
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L458
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L492
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L402
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L547
[2023-02-07 02:28:05,740 INFO  L277       ProductGenerator]: ==== location: L501
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L358-1
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L468
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L553-1
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L417
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L325
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L511
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L369
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: egressFINAL
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L499
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: parse_payloadENTRY
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L423
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L506
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: mainProcedureFINAL
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L497
[2023-02-07 02:28:05,741 INFO  L277       ProductGenerator]: ==== location: L411
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L418
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L502
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: r_state_dropping.writeENTRY
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L589
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: mainProcedureEXIT
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L419
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L579
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: computeChecksumEXIT
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L489
[2023-02-07 02:28:05,745 INFO  L277       ProductGenerator]: ==== location: L507
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L405
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L538
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L430
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: r_last_drop_count.writeEXIT
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: c_codel_0_a_go_to_drop_state_0FINAL
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L406
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L410
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L356
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L644
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: parse_udpENTRY
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L421
[2023-02-07 02:28:05,746 INFO  L277       ProductGenerator]: ==== location: L343
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L504
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L444
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L465
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L520
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L518
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L392
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: r_drop_time.writeENTRY
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: startEXIT
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L484
[2023-02-07 02:28:05,747 INFO  L277       ProductGenerator]: ==== location: L436
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L509
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: NoAction_0FINAL
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L318
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L335-2
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L510
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: forwardEXIT
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L493
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L522
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L472
[2023-02-07 02:28:05,748 INFO  L277       ProductGenerator]: ==== location: L271
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L466
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L479
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: r_drop_count.writeFINAL
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L404
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: r_state_dropping.writeEXIT
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L416
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L475
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: NoAction_0EXIT
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L346
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L440
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L488
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L487
[2023-02-07 02:28:05,749 INFO  L277       ProductGenerator]: ==== location: L477
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L570
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L347-1
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: c_codel_0_a_codel_init_0EXIT
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: parse_ipv4ENTRY
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: havocProcedureFINAL
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L302
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L319-1
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L539
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L521
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: c_codel_0_a_codel_control_law_0FINAL
[2023-02-07 02:28:05,750 INFO  L277       ProductGenerator]: ==== location: L321
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: L347
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: startENTRY
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: L403
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: L408
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: L514
[2023-02-07 02:28:05,751 INFO  L277       ProductGenerator]: ==== location: mainEXIT
[2023-02-07 02:28:05,751 INFO  L310       ProductGenerator]: ####final State Node: L553-1
[2023-02-07 02:28:05,751 INFO  L310       ProductGenerator]: ####final State Node: L553
[2023-02-07 02:28:05,752 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L553-1_accept_S5
[2023-02-07 02:28:05,754 INFO  L263       ProductGenerator]: ------- Adding ACCEPTING State: L553_accept_S5
[2023-02-07 02:28:05,755 INFO  L479       ProductGenerator]: L517_T0_S2 --> L517_T0_S2
[2023-02-07 02:28:05,755 INFO  L479       ProductGenerator]: L517_T1_init --> L517_T1_init
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L517_accept_S5 --> L517_accept_S5
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_T0_S2 --> L357-1_T0_S2
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_T1_init --> L357-1_T1_init
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_accept_S5 --> L357-1_accept_S5
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_T0_S2 --> L357-1_T0_S2
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_T1_init --> L357-1_T1_init
[2023-02-07 02:28:05,756 INFO  L479       ProductGenerator]: L357-1_accept_S5 --> L357-1_accept_S5
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.delta);
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.delta);
[2023-02-07 02:28:05,757 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.delta);
[2023-02-07 02:28:05,757 INFO  L479       ProductGenerator]: ingressFINAL_T0_S2 --> ingressFINAL_T0_S2
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: ingressFINAL_T1_init --> ingressFINAL_T1_init
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: ingressFINAL_accept_S5 --> ingressFINAL_accept_S5
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L414_T0_S2 --> L414_T0_S2
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L414_T1_init --> L414_T1_init
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L414_accept_S5 --> L414_accept_S5
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L266_T0_S2 --> L266_T0_S2
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L266_T1_init --> L266_T1_init
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L266_accept_S5 --> L266_accept_S5
[2023-02-07 02:28:05,758 INFO  L479       ProductGenerator]: L371_T0_S2 --> L371_T0_S2
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: L371_T1_init --> L371_T1_init
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: L371_accept_S5 --> L371_accept_S5
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0FINAL_T0_S2 --> c_codel_0_a_codel_init_0FINAL_T0_S2
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0FINAL_T1_init --> c_codel_0_a_codel_init_0FINAL_T1_init
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0FINAL_accept_S5 --> c_codel_0_a_codel_init_0FINAL_accept_S5
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0ENTRY_T0_S2 --> c_codel_0_a_codel_init_0ENTRY_T0_S2
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0ENTRY_T1_init --> c_codel_0_a_codel_init_0ENTRY_T1_init
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: c_codel_0_a_codel_init_0ENTRY_accept_S5 --> c_codel_0_a_codel_init_0ENTRY_accept_S5
[2023-02-07 02:28:05,759 INFO  L479       ProductGenerator]: L458_T0_S2 --> L458_T0_S2
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L458_T1_init --> L458_T1_init
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L458_accept_S5 --> L458_accept_S5
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L492_T0_S2 --> L492_T0_S2
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L492_T1_init --> L492_T1_init
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L492_accept_S5 --> L492_accept_S5
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L402_T0_S2 --> L402_T0_S2
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L402_T1_init --> L402_T1_init
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L402_accept_S5 --> L402_accept_S5
[2023-02-07 02:28:05,760 INFO  L479       ProductGenerator]: L547_T0_S2 --> L547_T0_S2
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L547_T1_init --> L547_T1_init
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L547_accept_S5 --> L547_accept_S5
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L501_T0_S2 --> L501_T0_S2
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L501_T1_init --> L501_T1_init
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L501_accept_S5 --> L501_accept_S5
[2023-02-07 02:28:05,761 INFO  L483       ProductGenerator]: Handling product edge call: call r_last_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,761 INFO  L483       ProductGenerator]: Handling product edge call: call r_last_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,761 INFO  L483       ProductGenerator]: Handling product edge call: call r_last_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,761 INFO  L479       ProductGenerator]: L468_T0_S2 --> L468_T0_S2
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L468_T1_init --> L468_T1_init
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L468_accept_S5 --> L468_accept_S5
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_T0_S2 --> L553-1_T0_S2
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_T1_init --> L553-1_T1_init
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_accept_S5 --> L553-1_accept_S5
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_T0_S2 --> L553-1_T0_S2
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_T1_init --> L553-1_T1_init
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L553-1_accept_S5 --> L553-1_accept_S5
[2023-02-07 02:28:05,762 INFO  L479       ProductGenerator]: L417_T0_S2 --> L417_T0_S2
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L417_T1_init --> L417_T1_init
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L417_accept_S5 --> L417_accept_S5
[2023-02-07 02:28:05,763 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,763 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,763 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L511_T0_S2 --> L511_T0_S2
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L511_T1_init --> L511_T1_init
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L511_accept_S5 --> L511_accept_S5
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L369_T0_S2 --> L369_T0_S2
[2023-02-07 02:28:05,763 INFO  L479       ProductGenerator]: L369_T1_init --> L369_T1_init
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: L369_accept_S5 --> L369_accept_S5
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: egressFINAL_T0_S2 --> egressFINAL_T0_S2
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: egressFINAL_T1_init --> egressFINAL_T1_init
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: egressFINAL_accept_S5 --> egressFINAL_accept_S5
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: L499_T0_S2 --> L499_T0_S2
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: L499_T1_init --> L499_T1_init
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: L499_accept_S5 --> L499_accept_S5
[2023-02-07 02:28:05,764 INFO  L479       ProductGenerator]: parse_payloadENTRY_T0_S2 --> parse_payloadENTRY_T0_S2
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: parse_payloadENTRY_T1_init --> parse_payloadENTRY_T1_init
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: parse_payloadENTRY_accept_S5 --> parse_payloadENTRY_accept_S5
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L423_T0_S2 --> L423_T0_S2
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L423_T1_init --> L423_T1_init
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L423_accept_S5 --> L423_accept_S5
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L506_T0_S2 --> L506_T0_S2
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L506_T1_init --> L506_T1_init
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: L506_accept_S5 --> L506_accept_S5
[2023-02-07 02:28:05,765 INFO  L479       ProductGenerator]: mainProcedureFINAL_T0_S2 --> mainProcedureFINAL_T0_S2
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: mainProcedureFINAL_T1_init --> mainProcedureFINAL_T1_init
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: mainProcedureFINAL_accept_S5 --> mainProcedureFINAL_accept_S5
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L497_T0_S2 --> L497_T0_S2
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L497_T1_init --> L497_T1_init
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L497_accept_S5 --> L497_accept_S5
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L411_T0_S2 --> L411_T0_S2
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L411_T1_init --> L411_T1_init
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L411_accept_S5 --> L411_accept_S5
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L418_T0_S2 --> L418_T0_S2
[2023-02-07 02:28:05,766 INFO  L479       ProductGenerator]: L418_T1_init --> L418_T1_init
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: L418_accept_S5 --> L418_accept_S5
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: L502_T0_S2 --> L502_T0_S2
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: L502_T1_init --> L502_T1_init
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: L502_accept_S5 --> L502_accept_S5
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: r_state_dropping.writeENTRY_T0_S2 --> r_state_dropping.writeENTRY_T0_S2
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: r_state_dropping.writeENTRY_T1_init --> r_state_dropping.writeENTRY_T1_init
[2023-02-07 02:28:05,767 INFO  L479       ProductGenerator]: r_state_dropping.writeENTRY_accept_S5 --> r_state_dropping.writeENTRY_accept_S5
[2023-02-07 02:28:05,767 INFO  L483       ProductGenerator]: Handling product edge call: call parse_payload();
[2023-02-07 02:28:05,767 INFO  L483       ProductGenerator]: Handling product edge call: call parse_payload();
[2023-02-07 02:28:05,767 INFO  L483       ProductGenerator]: Handling product edge call: call parse_payload();
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: mainProcedureEXIT_T0_S2 --> mainProcedureEXIT_T0_S2
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: mainProcedureEXIT_T1_init --> mainProcedureEXIT_T1_init
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: mainProcedureEXIT_accept_S5 --> mainProcedureEXIT_accept_S5
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L419_T0_S2 --> L419_T0_S2
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L419_T1_init --> L419_T1_init
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L419_accept_S5 --> L419_accept_S5
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L579_T0_S2 --> L579_T0_S2
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L579_T1_init --> L579_T1_init
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L579_accept_S5 --> L579_accept_S5
[2023-02-07 02:28:05,768 INFO  L479       ProductGenerator]: L489_T0_S2 --> L489_T0_S2
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L489_T1_init --> L489_T1_init
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L489_accept_S5 --> L489_accept_S5
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L507_T0_S2 --> L507_T0_S2
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L507_T1_init --> L507_T1_init
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L507_accept_S5 --> L507_accept_S5
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L405_T0_S2 --> L405_T0_S2
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L405_T1_init --> L405_T1_init
[2023-02-07 02:28:05,769 INFO  L479       ProductGenerator]: L405_accept_S5 --> L405_accept_S5
[2023-02-07 02:28:05,769 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-02-07 02:28:05,769 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-02-07 02:28:05,770 INFO  L483       ProductGenerator]: Handling product edge call: call egress();
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: L430_T0_S2 --> L430_T0_S2
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: L430_T1_init --> L430_T1_init
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: L430_accept_S5 --> L430_accept_S5
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: c_codel_0_a_go_to_drop_state_0FINAL_T0_S2 --> c_codel_0_a_go_to_drop_state_0FINAL_T0_S2
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: c_codel_0_a_go_to_drop_state_0FINAL_T1_init --> c_codel_0_a_go_to_drop_state_0FINAL_T1_init
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: c_codel_0_a_go_to_drop_state_0FINAL_accept_S5 --> c_codel_0_a_go_to_drop_state_0FINAL_accept_S5
[2023-02-07 02:28:05,770 INFO  L479       ProductGenerator]: L406_T0_S2 --> L406_T0_S2
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L406_T1_init --> L406_T1_init
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L406_accept_S5 --> L406_accept_S5
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L410_T0_S2 --> L410_T0_S2
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L410_T1_init --> L410_T1_init
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L410_accept_S5 --> L410_accept_S5
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L356_T0_S2 --> L356_T0_S2
[2023-02-07 02:28:05,771 INFO  L479       ProductGenerator]: L356_T1_init --> L356_T1_init
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: L356_accept_S5 --> L356_accept_S5
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: L356_T0_S2 --> L356_T0_S2
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: L356_T1_init --> L356_T1_init
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: L356_accept_S5 --> L356_accept_S5
[2023-02-07 02:28:05,772 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-02-07 02:28:05,772 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-02-07 02:28:05,772 INFO  L483       ProductGenerator]: Handling product edge call: call parse_ipv4();
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: parse_udpENTRY_T0_S2 --> parse_udpENTRY_T0_S2
[2023-02-07 02:28:05,772 INFO  L479       ProductGenerator]: parse_udpENTRY_T1_init --> parse_udpENTRY_T1_init
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: parse_udpENTRY_accept_S5 --> parse_udpENTRY_accept_S5
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L421_T0_S2 --> L421_T0_S2
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L421_T1_init --> L421_T1_init
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L421_accept_S5 --> L421_accept_S5
[2023-02-07 02:28:05,773 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,773 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,773 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 0);
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L504_T0_S2 --> L504_T0_S2
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L504_T1_init --> L504_T1_init
[2023-02-07 02:28:05,773 INFO  L479       ProductGenerator]: L504_accept_S5 --> L504_accept_S5
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L444_T0_S2 --> L444_T0_S2
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L444_T1_init --> L444_T1_init
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L444_accept_S5 --> L444_accept_S5
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L465_T0_S2 --> L465_T0_S2
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L465_T1_init --> L465_T1_init
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L465_accept_S5 --> L465_accept_S5
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L520_T0_S2 --> L520_T0_S2
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L520_T1_init --> L520_T1_init
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L520_accept_S5 --> L520_accept_S5
[2023-02-07 02:28:05,774 INFO  L479       ProductGenerator]: L518_T0_S2 --> L518_T0_S2
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: L518_T1_init --> L518_T1_init
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: L518_accept_S5 --> L518_accept_S5
[2023-02-07 02:28:05,775 INFO  L483       ProductGenerator]: Handling product edge call: call forward(forwarding_0.forward.egress_spec, forwarding_0.forward.dst_mac);
[2023-02-07 02:28:05,775 INFO  L483       ProductGenerator]: Handling product edge call: call forward(forwarding_0.forward.egress_spec, forwarding_0.forward.dst_mac);
[2023-02-07 02:28:05,775 INFO  L483       ProductGenerator]: Handling product edge call: call forward(forwarding_0.forward.egress_spec, forwarding_0.forward.dst_mac);
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: r_drop_time.writeENTRY_T0_S2 --> r_drop_time.writeENTRY_T0_S2
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: r_drop_time.writeENTRY_T1_init --> r_drop_time.writeENTRY_T1_init
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: r_drop_time.writeENTRY_accept_S5 --> r_drop_time.writeENTRY_accept_S5
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: L484_T0_S2 --> L484_T0_S2
[2023-02-07 02:28:05,775 INFO  L479       ProductGenerator]: L484_T1_init --> L484_T1_init
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L484_accept_S5 --> L484_accept_S5
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L436_T0_S2 --> L436_T0_S2
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L436_T1_init --> L436_T1_init
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L436_accept_S5 --> L436_accept_S5
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L509_T0_S2 --> L509_T0_S2
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L509_T1_init --> L509_T1_init
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L509_accept_S5 --> L509_accept_S5
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: NoAction_0FINAL_T0_S2 --> NoAction_0FINAL_T0_S2
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: NoAction_0FINAL_T1_init --> NoAction_0FINAL_T1_init
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: NoAction_0FINAL_accept_S5 --> NoAction_0FINAL_accept_S5
[2023-02-07 02:28:05,776 INFO  L479       ProductGenerator]: L318_T0_S2 --> L318_T0_S2
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L318_T1_init --> L318_T1_init
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L318_accept_S5 --> L318_accept_S5
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_T0_S2 --> L335-2_T0_S2
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_T1_init --> L335-2_T1_init
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_accept_S5 --> L335-2_accept_S5
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_T0_S2 --> L335-2_T0_S2
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_T1_init --> L335-2_T1_init
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L335-2_accept_S5 --> L335-2_accept_S5
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L510_T0_S2 --> L510_T0_S2
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L510_T1_init --> L510_T1_init
[2023-02-07 02:28:05,777 INFO  L479       ProductGenerator]: L510_accept_S5 --> L510_accept_S5
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L493_T0_S2 --> L493_T0_S2
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L493_T1_init --> L493_T1_init
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L493_accept_S5 --> L493_accept_S5
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L522_T0_S2 --> L522_T0_S2
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L522_T1_init --> L522_T1_init
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L522_accept_S5 --> L522_accept_S5
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L472_T0_S2 --> L472_T0_S2
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L472_T1_init --> L472_T1_init
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L472_accept_S5 --> L472_accept_S5
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L271_T0_S2 --> L271_T0_S2
[2023-02-07 02:28:05,778 INFO  L479       ProductGenerator]: L271_T1_init --> L271_T1_init
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L271_accept_S5 --> L271_accept_S5
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L466_T0_S2 --> L466_T0_S2
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L466_T1_init --> L466_T1_init
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L466_accept_S5 --> L466_accept_S5
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L479_T0_S2 --> L479_T0_S2
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L479_T1_init --> L479_T1_init
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L479_accept_S5 --> L479_accept_S5
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: r_drop_count.writeFINAL_T0_S2 --> r_drop_count.writeFINAL_T0_S2
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: r_drop_count.writeFINAL_T1_init --> r_drop_count.writeFINAL_T1_init
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: r_drop_count.writeFINAL_accept_S5 --> r_drop_count.writeFINAL_accept_S5
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L404_T0_S2 --> L404_T0_S2
[2023-02-07 02:28:05,779 INFO  L479       ProductGenerator]: L404_T1_init --> L404_T1_init
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L404_accept_S5 --> L404_accept_S5
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L416_T0_S2 --> L416_T0_S2
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L416_T1_init --> L416_T1_init
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L416_accept_S5 --> L416_accept_S5
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L475_T0_S2 --> L475_T0_S2
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L475_T1_init --> L475_T1_init
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L475_accept_S5 --> L475_accept_S5
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L346_T0_S2 --> L346_T0_S2
[2023-02-07 02:28:05,780 INFO  L479       ProductGenerator]: L346_T1_init --> L346_T1_init
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L346_accept_S5 --> L346_accept_S5
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L346_T0_S2 --> L346_T0_S2
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L346_T1_init --> L346_T1_init
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L346_accept_S5 --> L346_accept_S5
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L440_T0_S2 --> L440_T0_S2
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L440_T1_init --> L440_T1_init
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L440_accept_S5 --> L440_accept_S5
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L488_T0_S2 --> L488_T0_S2
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L488_T1_init --> L488_T1_init
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L488_accept_S5 --> L488_accept_S5
[2023-02-07 02:28:05,781 INFO  L479       ProductGenerator]: L487_T0_S2 --> L487_T0_S2
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L487_T1_init --> L487_T1_init
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L487_accept_S5 --> L487_accept_S5
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L477_T0_S2 --> L477_T0_S2
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L477_T1_init --> L477_T1_init
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L477_accept_S5 --> L477_accept_S5
[2023-02-07 02:28:05,782 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-02-07 02:28:05,782 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-02-07 02:28:05,782 INFO  L483       ProductGenerator]: Handling product edge call: call parse_tcp();
[2023-02-07 02:28:05,782 INFO  L479       ProductGenerator]: L347-1_T0_S2 --> L347-1_T0_S2
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: L347-1_T1_init --> L347-1_T1_init
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: L347-1_accept_S5 --> L347-1_accept_S5
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_T0_S2 --> parse_ipv4ENTRY_T0_S2
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_T1_init --> parse_ipv4ENTRY_T1_init
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: parse_ipv4ENTRY_accept_S5 --> parse_ipv4ENTRY_accept_S5
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: havocProcedureFINAL_T0_S2 --> havocProcedureFINAL_T0_S2
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: havocProcedureFINAL_T1_init --> havocProcedureFINAL_T1_init
[2023-02-07 02:28:05,783 INFO  L479       ProductGenerator]: havocProcedureFINAL_accept_S5 --> havocProcedureFINAL_accept_S5
[2023-02-07 02:28:05,784 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-02-07 02:28:05,784 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-02-07 02:28:05,784 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_0();
[2023-02-07 02:28:05,784 INFO  L479       ProductGenerator]: L319-1_T0_S2 --> L319-1_T0_S2
[2023-02-07 02:28:05,784 INFO  L479       ProductGenerator]: L319-1_T1_init --> L319-1_T1_init
[2023-02-07 02:28:05,784 INFO  L479       ProductGenerator]: L319-1_accept_S5 --> L319-1_accept_S5
[2023-02-07 02:28:05,784 INFO  L479       ProductGenerator]: L319-1_T0_S2 --> L319-1_T0_S2
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L319-1_T1_init --> L319-1_T1_init
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L319-1_accept_S5 --> L319-1_accept_S5
[2023-02-07 02:28:05,785 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-02-07 02:28:05,785 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-02-07 02:28:05,785 INFO  L483       ProductGenerator]: Handling product edge call: call computeChecksum();
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L521_T0_S2 --> L521_T0_S2
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L521_T1_init --> L521_T1_init
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L521_accept_S5 --> L521_accept_S5
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0FINAL_T0_S2 --> c_codel_0_a_codel_control_law_0FINAL_T0_S2
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0FINAL_T1_init --> c_codel_0_a_codel_control_law_0FINAL_T1_init
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0FINAL_accept_S5 --> c_codel_0_a_codel_control_law_0FINAL_accept_S5
[2023-02-07 02:28:05,785 INFO  L479       ProductGenerator]: L321_T0_S2 --> L321_T0_S2
[2023-02-07 02:28:05,786 INFO  L479       ProductGenerator]: L321_T1_init --> L321_T1_init
[2023-02-07 02:28:05,786 INFO  L479       ProductGenerator]: L321_accept_S5 --> L321_accept_S5
[2023-02-07 02:28:05,786 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: L347
[2023-02-07 02:28:05,806 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: L347
[2023-02-07 02:28:05,810 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: L347
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: startENTRY_T0_S2 --> startENTRY_T0_S2
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: startENTRY_T1_init --> startENTRY_T1_init
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: startENTRY_accept_S5 --> startENTRY_accept_S5
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: L403_T0_S2 --> L403_T0_S2
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: L403_T1_init --> L403_T1_init
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: L403_accept_S5 --> L403_accept_S5
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: L408_T0_S2 --> L408_T0_S2
[2023-02-07 02:28:05,815 INFO  L479       ProductGenerator]: L408_T1_init --> L408_T1_init
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L408_accept_S5 --> L408_accept_S5
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L514_T0_S2 --> L514_T0_S2
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L514_T1_init --> L514_T1_init
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L514_accept_S5 --> L514_accept_S5
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L643-1_T0_S2 --> L643-1_T0_S2
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L643-1_T1_init --> L643-1_T1_init
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L643-1_accept_S5 --> L643-1_accept_S5
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: parse_payloadFINAL_T0_S2 --> parse_payloadFINAL_T0_S2
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: parse_payloadFINAL_T1_init --> parse_payloadFINAL_T1_init
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: parse_payloadFINAL_accept_S5 --> parse_payloadFINAL_accept_S5
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L483_T0_S2 --> L483_T0_S2
[2023-02-07 02:28:05,816 INFO  L479       ProductGenerator]: L483_T1_init --> L483_T1_init
[2023-02-07 02:28:05,824 INFO  L479       ProductGenerator]: L483_accept_S5 --> L483_accept_S5
[2023-02-07 02:28:05,824 INFO  L479       ProductGenerator]: L542_T0_S2 --> L542_T0_S2
[2023-02-07 02:28:05,824 INFO  L479       ProductGenerator]: L542_T1_init --> L542_T1_init
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L542_accept_S5 --> L542_accept_S5
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_T0_S2 --> L341_T0_S2
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_T1_init --> L341_T1_init
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_accept_S5 --> L341_accept_S5
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_T0_S2 --> L341_T0_S2
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_T1_init --> L341_T1_init
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L341_accept_S5 --> L341_accept_S5
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L433_T0_S2 --> L433_T0_S2
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L433_T1_init --> L433_T1_init
[2023-02-07 02:28:05,825 INFO  L479       ProductGenerator]: L433_accept_S5 --> L433_accept_S5
[2023-02-07 02:28:05,825 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: c_codel_0_a_go_to_drop_state_0ENTRY
[2023-02-07 02:28:05,828 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: c_codel_0_a_go_to_drop_state_0ENTRY
[2023-02-07 02:28:05,831 INFO  L486       ProductGenerator]: Handling product edge summary: SUMMARY for call mark_to_drop(); srcloc: c_codel_0_a_go_to_drop_state_0ENTRY
[2023-02-07 02:28:05,833 INFO  L479       ProductGenerator]: L269_T0_S2 --> L269_T0_S2
[2023-02-07 02:28:05,833 INFO  L479       ProductGenerator]: L269_T1_init --> L269_T1_init
[2023-02-07 02:28:05,833 INFO  L479       ProductGenerator]: L269_accept_S5 --> L269_accept_S5
[2023-02-07 02:28:05,834 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,834 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,834 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_T0_S2 --> L540_T0_S2
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_T1_init --> L540_T1_init
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_accept_S5 --> L540_accept_S5
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_T0_S2 --> L540_T0_S2
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_T1_init --> L540_T1_init
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L540_accept_S5 --> L540_accept_S5
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L588-1_T0_S2 --> L588-1_T0_S2
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L588-1_T1_init --> L588-1_T1_init
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L588-1_accept_S5 --> L588-1_accept_S5
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L275_T0_S2 --> L275_T0_S2
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L275_T1_init --> L275_T1_init
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: L275_accept_S5 --> L275_accept_S5
[2023-02-07 02:28:05,834 INFO  L479       ProductGenerator]: acceptFINAL_T0_S2 --> acceptFINAL_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: acceptFINAL_T1_init --> acceptFINAL_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: acceptFINAL_accept_S5 --> acceptFINAL_accept_S5
[2023-02-07 02:28:05,835 INFO  L483       ProductGenerator]: Handling product edge call: call r_next_drop.write(meta.codel.queue_id, meta.codel.drop_next);
[2023-02-07 02:28:05,835 INFO  L483       ProductGenerator]: Handling product edge call: call r_next_drop.write(meta.codel.queue_id, meta.codel.drop_next);
[2023-02-07 02:28:05,835 INFO  L483       ProductGenerator]: Handling product edge call: call r_next_drop.write(meta.codel.queue_id, meta.codel.drop_next);
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L523_T0_S2 --> L523_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L523_T1_init --> L523_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L523_accept_S5 --> L523_accept_S5
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L513_T0_S2 --> L513_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L513_T1_init --> L513_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L513_accept_S5 --> L513_accept_S5
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L569-1_T0_S2 --> L569-1_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L569-1_T1_init --> L569-1_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L569-1_accept_S5 --> L569-1_accept_S5
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L450_T0_S2 --> L450_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L450_T1_init --> L450_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L450_accept_S5 --> L450_accept_S5
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L545_T0_S2 --> L545_T0_S2
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L545_T1_init --> L545_T1_init
[2023-02-07 02:28:05,835 INFO  L479       ProductGenerator]: L545_accept_S5 --> L545_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: havocProcedureENTRY_T0_S2 --> havocProcedureENTRY_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: havocProcedureENTRY_T1_init --> havocProcedureENTRY_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: havocProcedureENTRY_accept_S5 --> havocProcedureENTRY_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: r_last_drop_count.writeFINAL_T0_S2 --> r_last_drop_count.writeFINAL_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: r_last_drop_count.writeFINAL_T1_init --> r_last_drop_count.writeFINAL_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: r_last_drop_count.writeFINAL_accept_S5 --> r_last_drop_count.writeFINAL_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L428_T0_S2 --> L428_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L428_T1_init --> L428_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L428_accept_S5 --> L428_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_T0_S2 --> L566_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_T1_init --> L566_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_accept_S5 --> L566_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_T0_S2 --> L566_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_T1_init --> L566_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L566_accept_S5 --> L566_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L474_T0_S2 --> L474_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L474_T1_init --> L474_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L474_accept_S5 --> L474_accept_S5
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L425_T0_S2 --> L425_T0_S2
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L425_T1_init --> L425_T1_init
[2023-02-07 02:28:05,836 INFO  L479       ProductGenerator]: L425_accept_S5 --> L425_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L288_T0_S2 --> L288_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L288_T1_init --> L288_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L288_accept_S5 --> L288_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L336_T0_S2 --> L336_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L336_T1_init --> L336_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L336_accept_S5 --> L336_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L437_T0_S2 --> L437_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L437_T1_init --> L437_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L437_accept_S5 --> L437_accept_S5
[2023-02-07 02:28:05,837 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_1();
[2023-02-07 02:28:05,837 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_1();
[2023-02-07 02:28:05,837 INFO  L483       ProductGenerator]: Handling product edge call: call NoAction_1();
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L491_T0_S2 --> L491_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L491_T1_init --> L491_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L491_accept_S5 --> L491_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L383_T0_S2 --> L383_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L383_T1_init --> L383_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L383_accept_S5 --> L383_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L435_T0_S2 --> L435_T0_S2
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L435_T1_init --> L435_T1_init
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: L435_accept_S5 --> L435_accept_S5
[2023-02-07 02:28:05,837 INFO  L479       ProductGenerator]: mainFINAL_T0_S2 --> mainFINAL_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: mainFINAL_T1_init --> mainFINAL_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: mainFINAL_accept_S5 --> mainFINAL_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L331-1_T0_S2 --> L331-1_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L331-1_T1_init --> L331-1_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L331-1_accept_S5 --> L331-1_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_T0_S2 --> L301_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_T1_init --> L301_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_accept_S5 --> L301_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_T0_S2 --> L301_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_T1_init --> L301_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L301_accept_S5 --> L301_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L439_T0_S2 --> L439_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L439_T1_init --> L439_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L439_accept_S5 --> L439_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L485_T0_S2 --> L485_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L485_T1_init --> L485_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L485_accept_S5 --> L485_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: parse_udpFINAL_T0_S2 --> parse_udpFINAL_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: parse_udpFINAL_T1_init --> parse_udpFINAL_T1_init
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: parse_udpFINAL_accept_S5 --> parse_udpFINAL_accept_S5
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L370_T0_S2 --> L370_T0_S2
[2023-02-07 02:28:05,838 INFO  L479       ProductGenerator]: L370_T1_init --> L370_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L370_accept_S5 --> L370_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L370_T0_S2 --> L370_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L370_T1_init --> L370_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L370_accept_S5 --> L370_accept_S5
[2023-02-07 02:28:05,839 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,839 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,839 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, meta.codel.drop_cnt);
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L516_T0_S2 --> L516_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L516_T1_init --> L516_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L516_accept_S5 --> L516_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L360-1_T0_S2 --> L360-1_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L360-1_T1_init --> L360-1_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L360-1_accept_S5 --> L360-1_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L277_T0_S2 --> L277_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L277_T1_init --> L277_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L277_accept_S5 --> L277_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L431_T0_S2 --> L431_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L431_T1_init --> L431_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L431_accept_S5 --> L431_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L442_T0_S2 --> L442_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L442_T1_init --> L442_T1_init
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L442_accept_S5 --> L442_accept_S5
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L508_T0_S2 --> L508_T0_S2
[2023-02-07 02:28:05,839 INFO  L479       ProductGenerator]: L508_T1_init --> L508_T1_init
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L508_accept_S5 --> L508_accept_S5
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: r_drop_count.writeENTRY_T0_S2 --> r_drop_count.writeENTRY_T0_S2
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: r_drop_count.writeENTRY_T1_init --> r_drop_count.writeENTRY_T1_init
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: r_drop_count.writeENTRY_accept_S5 --> r_drop_count.writeENTRY_accept_S5
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call start();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call main();
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L473_T0_S2 --> L473_T0_S2
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L473_T1_init --> L473_T1_init
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L473_accept_S5 --> L473_accept_S5
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,840 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_t_codel_control_law.apply();
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L451_T0_S2 --> L451_T0_S2
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L451_T1_init --> L451_T1_init
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: L451_accept_S5 --> L451_accept_S5
[2023-02-07 02:28:05,840 INFO  L479       ProductGenerator]: r_drop_time.writeFINAL_T0_S2 --> r_drop_time.writeFINAL_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_drop_time.writeFINAL_T1_init --> r_drop_time.writeFINAL_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_drop_time.writeFINAL_accept_S5 --> r_drop_time.writeFINAL_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_state_dropping.writeFINAL_T0_S2 --> r_state_dropping.writeFINAL_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_state_dropping.writeFINAL_T1_init --> r_state_dropping.writeFINAL_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_state_dropping.writeFINAL_accept_S5 --> r_state_dropping.writeFINAL_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L426_T0_S2 --> L426_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L426_T1_init --> L426_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L426_accept_S5 --> L426_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L462_T0_S2 --> L462_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L462_T1_init --> L462_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L462_accept_S5 --> L462_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: forwardENTRY_T0_S2 --> forwardENTRY_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: forwardENTRY_T1_init --> forwardENTRY_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: forwardENTRY_accept_S5 --> forwardENTRY_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_last_drop_count.writeENTRY_T0_S2 --> r_last_drop_count.writeENTRY_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_last_drop_count.writeENTRY_T1_init --> r_last_drop_count.writeENTRY_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: r_last_drop_count.writeENTRY_accept_S5 --> r_last_drop_count.writeENTRY_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_T0_S2 --> L394_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_T1_init --> L394_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_accept_S5 --> L394_accept_S5
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_T0_S2 --> L394_T0_S2
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_T1_init --> L394_T1_init
[2023-02-07 02:28:05,841 INFO  L479       ProductGenerator]: L394_accept_S5 --> L394_accept_S5
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L503_T0_S2 --> L503_T0_S2
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L503_T1_init --> L503_T1_init
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L503_accept_S5 --> L503_accept_S5
[2023-02-07 02:28:05,842 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-02-07 02:28:05,842 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-02-07 02:28:05,842 INFO  L483       ProductGenerator]: Handling product edge call: call havocProcedure();
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L486_T0_S2 --> L486_T0_S2
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L486_T1_init --> L486_T1_init
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L486_accept_S5 --> L486_accept_S5
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L498_T0_S2 --> L498_T0_S2
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L498_T1_init --> L498_T1_init
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L498_accept_S5 --> L498_accept_S5
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L413_T0_S2 --> L413_T0_S2
[2023-02-07 02:28:05,842 INFO  L479       ProductGenerator]: L413_T1_init --> L413_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L413_accept_S5 --> L413_accept_S5
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L443_T0_S2 --> L443_T0_S2
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L443_T1_init --> L443_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L443_accept_S5 --> L443_accept_S5
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: NoAction_1FINAL_T0_S2 --> NoAction_1FINAL_T0_S2
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: NoAction_1FINAL_T1_init --> NoAction_1FINAL_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: NoAction_1FINAL_accept_S5 --> NoAction_1FINAL_accept_S5
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L519_T0_S2 --> L519_T0_S2
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L519_T1_init --> L519_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L519_accept_S5 --> L519_accept_S5
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_T0_S2 --> L317_T0_S2
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_T1_init --> L317_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_accept_S5 --> L317_accept_S5
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_T0_S2 --> L317_T0_S2
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_T1_init --> L317_T1_init
[2023-02-07 02:28:05,843 INFO  L479       ProductGenerator]: L317_accept_S5 --> L317_accept_S5
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: r_next_drop.writeFINAL_T0_S2 --> r_next_drop.writeFINAL_T0_S2
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: r_next_drop.writeFINAL_T1_init --> r_next_drop.writeFINAL_T1_init
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: r_next_drop.writeFINAL_accept_S5 --> r_next_drop.writeFINAL_accept_S5
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L471_T0_S2 --> L471_T0_S2
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L471_T1_init --> L471_T1_init
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L471_accept_S5 --> L471_accept_S5
[2023-02-07 02:28:05,844 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,844 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,844 INFO  L483       ProductGenerator]: Handling product edge call: call r_state_dropping.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L394-1_T0_S2 --> L394-1_T0_S2
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L394-1_T1_init --> L394-1_T1_init
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L394-1_accept_S5 --> L394-1_accept_S5
[2023-02-07 02:28:05,844 INFO  L479       ProductGenerator]: L512_T0_S2 --> L512_T0_S2
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L512_T1_init --> L512_T1_init
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L512_accept_S5 --> L512_accept_S5
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L427_T0_S2 --> L427_T0_S2
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L427_T1_init --> L427_T1_init
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L427_accept_S5 --> L427_accept_S5
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L273_T0_S2 --> L273_T0_S2
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L273_T1_init --> L273_T1_init
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L273_accept_S5 --> L273_accept_S5
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L470_T0_S2 --> L470_T0_S2
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L470_T1_init --> L470_T1_init
[2023-02-07 02:28:05,845 INFO  L479       ProductGenerator]: L470_accept_S5 --> L470_accept_S5
[2023-02-07 02:28:05,845 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-02-07 02:28:05,845 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-02-07 02:28:05,845 INFO  L483       ProductGenerator]: Handling product edge call: call _parser_ParserImpl();
[2023-02-07 02:28:05,845 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_control_law_0(c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value);
[2023-02-07 02:28:05,846 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_control_law_0(c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value);
[2023-02-07 02:28:05,846 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_control_law_0(c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value);
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L500_T0_S2 --> L500_T0_S2
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L500_T1_init --> L500_T1_init
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L500_accept_S5 --> L500_accept_S5
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L476_T0_S2 --> L476_T0_S2
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L476_T1_init --> L476_T1_init
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L476_accept_S5 --> L476_accept_S5
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L464_T0_S2 --> L464_T0_S2
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L464_T1_init --> L464_T1_init
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L464_accept_S5 --> L464_accept_S5
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L569_T0_S2 --> L569_T0_S2
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L569_T1_init --> L569_T1_init
[2023-02-07 02:28:05,846 INFO  L479       ProductGenerator]: L569_accept_S5 --> L569_accept_S5
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L569_T0_S2 --> L569_T0_S2
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L569_T1_init --> L569_T1_init
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L569_accept_S5 --> L569_accept_S5
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L546_T0_S2 --> L546_T0_S2
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L546_T1_init --> L546_T1_init
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L546_accept_S5 --> L546_accept_S5
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L494_T0_S2 --> L494_T0_S2
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L494_T1_init --> L494_T1_init
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L494_accept_S5 --> L494_accept_S5
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L467_T0_S2 --> L467_T0_S2
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L467_T1_init --> L467_T1_init
[2023-02-07 02:28:05,847 INFO  L479       ProductGenerator]: L467_accept_S5 --> L467_accept_S5
[2023-02-07 02:28:05,847 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-02-07 02:28:05,848 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-02-07 02:28:05,848 INFO  L483       ProductGenerator]: Handling product edge call: call ingress();
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_T0_S2 --> L643_T0_S2
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_T1_init --> L643_T1_init
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_accept_S5 --> L643_accept_S5
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_T0_S2 --> L643_T0_S2
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_T1_init --> L643_T1_init
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L643_accept_S5 --> L643_accept_S5
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L453_T0_S2 --> L453_T0_S2
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L453_T1_init --> L453_T1_init
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L453_accept_S5 --> L453_accept_S5
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L459_T0_S2 --> L459_T0_S2
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L459_T1_init --> L459_T1_init
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: L459_accept_S5 --> L459_accept_S5
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: verifyChecksumFINAL_T0_S2 --> verifyChecksumFINAL_T0_S2
[2023-02-07 02:28:05,848 INFO  L479       ProductGenerator]: verifyChecksumFINAL_T1_init --> verifyChecksumFINAL_T1_init
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: verifyChecksumFINAL_accept_S5 --> verifyChecksumFINAL_accept_S5
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L441_T0_S2 --> L441_T0_S2
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L441_T1_init --> L441_T1_init
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L441_accept_S5 --> L441_accept_S5
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_T0_S2 --> c_codel_0_t_codel_control_law.applyENTRY_T0_S2
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_T1_init --> c_codel_0_t_codel_control_law.applyENTRY_T1_init
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_accept_S5 --> c_codel_0_t_codel_control_law.applyENTRY_accept_S5
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_T0_S2 --> c_codel_0_t_codel_control_law.applyENTRY_T0_S2
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_T1_init --> c_codel_0_t_codel_control_law.applyENTRY_T1_init
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: c_codel_0_t_codel_control_law.applyENTRY_accept_S5 --> c_codel_0_t_codel_control_law.applyENTRY_accept_S5
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L424_T0_S2 --> L424_T0_S2
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L424_T1_init --> L424_T1_init
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L424_accept_S5 --> L424_accept_S5
[2023-02-07 02:28:05,849 INFO  L479       ProductGenerator]: L320-1_T0_S2 --> L320-1_T0_S2
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L320-1_T1_init --> L320-1_T1_init
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L320-1_accept_S5 --> L320-1_accept_S5
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L320-1_T0_S2 --> L320-1_T0_S2
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L320-1_T1_init --> L320-1_T1_init
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L320-1_accept_S5 --> L320-1_accept_S5
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_init_0();
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_init_0();
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_codel_init_0();
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L438_T0_S2 --> L438_T0_S2
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L438_T1_init --> L438_T1_init
[2023-02-07 02:28:05,850 INFO  L479       ProductGenerator]: L438_accept_S5 --> L438_accept_S5
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,850 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_count.write(meta.codel.queue_id, 1);
[2023-02-07 02:28:05,851 INFO  L483       ProductGenerator]: Handling product edge call: call forwarding_0.apply();
[2023-02-07 02:28:05,851 INFO  L483       ProductGenerator]: Handling product edge call: call forwarding_0.apply();
[2023-02-07 02:28:05,851 INFO  L483       ProductGenerator]: Handling product edge call: call forwarding_0.apply();
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L382_T0_S2 --> L382_T0_S2
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L382_T1_init --> L382_T1_init
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L382_accept_S5 --> L382_accept_S5
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_T0_S2 --> L588_T0_S2
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_T1_init --> L588_T1_init
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_accept_S5 --> L588_accept_S5
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_T0_S2 --> L588_T0_S2
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_T1_init --> L588_T1_init
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L588_accept_S5 --> L588_accept_S5
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L329_T0_S2 --> L329_T0_S2
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L329_T1_init --> L329_T1_init
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L329_accept_S5 --> L329_accept_S5
[2023-02-07 02:28:05,851 INFO  L479       ProductGenerator]: L329_T0_S2 --> L329_T0_S2
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L329_T1_init --> L329_T1_init
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L329_accept_S5 --> L329_accept_S5
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0ENTRY_T0_S2 --> c_codel_0_a_codel_control_law_0ENTRY_T0_S2
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0ENTRY_T1_init --> c_codel_0_a_codel_control_law_0ENTRY_T1_init
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: c_codel_0_a_codel_control_law_0ENTRY_accept_S5 --> c_codel_0_a_codel_control_law_0ENTRY_accept_S5
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L448_T0_S2 --> L448_T0_S2
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L448_T1_init --> L448_T1_init
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L448_accept_S5 --> L448_accept_S5
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L496_T0_S2 --> L496_T0_S2
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L496_T1_init --> L496_T1_init
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: L496_accept_S5 --> L496_accept_S5
[2023-02-07 02:28:05,852 INFO  L479       ProductGenerator]: computeChecksumFINAL_T0_S2 --> computeChecksumFINAL_T0_S2
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: computeChecksumFINAL_T1_init --> computeChecksumFINAL_T1_init
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: computeChecksumFINAL_accept_S5 --> computeChecksumFINAL_accept_S5
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L422_T0_S2 --> L422_T0_S2
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L422_T1_init --> L422_T1_init
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L422_accept_S5 --> L422_accept_S5
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L447_T0_S2 --> L447_T0_S2
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L447_T1_init --> L447_T1_init
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L447_accept_S5 --> L447_accept_S5
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L482_T0_S2 --> L482_T0_S2
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L482_T1_init --> L482_T1_init
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L482_accept_S5 --> L482_accept_S5
[2023-02-07 02:28:05,853 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, meta.codel.new_drop_time);
[2023-02-07 02:28:05,853 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, meta.codel.new_drop_time);
[2023-02-07 02:28:05,853 INFO  L483       ProductGenerator]: Handling product edge call: call r_drop_time.write(meta.codel.queue_id, meta.codel.new_drop_time);
[2023-02-07 02:28:05,853 INFO  L479       ProductGenerator]: L469_T0_S2 --> L469_T0_S2
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: L469_T1_init --> L469_T1_init
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: L469_accept_S5 --> L469_accept_S5
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_T0_S2 --> _parser_ParserImplFINAL_T0_S2
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_T1_init --> _parser_ParserImplFINAL_T1_init
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: _parser_ParserImplFINAL_accept_S5 --> _parser_ParserImplFINAL_accept_S5
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: L541-1_T0_S2 --> L541-1_T0_S2
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: L541-1_T1_init --> L541-1_T1_init
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: L541-1_accept_S5 --> L541-1_accept_S5
[2023-02-07 02:28:05,854 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_go_to_drop_state_0();
[2023-02-07 02:28:05,854 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_go_to_drop_state_0();
[2023-02-07 02:28:05,854 INFO  L483       ProductGenerator]: Handling product edge call: call c_codel_0_a_go_to_drop_state_0();
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: parse_tcpENTRY_T0_S2 --> parse_tcpENTRY_T0_S2
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: parse_tcpENTRY_T1_init --> parse_tcpENTRY_T1_init
[2023-02-07 02:28:05,854 INFO  L479       ProductGenerator]: parse_tcpENTRY_accept_S5 --> parse_tcpENTRY_accept_S5
[2023-02-07 02:28:05,855 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,855 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,855 INFO  L483       ProductGenerator]: Handling product edge call: call accept();
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L267_T0_S2 --> L267_T0_S2
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L267_T1_init --> L267_T1_init
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L267_accept_S5 --> L267_accept_S5
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L432_T0_S2 --> L432_T0_S2
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L432_T1_init --> L432_T1_init
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L432_accept_S5 --> L432_accept_S5
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L445_T0_S2 --> L445_T0_S2
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L445_T1_init --> L445_T1_init
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: L445_accept_S5 --> L445_accept_S5
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_T0_S2 --> forwarding_0.applyENTRY_T0_S2
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_T1_init --> forwarding_0.applyENTRY_T1_init
[2023-02-07 02:28:05,855 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_accept_S5 --> forwarding_0.applyENTRY_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_T0_S2 --> forwarding_0.applyENTRY_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_T1_init --> forwarding_0.applyENTRY_T1_init
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: forwarding_0.applyENTRY_accept_S5 --> forwarding_0.applyENTRY_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: r_next_drop.writeENTRY_T0_S2 --> r_next_drop.writeENTRY_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: r_next_drop.writeENTRY_T1_init --> r_next_drop.writeENTRY_T1_init
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: r_next_drop.writeENTRY_accept_S5 --> r_next_drop.writeENTRY_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_T0_S2 --> egressENTRY_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_T1_init --> egressENTRY_T1_init
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_accept_S5 --> egressENTRY_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_T0_S2 --> egressENTRY_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_T1_init --> egressENTRY_T1_init
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: egressENTRY_accept_S5 --> egressENTRY_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: L415_T0_S2 --> L415_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: L415_T1_init --> L415_T1_init
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: L415_accept_S5 --> L415_accept_S5
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: L429_T0_S2 --> L429_T0_S2
[2023-02-07 02:28:05,856 INFO  L479       ProductGenerator]: L429_T1_init --> L429_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L429_accept_S5 --> L429_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L478_T0_S2 --> L478_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L478_T1_init --> L478_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L478_accept_S5 --> L478_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L449_T0_S2 --> L449_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L449_T1_init --> L449_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L449_accept_S5 --> L449_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L301-1_T0_S2 --> L301-1_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L301-1_T1_init --> L301-1_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L301-1_accept_S5 --> L301-1_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L325-1_T0_S2 --> L325-1_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L325-1_T1_init --> L325-1_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L325-1_accept_S5 --> L325-1_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L457_T0_S2 --> L457_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L457_T1_init --> L457_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L457_accept_S5 --> L457_accept_S5
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L412_T0_S2 --> L412_T0_S2
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L412_T1_init --> L412_T1_init
[2023-02-07 02:28:05,857 INFO  L479       ProductGenerator]: L412_accept_S5 --> L412_accept_S5
[2023-02-07 02:28:05,858 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-02-07 02:28:05,858 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-02-07 02:28:05,858 INFO  L483       ProductGenerator]: Handling product edge call: call verifyChecksum();
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L454_T0_S2 --> L454_T0_S2
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L454_T1_init --> L454_T1_init
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L454_accept_S5 --> L454_accept_S5
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L565_T0_S2 --> L565_T0_S2
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L565_T1_init --> L565_T1_init
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L565_accept_S5 --> L565_accept_S5
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L480_T0_S2 --> L480_T0_S2
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L480_T1_init --> L480_T1_init
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L480_accept_S5 --> L480_accept_S5
[2023-02-07 02:28:05,858 INFO  L479       ProductGenerator]: L505_T0_S2 --> L505_T0_S2
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L505_T1_init --> L505_T1_init
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L505_accept_S5 --> L505_accept_S5
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L384_T0_S2 --> L384_T0_S2
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L384_T1_init --> L384_T1_init
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L384_accept_S5 --> L384_accept_S5
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_T0_S2 --> L335_T0_S2
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_T1_init --> L335_T1_init
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_accept_S5 --> L335_accept_S5
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_T0_S2 --> L335_T0_S2
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_T1_init --> L335_T1_init
[2023-02-07 02:28:05,859 INFO  L479       ProductGenerator]: L335_accept_S5 --> L335_accept_S5
[2023-02-07 02:28:05,860 INFO  L483       ProductGenerator]: Handling product edge call: call parse_udp();
[2023-02-07 02:28:05,860 INFO  L483       ProductGenerator]: Handling product edge call: call parse_udp();
[2023-02-07 02:28:05,860 INFO  L483       ProductGenerator]: Handling product edge call: call parse_udp();
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L289_T0_S2 --> L289_T0_S2
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L289_T1_init --> L289_T1_init
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L289_accept_S5 --> L289_accept_S5
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L460_T0_S2 --> L460_T0_S2
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L460_T1_init --> L460_T1_init
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: L460_accept_S5 --> L460_accept_S5
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: forwardFINAL_T0_S2 --> forwardFINAL_T0_S2
[2023-02-07 02:28:05,860 INFO  L479       ProductGenerator]: forwardFINAL_T1_init --> forwardFINAL_T1_init
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: forwardFINAL_accept_S5 --> forwardFINAL_accept_S5
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L452_T0_S2 --> L452_T0_S2
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L452_T1_init --> L452_T1_init
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L452_accept_S5 --> L452_accept_S5
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L515_T0_S2 --> L515_T0_S2
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L515_T1_init --> L515_T1_init
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L515_accept_S5 --> L515_accept_S5
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L446_T0_S2 --> L446_T0_S2
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L446_T1_init --> L446_T1_init
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L446_accept_S5 --> L446_accept_S5
[2023-02-07 02:28:05,861 INFO  L479       ProductGenerator]: L461_T0_S2 --> L461_T0_S2
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L461_T1_init --> L461_T1_init
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L461_accept_S5 --> L461_accept_S5
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L456_T0_S2 --> L456_T0_S2
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L456_T1_init --> L456_T1_init
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L456_accept_S5 --> L456_accept_S5
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L434_T0_S2 --> L434_T0_S2
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L434_T1_init --> L434_T1_init
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L434_accept_S5 --> L434_accept_S5
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L463_T0_S2 --> L463_T0_S2
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L463_T1_init --> L463_T1_init
[2023-02-07 02:28:05,862 INFO  L479       ProductGenerator]: L463_accept_S5 --> L463_accept_S5
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L420_T0_S2 --> L420_T0_S2
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L420_T1_init --> L420_T1_init
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L420_accept_S5 --> L420_accept_S5
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L481_T0_S2 --> L481_T0_S2
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L481_T1_init --> L481_T1_init
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L481_accept_S5 --> L481_accept_S5
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L490_T0_S2 --> L490_T0_S2
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L490_T1_init --> L490_T1_init
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L490_accept_S5 --> L490_accept_S5
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L455_T0_S2 --> L455_T0_S2
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L455_T1_init --> L455_T1_init
[2023-02-07 02:28:05,863 INFO  L479       ProductGenerator]: L455_accept_S5 --> L455_accept_S5
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L409_T0_S2 --> L409_T0_S2
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L409_T1_init --> L409_T1_init
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L409_accept_S5 --> L409_accept_S5
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L286_T0_S2 --> L286_T0_S2
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L286_T1_init --> L286_T1_init
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L286_accept_S5 --> L286_accept_S5
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L407_T0_S2 --> L407_T0_S2
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L407_T1_init --> L407_T1_init
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L407_accept_S5 --> L407_accept_S5
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L495_T0_S2 --> L495_T0_S2
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L495_T1_init --> L495_T1_init
[2023-02-07 02:28:05,864 INFO  L479       ProductGenerator]: L495_accept_S5 --> L495_accept_S5
[2023-02-07 02:28:05,864 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from havocProcedureEXIT to L535
[2023-02-07 02:28:05,864 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from mainProcedureEXIT to ULTIMATE.startFINAL
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from computeChecksumEXIT to L540
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_last_drop_count.writeEXIT to L364
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from startEXIT to _parser_ParserImplFINAL
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from forwardEXIT to L394-1
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_state_dropping.writeEXIT to L317
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_state_dropping.writeEXIT to L286
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from NoAction_0EXIT to L301-1
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from c_codel_0_a_codel_init_0EXIT to L319-1
[2023-02-07 02:28:05,865 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from mainEXIT to L553-1
[2023-02-07 02:28:05,866 INFO  L749       ProductGenerator]: ==== Handling return program step: #357#return;
[2023-02-07 02:28:05,866 INFO  L749       ProductGenerator]: ==== Handling return program step: #357#return;
[2023-02-07 02:28:05,866 INFO  L749       ProductGenerator]: ==== Handling return program step: #357#return;
[2023-02-07 02:28:05,866 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from c_codel_0_t_codel_control_law.applyEXIT to L317
[2023-02-07 02:28:05,866 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from c_codel_0_t_codel_control_law.applyEXIT to L317
[2023-02-07 02:28:05,866 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_tcpEXIT to L569-1
[2023-02-07 02:28:05,866 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_ipv4EXIT to L643-1
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from ingressEXIT to L538
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from verifyChecksumEXIT to L537
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from _parser_ParserImplEXIT to L536
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_udpEXIT to L569-1
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_drop_count.writeEXIT to L350-1
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_drop_count.writeEXIT to L360-1
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_drop_count.writeEXIT to c_codel_0_a_go_to_drop_state_0FINAL
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from acceptEXIT to parse_payloadFINAL
[2023-02-07 02:28:05,867 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from acceptEXIT to parse_udpFINAL
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_next_drop.writeEXIT to c_codel_0_a_codel_control_law_0FINAL
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from egressEXIT to L539
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from forwarding_0.applyEXIT to ingressFINAL
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from c_codel_0_a_go_to_drop_state_0EXIT to L357-1
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_drop_time.writeEXIT to L325-1
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from r_drop_time.writeEXIT to L331-1
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from c_codel_0_a_codel_control_law_0EXIT to L301-1
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from parse_payloadEXIT to L588-1
[2023-02-07 02:28:05,868 INFO  L375       ProductGenerator]: ---------- Handling double product return edge from NoAction_1EXIT to L394-1
[2023-02-07 02:28:06,411 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2023-02-07 02:28:06,412 INFO  L110   BuchiProductObserver]: BuchiProgram size 1023 locations, 1303 edges
[2023-02-07 02:28:06,413 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 07.02 02:28:06 BoogieIcfgContainer
[2023-02-07 02:28:06,413 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2023-02-07 02:28:06,413 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2023-02-07 02:28:06,413 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2023-02-07 02:28:06,415 INFO  L275        PluginConnector]: BlockEncodingV2 initialized
[2023-02-07 02:28:06,416 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 07.02 02:28:06" (1/1) ...
[2023-02-07 02:28:06,447 INFO  L313           BlockEncoder]: Initial Icfg 1023 locations, 1303 edges
[2023-02-07 02:28:06,448 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2023-02-07 02:28:06,448 INFO  L263           BlockEncoder]: Using Maximize final states
[2023-02-07 02:28:06,448 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=false
[2023-02-07 02:28:06,449 INFO  L296           BlockEncoder]: Using Remove sink states
[2023-02-07 02:28:06,449 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2023-02-07 02:28:06,455 INFO  L70    emoveInfeasibleEdges]: Removed 6 edges and 3 locations because of local infeasibility
[2023-02-07 02:28:06,469 INFO  L71     MaximizeFinalStates]: 58 new accepting states
[2023-02-07 02:28:06,472 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2023-02-07 02:28:06,474 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2023-02-07 02:28:06,475 INFO  L71     MaximizeFinalStates]: 0 new accepting states
[2023-02-07 02:28:06,476 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2023-02-07 02:28:06,476 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2023-02-07 02:28:06,477 INFO  L68        ParallelComposer]: Creating parallel compositions
[2023-02-07 02:28:06,478 INFO  L313           BlockEncoder]: Encoded RCFG 1012 locations, 1287 edges
[2023-02-07 02:28:06,478 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 07.02 02:28:06 BasicIcfg
[2023-02-07 02:28:06,478 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2023-02-07 02:28:06,479 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2023-02-07 02:28:06,479 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2023-02-07 02:28:06,485 INFO  L275        PluginConnector]: BuchiAutomizer initialized
[2023-02-07 02:28:06,486 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,486 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 07.02 02:28:05" (1/6) ...
[2023-02-07 02:28:06,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f4189dd and model type p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 07.02 02:28:06, skipping insertion in model container
[2023-02-07 02:28:06,488 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.tsinghua.ss.thufv.specLang AST 07.02 02:28:05" (2/6) ...
[2023-02-07 02:28:06,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f4189dd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 07.02 02:28:06, skipping insertion in model container
[2023-02-07 02:28:06,488 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 07.02 02:28:05" (3/6) ...
[2023-02-07 02:28:06,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f4189dd and model type p4ltl_boogie.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 07.02 02:28:06, skipping insertion in model container
[2023-02-07 02:28:06,488 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.tsinghua.ss.thufv.ltl2aut AST 07.02 02:28:05" (4/6) ...
[2023-02-07 02:28:06,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f4189dd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 07.02 02:28:06, skipping insertion in model container
[2023-02-07 02:28:06,488 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,488 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 07.02 02:28:06" (5/6) ...
[2023-02-07 02:28:06,488 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f4189dd and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 07.02 02:28:06, skipping insertion in model container
[2023-02-07 02:28:06,489 INFO  L99          BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2023-02-07 02:28:06,489 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 07.02 02:28:06" (6/6) ...
[2023-02-07 02:28:06,490 INFO  L354   chiAutomizerObserver]: Analyzing ICFG p4ltl_boogie.bpl_BEv2
[2023-02-07 02:28:06,537 INFO  L255   stractBuchiCegarLoop]: Interprodecural is true
[2023-02-07 02:28:06,537 INFO  L256   stractBuchiCegarLoop]: Hoare is false
[2023-02-07 02:28:06,537 INFO  L257   stractBuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2023-02-07 02:28:06,538 INFO  L258   stractBuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2023-02-07 02:28:06,538 INFO  L259   stractBuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2023-02-07 02:28:06,538 INFO  L260   stractBuchiCegarLoop]: Difference is false
[2023-02-07 02:28:06,538 INFO  L261   stractBuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2023-02-07 02:28:06,538 INFO  L265   stractBuchiCegarLoop]: ======== Iteration 0 == of CEGAR loop == BuchiAutomatonCegarLoop ========
[2023-02-07 02:28:06,545 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 1012 states, 837 states have (on average 1.077658303464755) internal successors, (902), 819 states have internal predecessors, (902), 97 states have call successors, (97), 97 states have call predecessors, (97), 78 states have return successors, (288), 96 states have call predecessors, (288), 96 states have call successors, (288)
[2023-02-07 02:28:06,584 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:06,584 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:06,584 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:06,595 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:06,595 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:06,596 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 1 ============
[2023-02-07 02:28:06,597 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand  has 1012 states, 837 states have (on average 1.077658303464755) internal successors, (902), 819 states have internal predecessors, (902), 97 states have call successors, (97), 97 states have call predecessors, (97), 78 states have return successors, (288), 96 states have call predecessors, (288), 96 states have call successors, (288)
[2023-02-07 02:28:06,604 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:06,604 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:06,604 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:06,610 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:06,610 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:06,627 INFO  L752   eck$LassoCheckResult]: Stem: 88#ULTIMATE.startENTRY_NONWAtrue [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 705#L553-1_T1_inittrue [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 378#L553_T1_inittrue [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 854#L553_T1_init-D53true [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 904#mainENTRY_T1_inittrue [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 633#mainENTRY_T1_init-D59true [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 279#havocProcedureENTRY_T1_inittrue [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 513#L402_T1_inittrue [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 172#L403_T1_inittrue [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 451#L404_T1_inittrue [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 376#L405_T1_inittrue [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 894#L406_T1_inittrue [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 277#L407_T1_inittrue [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 419#L408_T1_inittrue [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 981#L409_T1_inittrue [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 751#L410_T1_inittrue [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 43#L411_T1_inittrue [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 592#L412_T1_inittrue [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 991#L413_T1_inittrue [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 450#L414_T1_inittrue [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 677#L415_T1_inittrue [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 218#L416_T1_inittrue [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 864#L417_T1_inittrue [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 561#L418_T1_inittrue [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 610#L419_T1_inittrue [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 131#L420_T1_inittrue [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 523#L421_T1_inittrue [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 645#L422_T1_inittrue [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 466#L423_T1_inittrue [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 927#L424_T1_inittrue [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 932#L425_T1_inittrue [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 712#L426_T1_inittrue [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 720#L427_T1_inittrue [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 531#L428_T1_inittrue [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 422#L429_T1_inittrue [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 910#L430_T1_inittrue [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 72#L431_T1_inittrue [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 405#L432_T1_inittrue [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 815#L433_T1_inittrue [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 242#L434_T1_inittrue [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 465#L435_T1_inittrue [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 478#L436_T1_inittrue [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 869#L437_T1_inittrue [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 595#L438_T1_inittrue [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 191#L439_T1_inittrue [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 652#L440_T1_inittrue [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 27#L441_T1_inittrue [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 311#L442_T1_inittrue [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 228#L443_T1_inittrue [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 486#L444_T1_inittrue [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 184#L445_T1_inittrue [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 760#L446_T1_inittrue [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 375#L447_T1_inittrue [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 928#L448_T1_inittrue [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 103#L449_T1_inittrue [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 849#L450_T1_inittrue [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 689#L451_T1_inittrue [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 773#L452_T1_inittrue [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 492#L453_T1_inittrue [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 373#L454_T1_inittrue [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 1013#L455_T1_inittrue [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 943#L456_T1_inittrue [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 162#L457_T1_inittrue [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 594#L458_T1_inittrue [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 818#L459_T1_inittrue [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 999#L460_T1_inittrue [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 238#L461_T1_inittrue [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 355#L462_T1_inittrue [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 480#L463_T1_inittrue [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 684#L464_T1_inittrue [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 156#L465_T1_inittrue [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 959#L466_T1_inittrue [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 345#L467_T1_inittrue [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 992#L468_T1_inittrue [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 935#L469_T1_inittrue [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 651#L470_T1_inittrue [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 790#L471_T1_inittrue [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 892#L472_T1_inittrue [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 837#L473_T1_inittrue [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 326#L474_T1_inittrue [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 168#L475_T1_inittrue [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 132#L476_T1_inittrue [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 393#L477_T1_inittrue [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 535#L478_T1_inittrue [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 428#L479_T1_inittrue [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 270#L480_T1_inittrue [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 830#L481_T1_inittrue [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 958#L482_T1_inittrue [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 234#L483_T1_inittrue [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 614#L484_T1_inittrue [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 813#L485_T1_inittrue [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 919#L486_T1_inittrue [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 335#L487_T1_inittrue [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 374#L488_T1_inittrue [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 583#L489_T1_inittrue [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 964#L490_T1_inittrue [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 528#L491_T1_inittrue [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 936#L492_T1_inittrue [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 623#L493_T1_inittrue [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 467#L494_T1_inittrue [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 780#L495_T1_inittrue [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 574#L496_T1_inittrue [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 394#L497_T1_inittrue [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 51#L498_T1_inittrue [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 423#L499_T1_inittrue [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 520#L500_T1_inittrue [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 557#L501_T1_inittrue [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 442#L502_T1_inittrue [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 762#L503_T1_inittrue [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 303#L504_T1_inittrue [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 883#L505_T1_inittrue [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 180#L506_T1_inittrue [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 855#L507_T1_inittrue [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 85#L508_T1_inittrue [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 285#L509_T1_inittrue [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 759#L510_T1_inittrue [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 755#L511_T1_inittrue [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 224#L512_T1_inittrue [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 65#L513_T1_inittrue [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 997#L514_T1_inittrue [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 494#L515_T1_inittrue [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 344#L516_T1_inittrue [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 235#L517_T1_inittrue [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 157#L518_T1_inittrue [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 589#L519_T1_inittrue [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 890#L520_T1_inittrue [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 484#L521_T1_inittrue [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 1005#L522_T1_inittrue [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 920#L523_T1_inittrue [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 995#havocProcedureFINAL_T1_inittrue [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 53#havocProcedureEXIT_T1_inittrue >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 644#L535-D98true [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 937#L535_T1_inittrue [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 351#L535_T1_init-D65true [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 302#_parser_ParserImplENTRY_T1_inittrue [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 418#_parser_ParserImplENTRY_T1_init-D50true [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 563#startENTRY_T1_inittrue [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 850#L643_T1_inittrue [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 39#L643-1_T1_inittrue [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 328#startEXIT_T1_inittrue >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 741#_parser_ParserImplFINAL-D110true [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 510#_parser_ParserImplFINAL_T1_inittrue [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 310#_parser_ParserImplEXIT_T1_inittrue >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 737#L536-D149true [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 553#L536_T1_inittrue [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 887#L536_T1_init-D92true [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 248#verifyChecksumFINAL_T1_inittrue [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 882#verifyChecksumEXIT_T1_inittrue >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 408#L537-D146true [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 675#L537_T1_inittrue [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 36#L537_T1_init-D71true [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 619#ingressENTRY_T1_inittrue [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 70#ingressENTRY_T1_init-D80true [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 366#forwarding_0.applyENTRY_T1_inittrue [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 926#L394_T1_inittrue [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 44#L394-1_T1_inittrue [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 654#forwarding_0.applyEXIT_T1_inittrue >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 200#ingressFINAL-D176true [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 33#ingressFINAL_T1_inittrue [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 533#ingressEXIT_T1_inittrue >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 598#L538-D143true [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 678#L538_T1_inittrue [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 1008#L538_T1_init-D17true [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 696#egressENTRY_T1_inittrue [2436] egressENTRY_T1_init-->L317_T1_init: Formula: (not (= v_standard_metadata.ingress_port_23 1))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_23}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_23}  AuxVars[]  AssignedVars[] 456#L317_T1_inittrue [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 241#L369_T1_inittrue [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 425#egressFINAL_T1_inittrue [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 876#egressEXIT_T1_inittrue >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 429#L539-D173true [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 64#L539_T1_inittrue [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 974#L539_T1_init-D35true [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 861#computeChecksumFINAL_T1_inittrue [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 968#computeChecksumEXIT_T1_inittrue >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1009#L540-D104true [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 626#L540_T1_inittrue [2365] L540_T1_init-->L541-1_T1_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 754#L541-1_T1_inittrue [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 865#L545_T1_inittrue [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 804#L546_T1_inittrue [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 284#L547_T1_inittrue [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 811#mainFINAL_T1_inittrue [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 819#mainEXIT_T1_inittrue >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 874#L553-1-D128true [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 685#L553-1_T0_S2true [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 562#L553_T0_S2true [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 807#L553_T0_S2-D52true [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 92#mainENTRY_T0_S2true [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 745#mainENTRY_T0_S2-D58true [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 447#havocProcedureENTRY_T0_S2true [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 443#L402_T0_S2true [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 362#L403_T0_S2true [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 704#L404_T0_S2true [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 101#L405_T0_S2true [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 38#L406_T0_S2true [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 133#L407_T0_S2true [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 208#L408_T0_S2true [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 452#L409_T0_S2true [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 473#L410_T0_S2true [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 173#L411_T0_S2true [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 476#L412_T0_S2true [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 426#L413_T0_S2true [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 261#L414_T0_S2true [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 586#L415_T0_S2true [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 697#L416_T0_S2true [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 193#L417_T0_S2true [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 770#L418_T0_S2true [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 555#L419_T0_S2true [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 728#L420_T0_S2true [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 209#L421_T0_S2true [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 253#L422_T0_S2true [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 556#L423_T0_S2true [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 946#L424_T0_S2true [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 106#L425_T0_S2true [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 834#L426_T0_S2true [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 507#L427_T0_S2true [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 61#L428_T0_S2true [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 582#L429_T0_S2true [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 460#L430_T0_S2true [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 181#L431_T0_S2true [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 294#L432_T0_S2true [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 136#L433_T0_S2true [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 668#L434_T0_S2true [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 986#L435_T0_S2true [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 597#L436_T0_S2true [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 940#L437_T0_S2true [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 746#L438_T0_S2true [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 318#L439_T0_S2true [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 194#L440_T0_S2true [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 669#L441_T0_S2true [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 267#L442_T0_S2true [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 902#L443_T0_S2true [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 787#L444_T0_S2true [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 618#L445_T0_S2true [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 841#L446_T0_S2true [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 314#L447_T0_S2true [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 521#L448_T0_S2true [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 82#L449_T0_S2true [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 135#L450_T0_S2true [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 573#L451_T0_S2true [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 380#L452_T0_S2true [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 608#L453_T0_S2true [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 424#L454_T0_S2true [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 591#L455_T0_S2true [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 793#L456_T0_S2true [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 90#L457_T0_S2true [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 295#L458_T0_S2true [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 621#L459_T0_S2true [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 438#L460_T0_S2true [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 323#L461_T0_S2true [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 195#L462_T0_S2true [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 725#L463_T0_S2true [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 602#L464_T0_S2true [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 588#L465_T0_S2true [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 969#L466_T0_S2true [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 12#L467_T0_S2true [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 663#L468_T0_S2true [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 903#L469_T0_S2true [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 293#L470_T0_S2true [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 954#L471_T0_S2true [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 401#L472_T0_S2true [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 734#L473_T0_S2true [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 74#L474_T0_S2true [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 187#L475_T0_S2true [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 646#L476_T0_S2true [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 970#L477_T0_S2true [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 526#L478_T0_S2true [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 99#L479_T0_S2true [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 726#L480_T0_S2true [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 56#L481_T0_S2true [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 445#L482_T0_S2true [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 585#L483_T0_S2true [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 949#L484_T0_S2true [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 672#L485_T0_S2true [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 840#L486_T0_S2true [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 915#L487_T0_S2true [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 257#L488_T0_S2true [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 719#L489_T0_S2true [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 679#L490_T0_S2true [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 605#L491_T0_S2true [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 141#L492_T0_S2true [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 988#L493_T0_S2true [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 259#L494_T0_S2true [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 174#L495_T0_S2true [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 471#L496_T0_S2true [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 437#L497_T0_S2true [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 78#L498_T0_S2true [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 511#L499_T0_S2true [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 739#L500_T0_S2true [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 178#L501_T0_S2true [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 624#L502_T0_S2true [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 858#L503_T0_S2true [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 845#L504_T0_S2true [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 16#L505_T0_S2true [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 680#L506_T0_S2true [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 686#L507_T0_S2true [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 698#L508_T0_S2true [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 71#L509_T0_S2true [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 433#L510_T0_S2true [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 145#L511_T0_S2true [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 333#L512_T0_S2true [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 148#L513_T0_S2true [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 8#L514_T0_S2true [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 67#L515_T0_S2true [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 48#L516_T0_S2true [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 397#L517_T0_S2true [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 233#L518_T0_S2true [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 599#L519_T0_S2true [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 147#L520_T0_S2true [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 905#L521_T0_S2true [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 354#L522_T0_S2true [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 895#L523_T0_S2true [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 980#havocProcedureFINAL_T0_S2true [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 814#havocProcedureEXIT_T0_S2true >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 950#L535-D97true [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2#L535_T0_S2true [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 853#L535_T0_S2-D64true [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 337#_parser_ParserImplENTRY_T0_S2true [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 265#_parser_ParserImplENTRY_T0_S2-D49true [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 550#startENTRY_T0_S2true [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 656#L643_T0_S2true [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 413#L643-1_T0_S2true [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 434#startEXIT_T0_S2true >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 543#_parser_ParserImplFINAL-D109true [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 875#_parser_ParserImplFINAL_T0_S2true [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 842#_parser_ParserImplEXIT_T0_S2true >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 97#L536-D148true [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 701#L536_T0_S2true [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 953#L536_T0_S2-D91true [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 715#verifyChecksumFINAL_T0_S2true [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 914#verifyChecksumEXIT_T0_S2true >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 154#L537-D145true [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1007#L537_T0_S2true [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 287#L537_T0_S2-D70true [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 226#ingressENTRY_T0_S2true [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 276#ingressENTRY_T0_S2-D79true [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 541#forwarding_0.applyENTRY_T0_S2true [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 673#L394_T0_S2true [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 637#L394-1_T0_S2true [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 564#forwarding_0.applyEXIT_T0_S2true >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 449#ingressFINAL-D175true [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 340#ingressFINAL_T0_S2true [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 481#ingressEXIT_T0_S2true >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 75#L538-D142true [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19#L538_T0_S2true [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 125#L538_T0_S2-D16true [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 735#egressENTRY_T0_S2true [2476] egressENTRY_T0_S2-->L317_T0_S2: Formula: (not (= v_standard_metadata.ingress_port_21 1))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_21}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_21}  AuxVars[]  AssignedVars[] 866#L317_T0_S2true [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 774#L369_T0_S2true [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 25#egressFINAL_T0_S2true [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 723#egressEXIT_T0_S2true >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 350#L539-D172true [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 334#L539_T0_S2true [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 26#L539_T0_S2-D34true [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 482#computeChecksumFINAL_T0_S2true [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 546#computeChecksumEXIT_T0_S2true >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 795#L540-D103true [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 309#L540_T0_S2true [2052] L540_T0_S2-->L541-1_T0_S2: Formula: v_forward_23  InVars {forward=v_forward_23}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[] 159#L541-1_T0_S2true [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 177#L545_T0_S2true [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 788#L546_T0_S2true [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 150#L547_T0_S2true [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 205#mainFINAL_T0_S2true [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 989#mainEXIT_T0_S2true >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 785#L553-1-D127true [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 163#L553-1_accept_S5true 
[2023-02-07 02:28:06,633 INFO  L754   eck$LassoCheckResult]: Loop: 163#L553-1_accept_S5true [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 49#L553_accept_S5true [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 55#L553_accept_S5-D54true [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 713#mainENTRY_accept_S5true [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 628#mainENTRY_accept_S5-D60true [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 268#havocProcedureENTRY_accept_S5true [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 512#L402_accept_S5true [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 836#L403_accept_S5true [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 47#L404_accept_S5true [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 852#L405_accept_S5true [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 158#L406_accept_S5true [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 474#L407_accept_S5true [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 296#L408_accept_S5true [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 682#L409_accept_S5true [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 332#L410_accept_S5true [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 930#L411_accept_S5true [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 170#L412_accept_S5true [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 462#L413_accept_S5true [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 306#L414_accept_S5true [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 11#L415_accept_S5true [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 826#L416_accept_S5true [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 527#L417_accept_S5true [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 321#L418_accept_S5true [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 305#L419_accept_S5true [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 30#L420_accept_S5true [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 956#L421_accept_S5true [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 601#L422_accept_S5true [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 918#L423_accept_S5true [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 493#L424_accept_S5true [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 367#L425_accept_S5true [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 343#L426_accept_S5true [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 530#L427_accept_S5true [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 490#L428_accept_S5true [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 496#L429_accept_S5true [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 749#L430_accept_S5true [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 113#L431_accept_S5true [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 115#L432_accept_S5true [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 844#L433_accept_S5true [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 724#L434_accept_S5true [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 100#L435_accept_S5true [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 258#L436_accept_S5true [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 89#L437_accept_S5true [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 239#L438_accept_S5true [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 693#L439_accept_S5true [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 498#L440_accept_S5true [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 370#L441_accept_S5true [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 289#L442_accept_S5true [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 392#L443_accept_S5true [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 86#L444_accept_S5true [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 139#L445_accept_S5true [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 909#L446_accept_S5true [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 324#L447_accept_S5true [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 547#L448_accept_S5true [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 896#L449_accept_S5true [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 625#L450_accept_S5true [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 611#L451_accept_S5true [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 604#L452_accept_S5true [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 545#L453_accept_S5true [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 470#L454_accept_S5true [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 134#L455_accept_S5true [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 469#L456_accept_S5true [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 825#L457_accept_S5true [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 417#L458_accept_S5true [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 421#L459_accept_S5true [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 570#L460_accept_S5true [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 700#L461_accept_S5true [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 765#L462_accept_S5true [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 912#L463_accept_S5true [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 348#L464_accept_S5true [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 843#L465_accept_S5true [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 957#L466_accept_S5true [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 667#L467_accept_S5true [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 631#L468_accept_S5true [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 116#L469_accept_S5true [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 764#L470_accept_S5true [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 292#L471_accept_S5true [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 718#L472_accept_S5true [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 963#L473_accept_S5true [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 288#L474_accept_S5true [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 404#L475_accept_S5true [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 406#L476_accept_S5true [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 201#L477_accept_S5true [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 220#L478_accept_S5true [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 873#L479_accept_S5true [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 635#L480_accept_S5true [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 192#L481_accept_S5true [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 107#L482_accept_S5true [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 768#L483_accept_S5true [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 516#L484_accept_S5true [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 73#L485_accept_S5true [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 575#L486_accept_S5true [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 662#L487_accept_S5true [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 694#L488_accept_S5true [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 57#L489_accept_S5true [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 880#L490_accept_S5true [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 127#L491_accept_S5true [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 846#L492_accept_S5true [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 431#L493_accept_S5true [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 395#L494_accept_S5true [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 660#L495_accept_S5true [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 278#L496_accept_S5true [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 683#L497_accept_S5true [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 789#L498_accept_S5true [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 45#L499_accept_S5true [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 952#L500_accept_S5true [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 998#L501_accept_S5true [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 231#L502_accept_S5true [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 313#L503_accept_S5true [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 730#L504_accept_S5true [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 35#L505_accept_S5true [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 487#L506_accept_S5true [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 802#L507_accept_S5true [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 931#L508_accept_S5true [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 893#L509_accept_S5true [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 867#L510_accept_S5true [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 731#L511_accept_S5true [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 509#L512_accept_S5true [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 829#L513_accept_S5true [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 130#L514_accept_S5true [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 600#L515_accept_S5true [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 948#L516_accept_S5true [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 164#L517_accept_S5true [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 439#L518_accept_S5true [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 606#L519_accept_S5true [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 50#L520_accept_S5true [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 108#L521_accept_S5true [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 315#L522_accept_S5true [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 153#L523_accept_S5true [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 549#havocProcedureFINAL_accept_S5true [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 580#havocProcedureEXIT_accept_S5true >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 622#L535-D99true [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 681#L535_accept_S5true [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 913#L535_accept_S5-D66true [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1000#_parser_ParserImplENTRY_accept_S5true [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 266#_parser_ParserImplENTRY_accept_S5-D51true [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 748#startENTRY_accept_S5true [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 501#L643_accept_S5true [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 160#L643-1_accept_S5true [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 204#startEXIT_accept_S5true >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 105#_parser_ParserImplFINAL-D111true [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 398#_parser_ParserImplFINAL_accept_S5true [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 776#_parser_ParserImplEXIT_accept_S5true >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 230#L536-D150true [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 791#L536_accept_S5true [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 274#L536_accept_S5-D93true [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 897#verifyChecksumFINAL_accept_S5true [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 945#verifyChecksumEXIT_accept_S5true >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 402#L537-D147true [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1001#L537_accept_S5true [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 237#L537_accept_S5-D72true [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 971#ingressENTRY_accept_S5true [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 985#ingressENTRY_accept_S5-D81true [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 454#forwarding_0.applyENTRY_accept_S5true [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 767#L394_accept_S5true [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 307#L394-1_accept_S5true [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 372#forwarding_0.applyEXIT_accept_S5true >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 215#ingressFINAL-D177true [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 221#ingressFINAL_accept_S5true [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 878#ingressEXIT_accept_S5true >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 525#L538-D144true [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 210#L538_accept_S5true [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 21#L538_accept_S5-D18true [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 165#egressENTRY_accept_S5true [1909] egressENTRY_accept_S5-->L317_accept_S5: Formula: (not (= v_standard_metadata.ingress_port_19 1))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_19}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_19}  AuxVars[]  AssignedVars[] 860#L317_accept_S5true [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 657#L369_accept_S5true [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 901#egressFINAL_accept_S5true [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 636#egressEXIT_accept_S5true >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 9#L539-D174true [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 924#L539_accept_S5true [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 275#L539_accept_S5-D36true [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 222#computeChecksumFINAL_accept_S5true [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 661#computeChecksumEXIT_accept_S5true >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 1004#L540-D105true [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 94#L540_accept_S5true [1832] L540_accept_S5-->L541-1_accept_S5: Formula: v_forward_21  InVars {forward=v_forward_21}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[] 539#L541-1_accept_S5true [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 632#L545_accept_S5true [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 823#L546_accept_S5true [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 20#L547_accept_S5true [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 102#mainFINAL_accept_S5true [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 775#mainEXIT_accept_S5true >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 416#L553-1-D129true [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 163#L553-1_accept_S5true 
[2023-02-07 02:28:06,639 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:06,640 INFO  L85        PathProgramCache]: Analyzing trace with hash 1264680214, now seen corresponding path program 1 times
[2023-02-07 02:28:06,647 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:06,647 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [2016142251]
[2023-02-07 02:28:06,648 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:06,648 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:06,735 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:06,925 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-02-07 02:28:06,951 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,081 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,089 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,124 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:07,127 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,143 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,145 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,146 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:07,148 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,158 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:07,164 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,166 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,167 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,187 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:07,190 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,194 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 166
[2023-02-07 02:28:07,197 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,201 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 183
[2023-02-07 02:28:07,224 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,242 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,248 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,260 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:07,261 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,263 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,264 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,265 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:07,266 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,267 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:07,268 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,269 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:07,270 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,271 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:07,273 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,274 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 166
[2023-02-07 02:28:07,275 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:07,277 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-02-07 02:28:07,278 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-02-07 02:28:07,278 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [2016142251]
[2023-02-07 02:28:07,279 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [2016142251] provided 1 perfect and 0 imperfect interpolant sequences
[2023-02-07 02:28:07,279 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-02-07 02:28:07,280 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2023-02-07 02:28:07,281 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1581931230]
[2023-02-07 02:28:07,281 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-02-07 02:28:07,286 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-02-07 02:28:07,286 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-02-07 02:28:07,309 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2023-02-07 02:28:07,309 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=64, Unknown=0, NotChecked=0, Total=90
[2023-02-07 02:28:07,312 INFO  L87              Difference]: Start difference. First operand  has 1012 states, 837 states have (on average 1.077658303464755) internal successors, (902), 819 states have internal predecessors, (902), 97 states have call successors, (97), 97 states have call predecessors, (97), 78 states have return successors, (288), 96 states have call predecessors, (288), 96 states have call successors, (288) Second operand  has 10 states, 10 states have (on average 32.6) internal successors, (326), 4 states have internal predecessors, (326), 3 states have call successors, (19), 7 states have call predecessors, (19), 3 states have return successors, (18), 4 states have call predecessors, (18), 3 states have call successors, (18)
[2023-02-07 02:28:10,484 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-02-07 02:28:10,485 INFO  L93              Difference]: Finished difference Result 1128 states and 1228 transitions.
[2023-02-07 02:28:10,486 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2023-02-07 02:28:10,491 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1128 states and 1228 transitions.
[2023-02-07 02:28:10,496 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:10,508 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1128 states to 1062 states and 1152 transitions.
[2023-02-07 02:28:10,509 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 66
[2023-02-07 02:28:10,509 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 66
[2023-02-07 02:28:10,509 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1062 states and 1152 transitions.
[2023-02-07 02:28:10,514 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-02-07 02:28:10,514 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 1062 states and 1152 transitions.
[2023-02-07 02:28:10,526 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1062 states and 1152 transitions.
[2023-02-07 02:28:10,549 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1062 to 1012.
[2023-02-07 02:28:10,551 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1012 states, 837 states have (on average 1.0740740740740742) internal successors, (899), 819 states have internal predecessors, (899), 97 states have call successors, (97), 97 states have call predecessors, (97), 78 states have return successors, (96), 96 states have call predecessors, (96), 96 states have call successors, (96)
[2023-02-07 02:28:10,553 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1012 states to 1012 states and 1092 transitions.
[2023-02-07 02:28:10,554 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1012 states and 1092 transitions.
[2023-02-07 02:28:10,554 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1012 states and 1092 transitions.
[2023-02-07 02:28:10,554 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 2 ============
[2023-02-07 02:28:10,554 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1012 states and 1092 transitions.
[2023-02-07 02:28:10,558 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:10,558 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:10,558 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:10,561 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:10,561 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:10,565 INFO  L752   eck$LassoCheckResult]: Stem: 2992#ULTIMATE.startENTRY_NONWA [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3079#L553-1_T1_init [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3024#L553_T1_init [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3533#L553_T1_init-D53 [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2943#mainENTRY_T1_init [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3766#mainENTRY_T1_init-D59 [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3402#havocProcedureENTRY_T1_init [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 3403#L402_T1_init [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 3234#L403_T1_init [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 3235#L404_T1_init [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 3531#L405_T1_init [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 3532#L406_T1_init [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 3398#L407_T1_init [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 3399#L408_T1_init [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 3575#L409_T1_init [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 3822#L410_T1_init [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 2979#L411_T1_init [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 2980#L412_T1_init [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 3733#L413_T1_init [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 3603#L414_T1_init [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 3604#L415_T1_init [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 3310#L416_T1_init [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 3311#L417_T1_init [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 3708#L418_T1_init [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 3709#L419_T1_init [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 3162#L420_T1_init [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 3163#L421_T1_init [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 3675#L422_T1_init [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 3621#L423_T1_init [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 3622#L424_T1_init [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 3873#L425_T1_init [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 3809#L426_T1_init [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 3810#L427_T1_init [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3681#L428_T1_init [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 3577#L429_T1_init [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 3578#L430_T1_init [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 3042#L431_T1_init [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 3043#L432_T1_init [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 3558#L433_T1_init [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 3348#L434_T1_init [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 3349#L435_T1_init [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 3620#L436_T1_init [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 3630#L437_T1_init [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 3736#L438_T1_init [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 3274#L439_T1_init [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 3275#L440_T1_init [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 2942#L441_T1_init [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 2944#L442_T1_init [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 3324#L443_T1_init [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 3325#L444_T1_init [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 3257#L445_T1_init [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 3258#L446_T1_init [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 3527#L447_T1_init [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 3528#L448_T1_init [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 3106#L449_T1_init [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 3107#L450_T1_init [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 3802#L451_T1_init [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 3803#L452_T1_init [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 3648#L453_T1_init [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 3524#L454_T1_init [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 3525#L455_T1_init [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 3876#L456_T1_init [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 3219#L457_T1_init [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 3220#L458_T1_init [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 3735#L459_T1_init [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 3850#L460_T1_init [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 3342#L461_T1_init [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 3343#L462_T1_init [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 3504#L463_T1_init [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 3632#L464_T1_init [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 3208#L465_T1_init [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 3209#L466_T1_init [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 3492#L467_T1_init [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 3493#L468_T1_init [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 3874#L469_T1_init [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 3777#L470_T1_init [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 3778#L471_T1_init [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 3838#L472_T1_init [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 3853#L473_T1_init [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 3466#L474_T1_init [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 3233#L475_T1_init [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 3165#L476_T1_init [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 3166#L477_T1_init [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 3548#L478_T1_init [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 3584#L479_T1_init [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 3389#L480_T1_init [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 3390#L481_T1_init [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 3852#L482_T1_init [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 3335#L483_T1_init [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 3336#L484_T1_init [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 3754#L485_T1_init [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 3847#L486_T1_init [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 3477#L487_T1_init [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 3478#L488_T1_init [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 3526#L489_T1_init [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 3725#L490_T1_init [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 3679#L491_T1_init [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 3680#L492_T1_init [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 3759#L493_T1_init [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 3623#L494_T1_init [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 3624#L495_T1_init [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 3720#L496_T1_init [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 3551#L497_T1_init [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 2999#L498_T1_init [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 3000#L499_T1_init [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 3579#L500_T1_init [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 3672#L501_T1_init [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 3594#L502_T1_init [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 3595#L503_T1_init [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 3440#L504_T1_init [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 3441#L505_T1_init [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 3249#L506_T1_init [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 3250#L507_T1_init [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 3073#L508_T1_init [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3074#L509_T1_init [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 3413#L510_T1_init [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 3824#L511_T1_init [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3322#L512_T1_init [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3026#L513_T1_init [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 3027#L514_T1_init [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 3649#L515_T1_init [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 3491#L516_T1_init [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 3337#L517_T1_init [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 3212#L518_T1_init [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 3213#L519_T1_init [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 3730#L520_T1_init [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 3638#L521_T1_init [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 3639#L522_T1_init [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 3871#L523_T1_init [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 3872#havocProcedureFINAL_T1_init [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3004#havocProcedureEXIT_T1_init >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3005#L535-D98 [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3438#L535_T1_init [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3499#L535_T1_init-D65 [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2969#_parser_ParserImplENTRY_T1_init [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3439#_parser_ParserImplENTRY_T1_init-D50 [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3574#startENTRY_T1_init [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3710#L643_T1_init [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 2968#L643-1_T1_init [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2970#startEXIT_T1_init >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3471#_parser_ParserImplFINAL-D110 [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3662#_parser_ParserImplFINAL_T1_init [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3448#_parser_ParserImplEXIT_T1_init >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3449#L536-D149 [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3356#L536_T1_init [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3701#L536_T1_init-D92 [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3355#verifyChecksumFINAL_T1_init [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3357#verifyChecksumEXIT_T1_init >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3561#L537-D146 [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2958#L537_T1_init [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2964#L537_T1_init-D71 [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2965#ingressENTRY_T1_init [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3038#ingressENTRY_T1_init-D80 [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3039#forwarding_0.applyENTRY_T1_init [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 3518#L394_T1_init [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 2981#L394-1_T1_init [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2982#forwarding_0.applyEXIT_T1_init >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3290#ingressFINAL-D176 [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2957#ingressFINAL_T1_init [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2959#ingressEXIT_T1_init >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3683#L538-D143 [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2898#L538_T1_init [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3795#L538_T1_init-D17 [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3806#egressENTRY_T1_init [2435] egressENTRY_T1_init-->L318_T1_init: Formula: (= v_standard_metadata.ingress_port_22 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  AuxVars[]  AssignedVars[] 3472#L318_T1_init [2069] L318_T1_init-->L319_T1_init: Formula: (= v_meta.codel.queue_id_39 v_standard_metadata.egress_port_21)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_21}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21, meta.codel.queue_id=v_meta.codel.queue_id_39}  AuxVars[]  AssignedVars[meta.codel.queue_id] 3010#L319_T1_init [1799] L319_T1_init-->L319_T1_init-D74: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3011#L319_T1_init-D74 [1988] L319_T1_init-D74-->c_codel_0_a_codel_init_0ENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3300#c_codel_0_a_codel_init_0ENTRY_T1_init [1954] c_codel_0_a_codel_init_0ENTRY_T1_init-->L266_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_39)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_39}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 3301#L266_T1_init [2705] L266_T1_init-->L267_T1_init: Formula: (= v_meta.codel.time_now_39 (mod (+ (mod v_standard_metadata.deq_timedelta_30 281474976710656) (mod v_standard_metadata.enq_timestamp_18 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, meta.codel.time_now=v_meta.codel.time_now_39}  AuxVars[]  AssignedVars[meta.codel.time_now] 3655#L267_T1_init [2244] L267_T1_init-->L269_T1_init: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_40 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_23)  InVars {meta.codel.time_now=v_meta.codel.time_now_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_40, meta.codel.new_drop_time=v_meta.codel.new_drop_time_23}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 3656#L269_T1_init [2397] L269_T1_init-->L271_T1_init: Formula: (= v_meta.codel.state_dropping_26 (select v_r_state_dropping_17 v_meta.codel.queue_id_50))  InVars {r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50}  OutVars{r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50, meta.codel.state_dropping=v_meta.codel.state_dropping_26}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3454#L271_T1_init [2058] L271_T1_init-->L273_T1_init: Formula: (= (select v_r_drop_count_18 v_meta.codel.queue_id_43) v_meta.codel.drop_cnt_36)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_36, meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3455#L273_T1_init [2403] L273_T1_init-->L275_T1_init: Formula: (= (select v_r_last_drop_count_12 v_meta.codel.queue_id_41) v_meta.codel.last_drop_cnt_17)  InVars {r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41}  OutVars{r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_17}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 3787#L275_T1_init [2426] L275_T1_init-->L277_T1_init: Formula: (= v_meta.codel.drop_next_36 (select v_r_next_drop_20 v_meta.codel.queue_id_51))  InVars {r_next_drop=v_r_next_drop_20, meta.codel.queue_id=v_meta.codel.queue_id_51}  OutVars{r_next_drop=v_r_next_drop_20, meta.codel.drop_next=v_meta.codel.drop_next_36, meta.codel.queue_id=v_meta.codel.queue_id_51}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3085#L277_T1_init [1829] L277_T1_init-->c_codel_0_a_codel_init_0FINAL_T1_init: Formula: (= v_meta.codel.drop_time_41 (select v_r_drop_time_14 v_meta.codel.queue_id_44))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_44, r_drop_time=v_r_drop_time_14}  OutVars{r_drop_time=v_r_drop_time_14, meta.codel.queue_id=v_meta.codel.queue_id_44, meta.codel.drop_time=v_meta.codel.drop_time_41}  AuxVars[]  AssignedVars[meta.codel.drop_time] 3086#c_codel_0_a_codel_init_0FINAL_T1_init [1874] c_codel_0_a_codel_init_0FINAL_T1_init-->c_codel_0_a_codel_init_0EXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3172#c_codel_0_a_codel_init_0EXIT_T1_init >[2993] c_codel_0_a_codel_init_0EXIT_T1_init-->L319-1-D125: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3461#L319-1-D125 [2098] L319-1-D125-->L319-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3183#L319-1_T1_init [1883] L319-1_T1_init-->L320-1_T1_init: Formula: (not (< v_standard_metadata.deq_timedelta_22 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  AuxVars[]  AssignedVars[] 3185#L320-1_T1_init [1993] L320-1_T1_init-->L329_T1_init: Formula: (not (= v_meta.codel.reset_drop_time_17 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  AuxVars[]  AssignedVars[] 3362#L329_T1_init [2740] L329_T1_init-->L335_T1_init: Formula: (not (= v_meta.codel.drop_time_29 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_29}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_29}  AuxVars[]  AssignedVars[] 3645#L335_T1_init [2231] L335_T1_init-->L335-2_T1_init: Formula: (not (<= v_meta.codel.drop_time_40 v_meta.codel.time_now_35))  InVars {meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  AuxVars[]  AssignedVars[] 3157#L335-2_T1_init [1866] L335-2_T1_init-->L356_T1_init: Formula: (not (= v_meta.codel.state_dropping_24 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_24}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_24}  AuxVars[]  AssignedVars[] 3159#L356_T1_init [2549] L356_T1_init-->L317_T1_init: Formula: (not (= v_meta.codel.ok_to_drop_28 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_28}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_28}  AuxVars[]  AssignedVars[] 3611#L317_T1_init [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 3207#L369_T1_init [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 3345#egressFINAL_T1_init [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3583#egressEXIT_T1_init >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3585#L539-D173 [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3023#L539_T1_init [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3025#L539_T1_init-D35 [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3860#computeChecksumFINAL_T1_init [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3861#computeChecksumEXIT_T1_init >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3878#L540-D104 [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3762#L540_T1_init [2365] L540_T1_init-->L541-1_T1_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 3719#L541-1_T1_init [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 3823#L545_T1_init [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 3841#L546_T1_init [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 3411#L547_T1_init [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 3412#mainFINAL_T1_init [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3844#mainEXIT_T1_init >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3849#L553-1-D128 [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 3799#L553-1_T0_S2 [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2870#L553_T0_S2 [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3707#L553_T0_S2-D52 [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2889#mainENTRY_T0_S2 [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3084#mainENTRY_T0_S2-D58 [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3601#havocProcedureENTRY_T0_S2 [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 3593#L402_T0_S2 [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 3509#L403_T0_S2 [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 3510#L404_T0_S2 [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 3104#L405_T0_S2 [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 2966#L406_T0_S2 [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 2967#L407_T0_S2 [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 3164#L408_T0_S2 [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 3295#L409_T0_S2 [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 3605#L410_T0_S2 [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 3236#L411_T0_S2 [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 3237#L412_T0_S2 [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 3582#L413_T0_S2 [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 3373#L414_T0_S2 [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 3374#L415_T0_S2 [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 3727#L416_T0_S2 [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 3276#L417_T0_S2 [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 3277#L418_T0_S2 [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 3702#L419_T0_S2 [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 3703#L420_T0_S2 [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 3296#L421_T0_S2 [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 3297#L422_T0_S2 [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 3363#L423_T0_S2 [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 3704#L424_T0_S2 [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 3114#L425_T0_S2 [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 3115#L426_T0_S2 [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 3657#L427_T0_S2 [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3018#L428_T0_S2 [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 3019#L429_T0_S2 [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 3615#L430_T0_S2 [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 3251#L431_T0_S2 [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 3252#L432_T0_S2 [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 3170#L433_T0_S2 [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 3171#L434_T0_S2 [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 3788#L435_T0_S2 [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 3738#L436_T0_S2 [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 3739#L437_T0_S2 [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 3821#L438_T0_S2 [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 3458#L439_T0_S2 [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 3278#L440_T0_S2 [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 3279#L441_T0_S2 [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 3384#L442_T0_S2 [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 3385#L443_T0_S2 [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 3837#L444_T0_S2 [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 3756#L445_T0_S2 [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 3757#L446_T0_S2 [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 3452#L447_T0_S2 [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 3453#L448_T0_S2 [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 3067#L449_T0_S2 [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 3068#L450_T0_S2 [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 3169#L451_T0_S2 [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 3535#L452_T0_S2 [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 3536#L453_T0_S2 [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 3580#L454_T0_S2 [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 3581#L455_T0_S2 [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 3732#L456_T0_S2 [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 3082#L457_T0_S2 [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 3083#L458_T0_S2 [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 3428#L459_T0_S2 [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 3591#L460_T0_S2 [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 3462#L461_T0_S2 [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 3280#L462_T0_S2 [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 3281#L463_T0_S2 [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 3743#L464_T0_S2 [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 3728#L465_T0_S2 [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 3729#L466_T0_S2 [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 2900#L467_T0_S2 [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 2901#L468_T0_S2 [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 3784#L469_T0_S2 [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 3426#L470_T0_S2 [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 3427#L471_T0_S2 [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 3554#L472_T0_S2 [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 3555#L473_T0_S2 [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 3046#L474_T0_S2 [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 3047#L475_T0_S2 [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 3260#L476_T0_S2 [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 3773#L477_T0_S2 [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 3677#L478_T0_S2 [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 3100#L479_T0_S2 [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 3101#L480_T0_S2 [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 3006#L481_T0_S2 [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 3007#L482_T0_S2 [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 3598#L483_T0_S2 [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 3726#L484_T0_S2 [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 3791#L485_T0_S2 [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 3792#L486_T0_S2 [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 3855#L487_T0_S2 [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 3367#L488_T0_S2 [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 3368#L489_T0_S2 [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 3794#L490_T0_S2 [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 3746#L491_T0_S2 [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 3176#L492_T0_S2 [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 3177#L493_T0_S2 [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 3369#L494_T0_S2 [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 3238#L495_T0_S2 [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 3239#L496_T0_S2 [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 3590#L497_T0_S2 [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 3056#L498_T0_S2 [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 3057#L499_T0_S2 [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 3661#L500_T0_S2 [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 3245#L501_T0_S2 [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 3246#L502_T0_S2 [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 3760#L503_T0_S2 [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 3858#L504_T0_S2 [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 2912#L505_T0_S2 [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 2913#L506_T0_S2 [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 3796#L507_T0_S2 [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 3800#L508_T0_S2 [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3040#L509_T0_S2 [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 3041#L510_T0_S2 [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 3186#L511_T0_S2 [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3187#L512_T0_S2 [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3192#L513_T0_S2 [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 2888#L514_T0_S2 [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 2890#L515_T0_S2 [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 2990#L516_T0_S2 [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 2991#L517_T0_S2 [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 3331#L518_T0_S2 [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 3332#L519_T0_S2 [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 3190#L520_T0_S2 [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 3191#L521_T0_S2 [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 3502#L522_T0_S2 [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 3503#L523_T0_S2 [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 3866#havocProcedureFINAL_T0_S2 [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3845#havocProcedureEXIT_T0_S2 >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3846#L535-D97 [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2869#L535_T0_S2 [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2871#L535_T0_S2-D64 [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3380#_parser_ParserImplENTRY_T0_S2 [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3379#_parser_ParserImplENTRY_T0_S2-D49 [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3381#startENTRY_T0_S2 [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3697#L643_T0_S2 [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 3568#L643-1_T0_S2 [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3569#startEXIT_T0_S2 >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3588#_parser_ParserImplFINAL-D109 [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3691#_parser_ParserImplFINAL_T0_S2 [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3856#_parser_ParserImplEXIT_T0_S2 >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3097#L536-D148 [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3098#L536_T0_S2 [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3808#L536_T0_S2-D91 [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3811#verifyChecksumFINAL_T0_S2 [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3812#verifyChecksumEXIT_T0_S2 >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3203#L537-D145 [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3204#L537_T0_S2 [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3414#L537_T0_S2-D70 [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2940#ingressENTRY_T0_S2 [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3321#ingressENTRY_T0_S2-D79 [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3397#forwarding_0.applyENTRY_T0_S2 [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 3690#L394_T0_S2 [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 2941#L394-1_T0_S2 [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3711#forwarding_0.applyEXIT_T0_S2 >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3602#ingressFINAL-D175 [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3483#ingressFINAL_T0_S2 [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3484#ingressEXIT_T0_S2 >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3048#L538-D142 [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2920#L538_T0_S2 [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2921#L538_T0_S2-D16 [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3152#egressENTRY_T0_S2 [2475] egressENTRY_T0_S2-->L318_T0_S2: Formula: (= v_standard_metadata.ingress_port_20 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  AuxVars[]  AssignedVars[] 3817#L318_T0_S2 [2613] L318_T0_S2-->L319_T0_S2: Formula: (= v_meta.codel.queue_id_38 v_standard_metadata.egress_port_20)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_20}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20, meta.codel.queue_id=v_meta.codel.queue_id_38}  AuxVars[]  AssignedVars[meta.codel.queue_id] 3034#L319_T0_S2 [2128] L319_T0_S2-->L319_T0_S2-D73: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3543#L319_T0_S2-D73 [2542] L319_T0_S2-D73-->c_codel_0_a_codel_init_0ENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3360#c_codel_0_a_codel_init_0ENTRY_T0_S2 [1991] c_codel_0_a_codel_init_0ENTRY_T0_S2-->L266_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_37)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_37}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 3361#L266_T0_S2 [2540] L266_T0_S2-->L267_T0_S2: Formula: (= v_meta.codel.time_now_38 (mod (+ (mod v_standard_metadata.enq_timestamp_17 281474976710656) (mod v_standard_metadata.deq_timedelta_29 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, meta.codel.time_now=v_meta.codel.time_now_38}  AuxVars[]  AssignedVars[meta.codel.time_now] 3391#L267_T0_S2 [2014] L267_T0_S2-->L269_T0_S2: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_37 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_22)  InVars {meta.codel.time_now=v_meta.codel.time_now_37}  OutVars{meta.codel.time_now=v_meta.codel.time_now_37, meta.codel.new_drop_time=v_meta.codel.new_drop_time_22}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 3392#L269_T0_S2 [2401] L269_T0_S2-->L271_T0_S2: Formula: (= v_meta.codel.state_dropping_25 (select v_r_state_dropping_16 v_meta.codel.queue_id_45))  InVars {r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45}  OutVars{r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45, meta.codel.state_dropping=v_meta.codel.state_dropping_25}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3749#L271_T0_S2 [2346] L271_T0_S2-->L273_T0_S2: Formula: (= (select v_r_drop_count_19 v_meta.codel.queue_id_47) v_meta.codel.drop_cnt_37)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_37, meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3513#L273_T0_S2 [2104] L273_T0_S2-->L275_T0_S2: Formula: (= (select v_r_last_drop_count_14 v_meta.codel.queue_id_52) v_meta.codel.last_drop_cnt_19)  InVars {r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52}  OutVars{r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_19}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 3514#L275_T0_S2 [2752] L275_T0_S2-->L277_T0_S2: Formula: (= (select v_r_next_drop_18 v_meta.codel.queue_id_40) v_meta.codel.drop_next_34)  InVars {r_next_drop=v_r_next_drop_18, meta.codel.queue_id=v_meta.codel.queue_id_40}  OutVars{r_next_drop=v_r_next_drop_18, meta.codel.drop_next=v_meta.codel.drop_next_34, meta.codel.queue_id=v_meta.codel.queue_id_40}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3033#L277_T0_S2 [1808] L277_T0_S2-->c_codel_0_a_codel_init_0FINAL_T0_S2: Formula: (= v_meta.codel.drop_time_42 (select v_r_drop_time_15 v_meta.codel.queue_id_48))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_48, r_drop_time=v_r_drop_time_15}  OutVars{r_drop_time=v_r_drop_time_15, meta.codel.queue_id=v_meta.codel.queue_id_48, meta.codel.drop_time=v_meta.codel.drop_time_42}  AuxVars[]  AssignedVars[meta.codel.drop_time] 3035#c_codel_0_a_codel_init_0FINAL_T0_S2 [2506] c_codel_0_a_codel_init_0FINAL_T0_S2-->c_codel_0_a_codel_init_0EXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3515#c_codel_0_a_codel_init_0EXIT_T0_S2 >[2896] c_codel_0_a_codel_init_0EXIT_T0_S2-->L319-1-D124: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3505#L319-1-D124 [2096] L319-1-D124-->L319-1_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3506#L319-1_T0_S2 [2439] L319-1_T0_S2-->L320-1_T0_S2: Formula: (not (< v_standard_metadata.deq_timedelta_20 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  AuxVars[]  AssignedVars[] 3375#L320-1_T0_S2 [2006] L320-1_T0_S2-->L329_T0_S2: Formula: (not (= v_meta.codel.reset_drop_time_22 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  AuxVars[]  AssignedVars[] 3376#L329_T0_S2 [2357] L329_T0_S2-->L335_T0_S2: Formula: (not (= v_meta.codel.drop_time_38 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_38}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_38}  AuxVars[]  AssignedVars[] 3758#L335_T0_S2 [2459] L335_T0_S2-->L335-2_T0_S2: Formula: (not (<= v_meta.codel.drop_time_27 v_meta.codel.time_now_27))  InVars {meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  OutVars{meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  AuxVars[]  AssignedVars[] 2933#L335-2_T0_S2 [2111] L335-2_T0_S2-->L356_T0_S2: Formula: (not (= v_meta.codel.state_dropping_20 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_20}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_20}  AuxVars[]  AssignedVars[] 3521#L356_T0_S2 [2442] L356_T0_S2-->L317_T0_S2: Formula: (not (= v_meta.codel.ok_to_drop_36 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  AuxVars[]  AssignedVars[] 3688#L317_T0_S2 [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 3347#L369_T0_S2 [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 2934#egressFINAL_T0_S2 [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2935#egressEXIT_T0_S2 >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3498#L539-D172 [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2937#L539_T0_S2 [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2936#L539_T0_S2-D34 [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2938#computeChecksumFINAL_T0_S2 [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3633#computeChecksumEXIT_T0_S2 >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3693#L540-D103 [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3447#L540_T0_S2 [2052] L540_T0_S2-->L541-1_T0_S2: Formula: v_forward_23  InVars {forward=v_forward_23}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[] 3147#L541-1_T0_S2 [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 3214#L545_T0_S2 [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 3244#L546_T0_S2 [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 3196#L547_T0_S2 [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 3197#mainFINAL_T0_S2 [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3292#mainEXIT_T0_S2 >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3836#L553-1-D127 [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 3218#L553-1_accept_S5 
[2023-02-07 02:28:10,567 INFO  L754   eck$LassoCheckResult]: Loop: 3218#L553-1_accept_S5 [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2892#L553_accept_S5 [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2993#L553_accept_S5-D54 [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2895#mainENTRY_accept_S5 [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3763#mainENTRY_accept_S5-D60 [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3386#havocProcedureENTRY_accept_S5 [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 3387#L402_accept_S5 [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 3663#L403_accept_S5 [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 2988#L404_accept_S5 [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 2989#L405_accept_S5 [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 3210#L406_accept_S5 [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 3211#L407_accept_S5 [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 3429#L408_accept_S5 [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 3430#L409_accept_S5 [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 3475#L410_accept_S5 [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 3476#L411_accept_S5 [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 3227#L412_accept_S5 [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 3228#L413_accept_S5 [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 3444#L414_accept_S5 [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 2894#L415_accept_S5 [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 2896#L416_accept_S5 [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 3678#L417_accept_S5 [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 3460#L418_accept_S5 [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 3442#L419_accept_S5 [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 2946#L420_accept_S5 [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 2947#L421_accept_S5 [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 3741#L422_accept_S5 [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 3742#L423_accept_S5 [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 3647#L424_accept_S5 [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 3517#L425_accept_S5 [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 3489#L426_accept_S5 [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 3490#L427_accept_S5 [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3643#L428_accept_S5 [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 3644#L429_accept_S5 [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 3650#L430_accept_S5 [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 3126#L431_accept_S5 [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 3127#L432_accept_S5 [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 3128#L433_accept_S5 [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 3814#L434_accept_S5 [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 3102#L435_accept_S5 [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 3103#L436_accept_S5 [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 3080#L437_accept_S5 [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 3081#L438_accept_S5 [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 3341#L439_accept_S5 [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 3651#L440_accept_S5 [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 3522#L441_accept_S5 [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 3419#L442_accept_S5 [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 3420#L443_accept_S5 [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 3075#L444_accept_S5 [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 3076#L445_accept_S5 [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 3174#L446_accept_S5 [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 3463#L447_accept_S5 [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 3464#L448_accept_S5 [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 3694#L449_accept_S5 [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 3761#L450_accept_S5 [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 3750#L451_accept_S5 [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 3745#L452_accept_S5 [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 3692#L453_accept_S5 [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 3626#L454_accept_S5 [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 3167#L455_accept_S5 [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 3168#L456_accept_S5 [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 3625#L457_accept_S5 [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 3572#L458_accept_S5 [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 3573#L459_accept_S5 [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 3576#L460_accept_S5 [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 3717#L461_accept_S5 [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 3807#L462_accept_S5 [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 3827#L463_accept_S5 [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 3495#L464_accept_S5 [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 3496#L465_accept_S5 [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 3857#L466_accept_S5 [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 3786#L467_accept_S5 [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 3764#L468_accept_S5 [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 3129#L469_accept_S5 [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 3130#L470_accept_S5 [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 3424#L471_accept_S5 [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 3425#L472_accept_S5 [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 3813#L473_accept_S5 [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 3417#L474_accept_S5 [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 3418#L475_accept_S5 [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 3557#L476_accept_S5 [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 3288#L477_accept_S5 [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 3289#L478_accept_S5 [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 3312#L479_accept_S5 [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 3768#L480_accept_S5 [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 3273#L481_accept_S5 [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 3116#L482_accept_S5 [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 3117#L483_accept_S5 [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 3669#L484_accept_S5 [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 3044#L485_accept_S5 [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 3045#L486_accept_S5 [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 3721#L487_accept_S5 [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 3783#L488_accept_S5 [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 3008#L489_accept_S5 [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 3009#L490_accept_S5 [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 3153#L491_accept_S5 [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 3154#L492_accept_S5 [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 3586#L493_accept_S5 [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 3549#L494_accept_S5 [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 3550#L495_accept_S5 [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 3400#L496_accept_S5 [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 3401#L497_accept_S5 [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 3798#L498_accept_S5 [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 2983#L499_accept_S5 [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 2984#L500_accept_S5 [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 3877#L501_accept_S5 [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 3329#L502_accept_S5 [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 3330#L503_accept_S5 [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 3451#L504_accept_S5 [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 2960#L505_accept_S5 [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 2961#L506_accept_S5 [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 3640#L507_accept_S5 [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 3840#L508_accept_S5 [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3865#L509_accept_S5 [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 3862#L510_accept_S5 [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 3816#L511_accept_S5 [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3659#L512_accept_S5 [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3660#L513_accept_S5 [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 3160#L514_accept_S5 [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 3161#L515_accept_S5 [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 3740#L516_accept_S5 [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 3221#L517_accept_S5 [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 3222#L518_accept_S5 [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 3592#L519_accept_S5 [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 2994#L520_accept_S5 [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 2995#L521_accept_S5 [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 3118#L522_accept_S5 [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 3200#L523_accept_S5 [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 3201#havocProcedureFINAL_accept_S5 [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3696#havocProcedureEXIT_accept_S5 >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3724#L535-D99 [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3112#L535_accept_S5 [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3797#L535_accept_S5-D66 [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3216#_parser_ParserImplENTRY_accept_S5 [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3382#_parser_ParserImplENTRY_accept_S5-D51 [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3383#startENTRY_accept_S5 [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 3653#L643_accept_S5 [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 3215#L643-1_accept_S5 [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3217#startEXIT_accept_S5 >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3111#_parser_ParserImplFINAL-D111 [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3113#_parser_ParserImplFINAL_accept_S5 [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3552#_parser_ParserImplEXIT_accept_S5 >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3327#L536-D150 [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3328#L536_accept_S5 [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3394#L536_accept_S5-D93 [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3395#verifyChecksumFINAL_accept_S5 [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3867#verifyChecksumEXIT_accept_S5 >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3556#L537-D147 [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3305#L537_accept_S5 [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3340#L537_accept_S5-D72 [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2955#ingressENTRY_accept_S5 [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3879#ingressENTRY_accept_S5-D81 [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3608#forwarding_0.applyENTRY_accept_S5 [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 3609#L394_accept_S5 [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 3445#L394-1_accept_S5 [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3446#forwarding_0.applyEXIT_accept_S5 >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3304#ingressFINAL-D177 [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3306#ingressFINAL_accept_S5 [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3315#ingressEXIT_accept_S5 >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3676#L538-D144 [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2883#L538_accept_S5 [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 2924#L538_accept_S5-D18 [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2925#egressENTRY_accept_S5 [1908] egressENTRY_accept_S5-->L318_accept_S5: Formula: (= v_standard_metadata.ingress_port_18 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[] 2882#L318_accept_S5 [1749] L318_accept_S5-->L319_accept_S5: Formula: (= v_meta.codel.queue_id_37 v_standard_metadata.egress_port_19)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_19}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19, meta.codel.queue_id=v_meta.codel.queue_id_37}  AuxVars[]  AssignedVars[meta.codel.queue_id] 2884#L319_accept_S5 [2164] L319_accept_S5-->L319_accept_S5-D75: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3283#L319_accept_S5-D75 [1938] L319_accept_S5-D75-->c_codel_0_a_codel_init_0ENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2910#c_codel_0_a_codel_init_0ENTRY_accept_S5 [1756] c_codel_0_a_codel_init_0ENTRY_accept_S5-->L266_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_38)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_38}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 2911#L266_accept_S5 [2685] L266_accept_S5-->L267_accept_S5: Formula: (= v_meta.codel.time_now_36 (mod (+ (mod v_standard_metadata.deq_timedelta_28 281474976710656) (mod v_standard_metadata.enq_timestamp_16 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, meta.codel.time_now=v_meta.codel.time_now_36}  AuxVars[]  AssignedVars[meta.codel.time_now] 3780#L267_accept_S5 [2392] L267_accept_S5-->L269_accept_S5: Formula: (= v_meta.codel.new_drop_time_24 (mod (+ 100000 (mod v_meta.codel.time_now_41 281474976710656)) 281474976710656))  InVars {meta.codel.time_now=v_meta.codel.time_now_41}  OutVars{meta.codel.time_now=v_meta.codel.time_now_41, meta.codel.new_drop_time=v_meta.codel.new_drop_time_24}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 3077#L269_accept_S5 [1824] L269_accept_S5-->L271_accept_S5: Formula: (= (select v_r_state_dropping_18 v_meta.codel.queue_id_53) v_meta.codel.state_dropping_27)  InVars {r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53}  OutVars{r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53, meta.codel.state_dropping=v_meta.codel.state_dropping_27}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 3078#L271_accept_S5 [2261] L271_accept_S5-->L273_accept_S5: Formula: (= (select v_r_drop_count_20 v_meta.codel.queue_id_49) v_meta.codel.drop_cnt_38)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_38, meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 3671#L273_accept_S5 [2628] L273_accept_S5-->L275_accept_S5: Formula: (= (select v_r_last_drop_count_13 v_meta.codel.queue_id_42) v_meta.codel.last_drop_cnt_18)  InVars {r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42}  OutVars{r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_18}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 3567#L275_accept_S5 [2151] L275_accept_S5-->L277_accept_S5: Formula: (= v_meta.codel.drop_next_35 (select v_r_next_drop_19 v_meta.codel.queue_id_46))  InVars {r_next_drop=v_r_next_drop_19, meta.codel.queue_id=v_meta.codel.queue_id_46}  OutVars{r_next_drop=v_r_next_drop_19, meta.codel.drop_next=v_meta.codel.drop_next_35, meta.codel.queue_id=v_meta.codel.queue_id_46}  AuxVars[]  AssignedVars[meta.codel.drop_next] 3223#L277_accept_S5 [1910] L277_accept_S5-->c_codel_0_a_codel_init_0FINAL_accept_S5: Formula: (= v_meta.codel.drop_time_43 (select v_r_drop_time_16 v_meta.codel.queue_id_54))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_54, r_drop_time=v_r_drop_time_16}  OutVars{r_drop_time=v_r_drop_time_16, meta.codel.queue_id=v_meta.codel.queue_id_54, meta.codel.drop_time=v_meta.codel.drop_time_43}  AuxVars[]  AssignedVars[meta.codel.drop_time] 3224#c_codel_0_a_codel_init_0FINAL_accept_S5 [2464] c_codel_0_a_codel_init_0FINAL_accept_S5-->c_codel_0_a_codel_init_0EXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3229#c_codel_0_a_codel_init_0EXIT_accept_S5 >[2763] c_codel_0_a_codel_init_0EXIT_accept_S5-->L319-1-D126: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3230#L319-1-D126 [1959] L319-1-D126-->L319-1_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3309#L319-1_accept_S5 [2249] L319-1_accept_S5-->L320-1_accept_S5: Formula: (not (< v_standard_metadata.deq_timedelta_26 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  AuxVars[]  AssignedVars[] 3125#L320-1_accept_S5 [2653] L320-1_accept_S5-->L329_accept_S5: Formula: (not (= v_meta.codel.reset_drop_time_19 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  AuxVars[]  AssignedVars[] 3864#L329_accept_S5 [2634] L329_accept_S5-->L335_accept_S5: Formula: (not (= v_meta.codel.drop_time_24 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_24}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_24}  AuxVars[]  AssignedVars[] 2951#L335_accept_S5 [1773] L335_accept_S5-->L335-2_accept_S5: Formula: (not (<= v_meta.codel.drop_time_32 v_meta.codel.time_now_29))  InVars {meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  OutVars{meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  AuxVars[]  AssignedVars[] 2953#L335-2_accept_S5 [1804] L335-2_accept_S5-->L356_accept_S5: Formula: (not (= v_meta.codel.state_dropping_22 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_22}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_22}  AuxVars[]  AssignedVars[] 3021#L356_accept_S5 [1853] L356_accept_S5-->L317_accept_S5: Formula: (not (= v_meta.codel.ok_to_drop_31 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  AuxVars[]  AssignedVars[] 3070#L317_accept_S5 [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 3423#L369_accept_S5 [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 3781#egressFINAL_accept_S5 [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3769#egressEXIT_accept_S5 >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2891#L539-D174 [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 2893#L539_accept_S5 [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 3396#L539_accept_S5-D36 [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3316#computeChecksumFINAL_accept_S5 [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3317#computeChecksumEXIT_accept_S5 >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3782#L540-D105 [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3090#L540_accept_S5 [1832] L540_accept_S5-->L541-1_accept_S5: Formula: v_forward_21  InVars {forward=v_forward_21}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[] 3092#L541-1_accept_S5 [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 3689#L545_accept_S5 [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 3765#L546_accept_S5 [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 2922#L547_accept_S5 [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 2923#mainFINAL_accept_S5 [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3105#mainEXIT_accept_S5 >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 3571#L553-1-D129 [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 3218#L553-1_accept_S5 
[2023-02-07 02:28:10,567 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:10,568 INFO  L85        PathProgramCache]: Analyzing trace with hash -1547500202, now seen corresponding path program 1 times
[2023-02-07 02:28:10,568 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:10,568 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1852449121]
[2023-02-07 02:28:10,568 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:10,568 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:10,594 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,650 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-02-07 02:28:10,660 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,701 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,705 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,716 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:10,717 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,722 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,723 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,723 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:10,724 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,729 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:10,730 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,730 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,731 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,737 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:10,740 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,749 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:10,750 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,751 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 186
[2023-02-07 02:28:10,752 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,754 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 203
[2023-02-07 02:28:10,764 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,779 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,783 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,791 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:10,792 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,793 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,794 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,795 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:10,796 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,797 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:10,798 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,799 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:10,799 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,800 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:10,802 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,804 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:10,805 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,806 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 186
[2023-02-07 02:28:10,807 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:10,808 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-02-07 02:28:10,808 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-02-07 02:28:10,809 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1852449121]
[2023-02-07 02:28:10,809 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1852449121] provided 1 perfect and 0 imperfect interpolant sequences
[2023-02-07 02:28:10,809 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-02-07 02:28:10,809 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2023-02-07 02:28:10,809 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1747438103]
[2023-02-07 02:28:10,809 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-02-07 02:28:10,810 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-02-07 02:28:10,810 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-02-07 02:28:10,810 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2023-02-07 02:28:10,810 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=79, Unknown=0, NotChecked=0, Total=110
[2023-02-07 02:28:10,811 INFO  L87              Difference]: Start difference. First operand 1012 states and 1092 transitions. cyclomatic complexity: 83 Second operand  has 11 states, 11 states have (on average 32.90909090909091) internal successors, (362), 4 states have internal predecessors, (362), 3 states have call successors, (21), 8 states have call predecessors, (21), 3 states have return successors, (20), 4 states have call predecessors, (20), 3 states have call successors, (20)
[2023-02-07 02:28:13,746 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-02-07 02:28:13,746 INFO  L93              Difference]: Finished difference Result 2421 states and 2624 transitions.
[2023-02-07 02:28:13,746 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 40 states. 
[2023-02-07 02:28:13,747 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2421 states and 2624 transitions.
[2023-02-07 02:28:13,754 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-02-07 02:28:13,763 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2421 states to 2421 states and 2624 transitions.
[2023-02-07 02:28:13,763 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 220
[2023-02-07 02:28:13,764 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 248
[2023-02-07 02:28:13,764 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2421 states and 2624 transitions.
[2023-02-07 02:28:13,766 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-02-07 02:28:13,766 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2421 states and 2624 transitions.
[2023-02-07 02:28:13,767 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2421 states and 2624 transitions.
[2023-02-07 02:28:13,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2421 to 1114.
[2023-02-07 02:28:13,783 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1114 states, 908 states have (on average 1.078193832599119) internal successors, (979), 899 states have internal predecessors, (979), 107 states have call successors, (107), 107 states have call predecessors, (107), 99 states have return successors, (108), 108 states have call predecessors, (108), 106 states have call successors, (108)
[2023-02-07 02:28:13,784 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1114 states to 1114 states and 1194 transitions.
[2023-02-07 02:28:13,784 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1114 states and 1194 transitions.
[2023-02-07 02:28:13,784 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1114 states and 1194 transitions.
[2023-02-07 02:28:13,785 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 3 ============
[2023-02-07 02:28:13,785 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1114 states and 1194 transitions.
[2023-02-07 02:28:13,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:13,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:13,786 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:13,789 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:13,789 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:13,792 INFO  L752   eck$LassoCheckResult]: Stem: 7321#ULTIMATE.startENTRY_NONWA [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7409#L553-1_T1_init [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7353#L553_T1_init [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7869#L553_T1_init-D53 [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7268#mainENTRY_T1_init [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8111#mainENTRY_T1_init-D59 [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7733#havocProcedureENTRY_T1_init [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 7734#L402_T1_init [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 7565#L403_T1_init [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 7566#L404_T1_init [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 7865#L405_T1_init [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7866#L406_T1_init [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7729#L407_T1_init [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 7730#L408_T1_init [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 7918#L409_T1_init [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 8178#L410_T1_init [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 7308#L411_T1_init [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 7309#L412_T1_init [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 8079#L413_T1_init [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 7947#L414_T1_init [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 7948#L415_T1_init [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 7638#L416_T1_init [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 7639#L417_T1_init [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 8053#L418_T1_init [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 8054#L419_T1_init [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 7492#L420_T1_init [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 7493#L421_T1_init [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 8018#L422_T1_init [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 7964#L423_T1_init [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 7965#L424_T1_init [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 8242#L425_T1_init [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 8162#L426_T1_init [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 8163#L427_T1_init [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 8027#L428_T1_init [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 7920#L429_T1_init [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 7921#L430_T1_init [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 7371#L431_T1_init [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 7372#L432_T1_init [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 7898#L433_T1_init [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 7675#L434_T1_init [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 7676#L435_T1_init [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 7963#L436_T1_init [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 7973#L437_T1_init [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 8082#L438_T1_init [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 7601#L439_T1_init [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 7602#L440_T1_init [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 7267#L441_T1_init [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 7269#L442_T1_init [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 7652#L443_T1_init [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 7653#L444_T1_init [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 7589#L445_T1_init [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 7590#L446_T1_init [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 7863#L447_T1_init [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 7864#L448_T1_init [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 7436#L449_T1_init [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 7437#L450_T1_init [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 8154#L451_T1_init [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 8155#L452_T1_init [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 7990#L453_T1_init [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7860#L454_T1_init [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 7861#L455_T1_init [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 8246#L456_T1_init [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 7549#L457_T1_init [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 7550#L458_T1_init [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 8081#L459_T1_init [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 8210#L460_T1_init [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 7669#L461_T1_init [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 7670#L462_T1_init [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 7839#L463_T1_init [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 7975#L464_T1_init [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 7539#L465_T1_init [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 7540#L466_T1_init [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 7827#L467_T1_init [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 7828#L468_T1_init [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 8244#L469_T1_init [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 8125#L470_T1_init [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 8126#L471_T1_init [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 8195#L472_T1_init [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 8215#L473_T1_init [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 7799#L474_T1_init [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 7558#L475_T1_init [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 7494#L476_T1_init [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 7495#L477_T1_init [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 7886#L478_T1_init [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 7927#L479_T1_init [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 7720#L480_T1_init [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 7721#L481_T1_init [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 8214#L482_T1_init [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 7663#L483_T1_init [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 7664#L484_T1_init [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 8099#L485_T1_init [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 8206#L486_T1_init [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 7812#L487_T1_init [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 7813#L488_T1_init [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 7862#L489_T1_init [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 8071#L490_T1_init [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 8025#L491_T1_init [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 8026#L492_T1_init [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 8104#L493_T1_init [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 7966#L494_T1_init [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 7967#L495_T1_init [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 8066#L496_T1_init [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 7887#L497_T1_init [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 7325#L498_T1_init [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 7326#L499_T1_init [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 7922#L500_T1_init [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 8015#L501_T1_init [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 7937#L502_T1_init [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 7938#L503_T1_init [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 7772#L504_T1_init [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 7773#L505_T1_init [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7582#L506_T1_init [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 7583#L507_T1_init [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 7403#L508_T1_init [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 7404#L509_T1_init [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 7744#L510_T1_init [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 8180#L511_T1_init [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 7649#L512_T1_init [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 7355#L513_T1_init [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 7356#L514_T1_init [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 7992#L515_T1_init [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 7826#L516_T1_init [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 7665#L517_T1_init [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7541#L518_T1_init [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 7542#L519_T1_init [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 8076#L520_T1_init [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 7980#L521_T1_init [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 7981#L522_T1_init [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 8240#L523_T1_init [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 8241#havocProcedureFINAL_T1_init [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7330#havocProcedureEXIT_T1_init >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7331#L535-D98 [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7770#L535_T1_init [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7834#L535_T1_init-D65 [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7297#_parser_ParserImplENTRY_T1_init [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7771#_parser_ParserImplENTRY_T1_init-D50 [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7917#startENTRY_T1_init [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 8056#L643_T1_init [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 7296#L643-1_T1_init [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7298#startEXIT_T1_init >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7806#_parser_ParserImplFINAL-D110 [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8004#_parser_ParserImplFINAL_T1_init [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7781#_parser_ParserImplEXIT_T1_init >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7782#L536-D149 [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7685#L536_T1_init [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8047#L536_T1_init-D92 [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7684#verifyChecksumFINAL_T1_init [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7686#verifyChecksumEXIT_T1_init >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7901#L537-D146 [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7283#L537_T1_init [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7290#L537_T1_init-D71 [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7291#ingressENTRY_T1_init [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7367#ingressENTRY_T1_init-D80 [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7368#forwarding_0.applyENTRY_T1_init [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 7853#L394_T1_init [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 7310#L394-1_T1_init [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7311#forwarding_0.applyEXIT_T1_init >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7616#ingressFINAL-D176 [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7282#ingressFINAL_T1_init [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7284#ingressEXIT_T1_init >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8029#L538-D143 [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7225#L538_T1_init [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8146#L538_T1_init-D17 [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8159#egressENTRY_T1_init [2435] egressENTRY_T1_init-->L318_T1_init: Formula: (= v_standard_metadata.ingress_port_22 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  AuxVars[]  AssignedVars[] 7807#L318_T1_init [2069] L318_T1_init-->L319_T1_init: Formula: (= v_meta.codel.queue_id_39 v_standard_metadata.egress_port_21)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_21}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21, meta.codel.queue_id=v_meta.codel.queue_id_39}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7339#L319_T1_init [1799] L319_T1_init-->L319_T1_init-D74: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7340#L319_T1_init-D74 [1988] L319_T1_init-D74-->c_codel_0_a_codel_init_0ENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7628#c_codel_0_a_codel_init_0ENTRY_T1_init [1954] c_codel_0_a_codel_init_0ENTRY_T1_init-->L266_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_39)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_39}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 7629#L266_T1_init [2705] L266_T1_init-->L267_T1_init: Formula: (= v_meta.codel.time_now_39 (mod (+ (mod v_standard_metadata.deq_timedelta_30 281474976710656) (mod v_standard_metadata.enq_timestamp_18 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, meta.codel.time_now=v_meta.codel.time_now_39}  AuxVars[]  AssignedVars[meta.codel.time_now] 7998#L267_T1_init [2244] L267_T1_init-->L269_T1_init: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_40 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_23)  InVars {meta.codel.time_now=v_meta.codel.time_now_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_40, meta.codel.new_drop_time=v_meta.codel.new_drop_time_23}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 7999#L269_T1_init [2397] L269_T1_init-->L271_T1_init: Formula: (= v_meta.codel.state_dropping_26 (select v_r_state_dropping_17 v_meta.codel.queue_id_50))  InVars {r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50}  OutVars{r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50, meta.codel.state_dropping=v_meta.codel.state_dropping_26}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 7787#L271_T1_init [2058] L271_T1_init-->L273_T1_init: Formula: (= (select v_r_drop_count_18 v_meta.codel.queue_id_43) v_meta.codel.drop_cnt_36)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_36, meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 7788#L273_T1_init [2403] L273_T1_init-->L275_T1_init: Formula: (= (select v_r_last_drop_count_12 v_meta.codel.queue_id_41) v_meta.codel.last_drop_cnt_17)  InVars {r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41}  OutVars{r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_17}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 8134#L275_T1_init [2426] L275_T1_init-->L277_T1_init: Formula: (= v_meta.codel.drop_next_36 (select v_r_next_drop_20 v_meta.codel.queue_id_51))  InVars {r_next_drop=v_r_next_drop_20, meta.codel.queue_id=v_meta.codel.queue_id_51}  OutVars{r_next_drop=v_r_next_drop_20, meta.codel.drop_next=v_meta.codel.drop_next_36, meta.codel.queue_id=v_meta.codel.queue_id_51}  AuxVars[]  AssignedVars[meta.codel.drop_next] 7414#L277_T1_init [1829] L277_T1_init-->c_codel_0_a_codel_init_0FINAL_T1_init: Formula: (= v_meta.codel.drop_time_41 (select v_r_drop_time_14 v_meta.codel.queue_id_44))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_44, r_drop_time=v_r_drop_time_14}  OutVars{r_drop_time=v_r_drop_time_14, meta.codel.queue_id=v_meta.codel.queue_id_44, meta.codel.drop_time=v_meta.codel.drop_time_41}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7415#c_codel_0_a_codel_init_0FINAL_T1_init [1874] c_codel_0_a_codel_init_0FINAL_T1_init-->c_codel_0_a_codel_init_0EXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7502#c_codel_0_a_codel_init_0EXIT_T1_init >[2993] c_codel_0_a_codel_init_0EXIT_T1_init-->L319-1-D125: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7793#L319-1-D125 [2098] L319-1-D125-->L319-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7513#L319-1_T1_init [1883] L319-1_T1_init-->L320-1_T1_init: Formula: (not (< v_standard_metadata.deq_timedelta_22 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  AuxVars[]  AssignedVars[] 7515#L320-1_T1_init [1993] L320-1_T1_init-->L329_T1_init: Formula: (not (= v_meta.codel.reset_drop_time_17 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  AuxVars[]  AssignedVars[] 7692#L329_T1_init [2740] L329_T1_init-->L335_T1_init: Formula: (not (= v_meta.codel.drop_time_29 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_29}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_29}  AuxVars[]  AssignedVars[] 7988#L335_T1_init [2231] L335_T1_init-->L335-2_T1_init: Formula: (not (<= v_meta.codel.drop_time_40 v_meta.codel.time_now_35))  InVars {meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  AuxVars[]  AssignedVars[] 7487#L335-2_T1_init [1865] L335-2_T1_init-->L341_T1_init: Formula: (= v_meta.codel.state_dropping_23 1)  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_23}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_23}  AuxVars[]  AssignedVars[] 7488#L341_T1_init [1894] L341_T1_init-->L346_T1_init: Formula: (not (= 0 v_meta.codel.ok_to_drop_26))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_26}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_26}  AuxVars[]  AssignedVars[] 7531#L346_T1_init [2707] L346_T1_init-->L317_T1_init: Formula: (not (<= v_meta.codel.drop_next_33 v_meta.codel.time_now_33))  InVars {meta.codel.drop_next=v_meta.codel.drop_next_33, meta.codel.time_now=v_meta.codel.time_now_33}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_33, meta.codel.time_now=v_meta.codel.time_now_33}  AuxVars[]  AssignedVars[] 8198#L317_T1_init [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 7673#L369_T1_init [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 7674#egressFINAL_T1_init [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7925#egressEXIT_T1_init >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7928#L539-D173 [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7352#L539_T1_init [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7354#L539_T1_init-D35 [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8222#computeChecksumFINAL_T1_init [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8223#computeChecksumEXIT_T1_init >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8250#L540-D104 [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8107#L540_T1_init [2365] L540_T1_init-->L541-1_T1_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 8065#L541-1_T1_init [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 8179#L545_T1_init [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 8201#L546_T1_init [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 8202#L547_T1_init [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 8261#mainFINAL_T1_init [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8211#mainEXIT_T1_init >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8212#L553-1-D128 [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 8151#L553-1_T0_S2 [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7201#L553_T0_S2 [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8055#L553_T0_S2-D52 [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7219#mainENTRY_T0_S2 [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7416#mainENTRY_T0_S2-D58 [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7945#havocProcedureENTRY_T0_S2 [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 7939#L402_T0_S2 [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 7845#L403_T0_S2 [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 7846#L404_T0_S2 [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 7434#L405_T0_S2 [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7294#L406_T0_S2 [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7295#L407_T0_S2 [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 7496#L408_T0_S2 [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 7623#L409_T0_S2 [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 7949#L410_T0_S2 [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 7567#L411_T0_S2 [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 7568#L412_T0_S2 [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 7926#L413_T0_S2 [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 7703#L414_T0_S2 [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 7704#L415_T0_S2 [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 8073#L416_T0_S2 [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 7604#L417_T0_S2 [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 7605#L418_T0_S2 [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 8048#L419_T0_S2 [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 8049#L420_T0_S2 [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 7624#L421_T0_S2 [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 7625#L422_T0_S2 [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 7693#L423_T0_S2 [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 8050#L424_T0_S2 [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 7444#L425_T0_S2 [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 7445#L426_T0_S2 [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 8000#L427_T0_S2 [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 7347#L428_T0_S2 [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 7348#L429_T0_S2 [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 7958#L430_T0_S2 [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 7584#L431_T0_S2 [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 7585#L432_T0_S2 [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 7500#L433_T0_S2 [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 7501#L434_T0_S2 [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 8136#L435_T0_S2 [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 8084#L436_T0_S2 [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 8085#L437_T0_S2 [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 8177#L438_T0_S2 [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 7791#L439_T0_S2 [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 7606#L440_T0_S2 [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 7607#L441_T0_S2 [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 7715#L442_T0_S2 [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 7716#L443_T0_S2 [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 8194#L444_T0_S2 [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 8101#L445_T0_S2 [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 8102#L446_T0_S2 [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 7785#L447_T0_S2 [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 7786#L448_T0_S2 [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 7396#L449_T0_S2 [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 7397#L450_T0_S2 [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 7499#L451_T0_S2 [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 7871#L452_T0_S2 [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 7872#L453_T0_S2 [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7923#L454_T0_S2 [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 7924#L455_T0_S2 [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 8078#L456_T0_S2 [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 7412#L457_T0_S2 [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 7413#L458_T0_S2 [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 7759#L459_T0_S2 [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 7934#L460_T0_S2 [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 7795#L461_T0_S2 [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 7608#L462_T0_S2 [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 7609#L463_T0_S2 [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 8089#L464_T0_S2 [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 8074#L465_T0_S2 [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 8075#L466_T0_S2 [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 7230#L467_T0_S2 [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 7231#L468_T0_S2 [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 8132#L469_T0_S2 [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 7757#L470_T0_S2 [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 7758#L471_T0_S2 [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 7894#L472_T0_S2 [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 7895#L473_T0_S2 [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 7375#L474_T0_S2 [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 7376#L475_T0_S2 [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 7593#L476_T0_S2 [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 8119#L477_T0_S2 [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 8023#L478_T0_S2 [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 7430#L479_T0_S2 [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 7431#L480_T0_S2 [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 7335#L481_T0_S2 [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 7336#L482_T0_S2 [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 7942#L483_T0_S2 [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 8072#L484_T0_S2 [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 8141#L485_T0_S2 [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 8142#L486_T0_S2 [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 8217#L487_T0_S2 [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 7697#L488_T0_S2 [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 7698#L489_T0_S2 [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 8147#L490_T0_S2 [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 8092#L491_T0_S2 [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 7506#L492_T0_S2 [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 7507#L493_T0_S2 [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 7699#L494_T0_S2 [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 7569#L495_T0_S2 [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 7570#L496_T0_S2 [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 7933#L497_T0_S2 [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 7385#L498_T0_S2 [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 7386#L499_T0_S2 [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 8005#L500_T0_S2 [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 7576#L501_T0_S2 [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 7577#L502_T0_S2 [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 8105#L503_T0_S2 [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 8220#L504_T0_S2 [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 7240#L505_T0_S2 [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7241#L506_T0_S2 [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 8148#L507_T0_S2 [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 8152#L508_T0_S2 [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 7369#L509_T0_S2 [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 7370#L510_T0_S2 [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 7516#L511_T0_S2 [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 7517#L512_T0_S2 [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 7522#L513_T0_S2 [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 7218#L514_T0_S2 [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 7220#L515_T0_S2 [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 7319#L516_T0_S2 [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 7320#L517_T0_S2 [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7661#L518_T0_S2 [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 7662#L519_T0_S2 [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 7520#L520_T0_S2 [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 7521#L521_T0_S2 [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 7837#L522_T0_S2 [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 7838#L523_T0_S2 [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 8234#havocProcedureFINAL_T0_S2 [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8207#havocProcedureEXIT_T0_S2 >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8208#L535-D97 [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7200#L535_T0_S2 [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7202#L535_T0_S2-D64 [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7711#_parser_ParserImplENTRY_T0_S2 [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7710#_parser_ParserImplENTRY_T0_S2-D49 [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7712#startENTRY_T0_S2 [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 8043#L643_T0_S2 [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 7911#L643-1_T0_S2 [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7912#startEXIT_T0_S2 >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7931#_parser_ParserImplFINAL-D109 [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8037#_parser_ParserImplFINAL_T0_S2 [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8218#_parser_ParserImplEXIT_T0_S2 >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7427#L536-D148 [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7428#L536_T0_S2 [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8161#L536_T0_S2-D91 [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8164#verifyChecksumFINAL_T0_S2 [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8165#verifyChecksumEXIT_T0_S2 >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7534#L537-D145 [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7535#L537_T0_S2 [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7747#L537_T0_S2-D70 [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7272#ingressENTRY_T0_S2 [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7650#ingressENTRY_T0_S2-D79 [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7728#forwarding_0.applyENTRY_T0_S2 [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 8036#L394_T0_S2 [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 7273#L394-1_T0_S2 [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8057#forwarding_0.applyEXIT_T0_S2 >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7946#ingressFINAL-D175 [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7818#ingressFINAL_T0_S2 [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7819#ingressEXIT_T0_S2 >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7377#L538-D142 [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7248#L538_T0_S2 [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7249#L538_T0_S2-D16 [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7482#egressENTRY_T0_S2 [2475] egressENTRY_T0_S2-->L318_T0_S2: Formula: (= v_standard_metadata.ingress_port_20 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  AuxVars[]  AssignedVars[] 8171#L318_T0_S2 [2613] L318_T0_S2-->L319_T0_S2: Formula: (= v_meta.codel.queue_id_38 v_standard_metadata.egress_port_20)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_20}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20, meta.codel.queue_id=v_meta.codel.queue_id_38}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7363#L319_T0_S2 [2128] L319_T0_S2-->L319_T0_S2-D73: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7879#L319_T0_S2-D73 [2542] L319_T0_S2-D73-->c_codel_0_a_codel_init_0ENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7690#c_codel_0_a_codel_init_0ENTRY_T0_S2 [1991] c_codel_0_a_codel_init_0ENTRY_T0_S2-->L266_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_37)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_37}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 7691#L266_T0_S2 [2540] L266_T0_S2-->L267_T0_S2: Formula: (= v_meta.codel.time_now_38 (mod (+ (mod v_standard_metadata.enq_timestamp_17 281474976710656) (mod v_standard_metadata.deq_timedelta_29 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, meta.codel.time_now=v_meta.codel.time_now_38}  AuxVars[]  AssignedVars[meta.codel.time_now] 7722#L267_T0_S2 [2014] L267_T0_S2-->L269_T0_S2: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_37 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_22)  InVars {meta.codel.time_now=v_meta.codel.time_now_37}  OutVars{meta.codel.time_now=v_meta.codel.time_now_37, meta.codel.new_drop_time=v_meta.codel.new_drop_time_22}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 7723#L269_T0_S2 [2401] L269_T0_S2-->L271_T0_S2: Formula: (= v_meta.codel.state_dropping_25 (select v_r_state_dropping_16 v_meta.codel.queue_id_45))  InVars {r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45}  OutVars{r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45, meta.codel.state_dropping=v_meta.codel.state_dropping_25}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 8094#L271_T0_S2 [2346] L271_T0_S2-->L273_T0_S2: Formula: (= (select v_r_drop_count_19 v_meta.codel.queue_id_47) v_meta.codel.drop_cnt_37)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_37, meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 7848#L273_T0_S2 [2104] L273_T0_S2-->L275_T0_S2: Formula: (= (select v_r_last_drop_count_14 v_meta.codel.queue_id_52) v_meta.codel.last_drop_cnt_19)  InVars {r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52}  OutVars{r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_19}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 7849#L275_T0_S2 [2752] L275_T0_S2-->L277_T0_S2: Formula: (= (select v_r_next_drop_18 v_meta.codel.queue_id_40) v_meta.codel.drop_next_34)  InVars {r_next_drop=v_r_next_drop_18, meta.codel.queue_id=v_meta.codel.queue_id_40}  OutVars{r_next_drop=v_r_next_drop_18, meta.codel.drop_next=v_meta.codel.drop_next_34, meta.codel.queue_id=v_meta.codel.queue_id_40}  AuxVars[]  AssignedVars[meta.codel.drop_next] 7362#L277_T0_S2 [1808] L277_T0_S2-->c_codel_0_a_codel_init_0FINAL_T0_S2: Formula: (= v_meta.codel.drop_time_42 (select v_r_drop_time_15 v_meta.codel.queue_id_48))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_48, r_drop_time=v_r_drop_time_15}  OutVars{r_drop_time=v_r_drop_time_15, meta.codel.queue_id=v_meta.codel.queue_id_48, meta.codel.drop_time=v_meta.codel.drop_time_42}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7364#c_codel_0_a_codel_init_0FINAL_T0_S2 [2506] c_codel_0_a_codel_init_0FINAL_T0_S2-->c_codel_0_a_codel_init_0EXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7850#c_codel_0_a_codel_init_0EXIT_T0_S2 >[2896] c_codel_0_a_codel_init_0EXIT_T0_S2-->L319-1-D124: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7841#L319-1-D124 [2096] L319-1-D124-->L319-1_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7842#L319-1_T0_S2 [2439] L319-1_T0_S2-->L320-1_T0_S2: Formula: (not (< v_standard_metadata.deq_timedelta_20 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  AuxVars[]  AssignedVars[] 7705#L320-1_T0_S2 [2006] L320-1_T0_S2-->L329_T0_S2: Formula: (not (= v_meta.codel.reset_drop_time_22 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  AuxVars[]  AssignedVars[] 7706#L329_T0_S2 [2357] L329_T0_S2-->L335_T0_S2: Formula: (not (= v_meta.codel.drop_time_38 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_38}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_38}  AuxVars[]  AssignedVars[] 8103#L335_T0_S2 [2459] L335_T0_S2-->L335-2_T0_S2: Formula: (not (<= v_meta.codel.drop_time_27 v_meta.codel.time_now_27))  InVars {meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  OutVars{meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  AuxVars[]  AssignedVars[] 7261#L335-2_T0_S2 [2111] L335-2_T0_S2-->L356_T0_S2: Formula: (not (= v_meta.codel.state_dropping_20 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_20}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_20}  AuxVars[]  AssignedVars[] 7857#L356_T0_S2 [2442] L356_T0_S2-->L317_T0_S2: Formula: (not (= v_meta.codel.ok_to_drop_36 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  AuxVars[]  AssignedVars[] 8034#L317_T0_S2 [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 7678#L369_T0_S2 [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 7262#egressFINAL_T0_S2 [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7263#egressEXIT_T0_S2 >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7833#L539-D172 [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7265#L539_T0_S2 [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7264#L539_T0_S2-D34 [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7266#computeChecksumFINAL_T0_S2 [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7976#computeChecksumEXIT_T0_S2 >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8039#L540-D103 [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7780#L540_T0_S2 [2052] L540_T0_S2-->L541-1_T0_S2: Formula: v_forward_23  InVars {forward=v_forward_23}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[] 7477#L541-1_T0_S2 [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 7545#L545_T0_S2 [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 7575#L546_T0_S2 [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 7526#L547_T0_S2 [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 7527#mainFINAL_T0_S2 [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7620#mainEXIT_T0_S2 >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8192#L553-1-D127 [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 7551#L553-1_accept_S5 
[2023-02-07 02:28:13,793 INFO  L754   eck$LassoCheckResult]: Loop: 7551#L553-1_accept_S5 [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7222#L553_accept_S5 [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7322#L553_accept_S5-D54 [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7228#mainENTRY_accept_S5 [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8108#mainENTRY_accept_S5-D60 [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7717#havocProcedureENTRY_accept_S5 [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 7718#L402_accept_S5 [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 8006#L403_accept_S5 [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 7317#L404_accept_S5 [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 7318#L405_accept_S5 [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 7543#L406_accept_S5 [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 7544#L407_accept_S5 [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 7760#L408_accept_S5 [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 7761#L409_accept_S5 [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 7810#L410_accept_S5 [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 7811#L411_accept_S5 [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 7561#L412_accept_S5 [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 7562#L413_accept_S5 [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 7776#L414_accept_S5 [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 7227#L415_accept_S5 [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 7229#L416_accept_S5 [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 8024#L417_accept_S5 [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 7794#L418_accept_S5 [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 7774#L419_accept_S5 [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 7274#L420_accept_S5 [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 7275#L421_accept_S5 [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 8087#L422_accept_S5 [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 8088#L423_accept_S5 [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 7991#L424_accept_S5 [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 7854#L425_accept_S5 [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 7824#L426_accept_S5 [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 7825#L427_accept_S5 [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 7986#L428_accept_S5 [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 7987#L429_accept_S5 [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 7993#L430_accept_S5 [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 7456#L431_accept_S5 [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 7457#L432_accept_S5 [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 7458#L433_accept_S5 [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 8167#L434_accept_S5 [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 7432#L435_accept_S5 [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 7433#L436_accept_S5 [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 7410#L437_accept_S5 [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 7411#L438_accept_S5 [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 7671#L439_accept_S5 [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 7995#L440_accept_S5 [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 7858#L441_accept_S5 [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 7750#L442_accept_S5 [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 7751#L443_accept_S5 [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 7405#L444_accept_S5 [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 7406#L445_accept_S5 [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 7504#L446_accept_S5 [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 7796#L447_accept_S5 [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 7797#L448_accept_S5 [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 8040#L449_accept_S5 [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 8106#L450_accept_S5 [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 8095#L451_accept_S5 [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 8091#L452_accept_S5 [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 8038#L453_accept_S5 [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 7969#L454_accept_S5 [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 7497#L455_accept_S5 [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 7498#L456_accept_S5 [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 7968#L457_accept_S5 [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 7915#L458_accept_S5 [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 7916#L459_accept_S5 [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 7919#L460_accept_S5 [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 8063#L461_accept_S5 [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 8160#L462_accept_S5 [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 8183#L463_accept_S5 [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 7830#L464_accept_S5 [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 7831#L465_accept_S5 [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 8219#L466_accept_S5 [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 8135#L467_accept_S5 [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 8109#L468_accept_S5 [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 7459#L469_accept_S5 [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 7460#L470_accept_S5 [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 7755#L471_accept_S5 [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 7756#L472_accept_S5 [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 8166#L473_accept_S5 [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 7748#L474_accept_S5 [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 7749#L475_accept_S5 [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 7897#L476_accept_S5 [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 7617#L477_accept_S5 [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 7618#L478_accept_S5 [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 7642#L479_accept_S5 [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 8113#L480_accept_S5 [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 7603#L481_accept_S5 [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 7446#L482_accept_S5 [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 7447#L483_accept_S5 [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 8012#L484_accept_S5 [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 7373#L485_accept_S5 [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 7374#L486_accept_S5 [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 8067#L487_accept_S5 [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 8131#L488_accept_S5 [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 7337#L489_accept_S5 [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 7338#L490_accept_S5 [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 7485#L491_accept_S5 [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 7486#L492_accept_S5 [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 7929#L493_accept_S5 [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 7888#L494_accept_S5 [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 7889#L495_accept_S5 [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 7731#L496_accept_S5 [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 7732#L497_accept_S5 [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 8150#L498_accept_S5 [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 7312#L499_accept_S5 [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 7313#L500_accept_S5 [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 8249#L501_accept_S5 [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 7657#L502_accept_S5 [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 7658#L503_accept_S5 [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 7784#L504_accept_S5 [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 7288#L505_accept_S5 [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7289#L506_accept_S5 [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 7983#L507_accept_S5 [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 8200#L508_accept_S5 [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 8233#L509_accept_S5 [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 8227#L510_accept_S5 [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 8169#L511_accept_S5 [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 8002#L512_accept_S5 [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 8003#L513_accept_S5 [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 7490#L514_accept_S5 [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 7491#L515_accept_S5 [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 8086#L516_accept_S5 [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 7552#L517_accept_S5 [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7553#L518_accept_S5 [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 7935#L519_accept_S5 [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 7323#L520_accept_S5 [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 7324#L521_accept_S5 [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 7448#L522_accept_S5 [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 7532#L523_accept_S5 [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 7533#havocProcedureFINAL_accept_S5 [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8042#havocProcedureEXIT_accept_S5 >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8070#L535-D99 [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7442#L535_accept_S5 [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8149#L535_accept_S5-D66 [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7547#_parser_ParserImplENTRY_accept_S5 [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7713#_parser_ParserImplENTRY_accept_S5-D51 [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7714#startENTRY_accept_S5 [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 7996#L643_accept_S5 [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 7546#L643-1_accept_S5 [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7548#startEXIT_accept_S5 >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7441#_parser_ParserImplFINAL-D111 [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7443#_parser_ParserImplFINAL_accept_S5 [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7891#_parser_ParserImplEXIT_accept_S5 >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7655#L536-D150 [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7656#L536_accept_S5 [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7725#L536_accept_S5-D93 [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7726#verifyChecksumFINAL_accept_S5 [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8235#verifyChecksumEXIT_accept_S5 >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7896#L537-D147 [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7633#L537_accept_S5 [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7668#L537_accept_S5-D72 [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7286#ingressENTRY_accept_S5 [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 8251#ingressENTRY_accept_S5-D81 [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7951#forwarding_0.applyENTRY_accept_S5 [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 7952#L394_accept_S5 [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 7777#L394-1_accept_S5 [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7778#forwarding_0.applyEXIT_accept_S5 >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7632#ingressFINAL-D177 [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7634#ingressFINAL_accept_S5 [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7643#ingressEXIT_accept_S5 >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8022#L538-D144 [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7216#L538_accept_S5 [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7252#L538_accept_S5-D18 [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7253#egressENTRY_accept_S5 [1908] egressENTRY_accept_S5-->L318_accept_S5: Formula: (= v_standard_metadata.ingress_port_18 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[] 7215#L318_accept_S5 [1749] L318_accept_S5-->L319_accept_S5: Formula: (= v_meta.codel.queue_id_37 v_standard_metadata.egress_port_19)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_19}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19, meta.codel.queue_id=v_meta.codel.queue_id_37}  AuxVars[]  AssignedVars[meta.codel.queue_id] 7217#L319_accept_S5 [2164] L319_accept_S5-->L319_accept_S5-D75: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7611#L319_accept_S5-D75 [1938] L319_accept_S5-D75-->c_codel_0_a_codel_init_0ENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7238#c_codel_0_a_codel_init_0ENTRY_accept_S5 [1756] c_codel_0_a_codel_init_0ENTRY_accept_S5-->L266_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_38)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_38}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 7239#L266_accept_S5 [2685] L266_accept_S5-->L267_accept_S5: Formula: (= v_meta.codel.time_now_36 (mod (+ (mod v_standard_metadata.deq_timedelta_28 281474976710656) (mod v_standard_metadata.enq_timestamp_16 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, meta.codel.time_now=v_meta.codel.time_now_36}  AuxVars[]  AssignedVars[meta.codel.time_now] 8128#L267_accept_S5 [2392] L267_accept_S5-->L269_accept_S5: Formula: (= v_meta.codel.new_drop_time_24 (mod (+ 100000 (mod v_meta.codel.time_now_41 281474976710656)) 281474976710656))  InVars {meta.codel.time_now=v_meta.codel.time_now_41}  OutVars{meta.codel.time_now=v_meta.codel.time_now_41, meta.codel.new_drop_time=v_meta.codel.new_drop_time_24}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 7407#L269_accept_S5 [1824] L269_accept_S5-->L271_accept_S5: Formula: (= (select v_r_state_dropping_18 v_meta.codel.queue_id_53) v_meta.codel.state_dropping_27)  InVars {r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53}  OutVars{r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53, meta.codel.state_dropping=v_meta.codel.state_dropping_27}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 7408#L271_accept_S5 [2261] L271_accept_S5-->L273_accept_S5: Formula: (= (select v_r_drop_count_20 v_meta.codel.queue_id_49) v_meta.codel.drop_cnt_38)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_38, meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 8014#L273_accept_S5 [2628] L273_accept_S5-->L275_accept_S5: Formula: (= (select v_r_last_drop_count_13 v_meta.codel.queue_id_42) v_meta.codel.last_drop_cnt_18)  InVars {r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42}  OutVars{r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_18}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 7910#L275_accept_S5 [2151] L275_accept_S5-->L277_accept_S5: Formula: (= v_meta.codel.drop_next_35 (select v_r_next_drop_19 v_meta.codel.queue_id_46))  InVars {r_next_drop=v_r_next_drop_19, meta.codel.queue_id=v_meta.codel.queue_id_46}  OutVars{r_next_drop=v_r_next_drop_19, meta.codel.drop_next=v_meta.codel.drop_next_35, meta.codel.queue_id=v_meta.codel.queue_id_46}  AuxVars[]  AssignedVars[meta.codel.drop_next] 7554#L277_accept_S5 [1910] L277_accept_S5-->c_codel_0_a_codel_init_0FINAL_accept_S5: Formula: (= v_meta.codel.drop_time_43 (select v_r_drop_time_16 v_meta.codel.queue_id_54))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_54, r_drop_time=v_r_drop_time_16}  OutVars{r_drop_time=v_r_drop_time_16, meta.codel.queue_id=v_meta.codel.queue_id_54, meta.codel.drop_time=v_meta.codel.drop_time_43}  AuxVars[]  AssignedVars[meta.codel.drop_time] 7555#c_codel_0_a_codel_init_0FINAL_accept_S5 [2464] c_codel_0_a_codel_init_0FINAL_accept_S5-->c_codel_0_a_codel_init_0EXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7563#c_codel_0_a_codel_init_0EXIT_accept_S5 >[2763] c_codel_0_a_codel_init_0EXIT_accept_S5-->L319-1-D126: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7564#L319-1-D126 [1959] L319-1-D126-->L319-1_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7637#L319-1_accept_S5 [2249] L319-1_accept_S5-->L320-1_accept_S5: Formula: (not (< v_standard_metadata.deq_timedelta_26 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  AuxVars[]  AssignedVars[] 7455#L320-1_accept_S5 [2653] L320-1_accept_S5-->L329_accept_S5: Formula: (not (= v_meta.codel.reset_drop_time_19 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  AuxVars[]  AssignedVars[] 8231#L329_accept_S5 [2634] L329_accept_S5-->L335_accept_S5: Formula: (not (= v_meta.codel.drop_time_24 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_24}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_24}  AuxVars[]  AssignedVars[] 7279#L335_accept_S5 [1773] L335_accept_S5-->L335-2_accept_S5: Formula: (not (<= v_meta.codel.drop_time_32 v_meta.codel.time_now_29))  InVars {meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  OutVars{meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  AuxVars[]  AssignedVars[] 7281#L335-2_accept_S5 [1804] L335-2_accept_S5-->L356_accept_S5: Formula: (not (= v_meta.codel.state_dropping_22 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_22}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_22}  AuxVars[]  AssignedVars[] 7351#L356_accept_S5 [1853] L356_accept_S5-->L317_accept_S5: Formula: (not (= v_meta.codel.ok_to_drop_31 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  AuxVars[]  AssignedVars[] 7399#L317_accept_S5 [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 7754#L369_accept_S5 [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 8129#egressFINAL_accept_S5 [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8114#egressEXIT_accept_S5 >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7221#L539-D174 [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7223#L539_accept_S5 [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 7727#L539_accept_S5-D36 [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7644#computeChecksumFINAL_accept_S5 [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7645#computeChecksumEXIT_accept_S5 >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 8130#L540-D105 [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7420#L540_accept_S5 [1832] L540_accept_S5-->L541-1_accept_S5: Formula: v_forward_21  InVars {forward=v_forward_21}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[] 7422#L541-1_accept_S5 [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 8035#L545_accept_S5 [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 8110#L546_accept_S5 [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 7250#L547_accept_S5 [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 7251#mainFINAL_accept_S5 [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7435#mainEXIT_accept_S5 >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 7914#L553-1-D129 [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 7551#L553-1_accept_S5 
[2023-02-07 02:28:13,794 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:13,794 INFO  L85        PathProgramCache]: Analyzing trace with hash 1792381205, now seen corresponding path program 1 times
[2023-02-07 02:28:13,795 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:13,795 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1635590961]
[2023-02-07 02:28:13,795 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:13,795 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:13,814 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:13,907 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-02-07 02:28:13,919 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:13,974 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:13,980 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:13,993 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:13,995 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,001 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:14,002 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,003 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:14,004 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,009 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:14,010 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,011 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:14,012 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,021 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:14,024 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,032 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:14,034 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,035 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 187
[2023-02-07 02:28:14,036 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,038 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 204
[2023-02-07 02:28:14,046 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,061 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:14,068 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,077 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:14,079 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,080 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:14,081 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,082 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:14,083 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,084 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:14,085 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,086 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:14,087 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,088 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:14,090 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,093 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:14,094 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,095 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 186
[2023-02-07 02:28:14,096 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:14,097 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-02-07 02:28:14,097 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-02-07 02:28:14,097 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1635590961]
[2023-02-07 02:28:14,097 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1635590961] provided 1 perfect and 0 imperfect interpolant sequences
[2023-02-07 02:28:14,097 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-02-07 02:28:14,097 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2023-02-07 02:28:14,097 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [498492510]
[2023-02-07 02:28:14,098 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-02-07 02:28:14,098 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-02-07 02:28:14,098 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-02-07 02:28:14,098 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2023-02-07 02:28:14,098 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=61, Unknown=0, NotChecked=0, Total=90
[2023-02-07 02:28:14,099 INFO  L87              Difference]: Start difference. First operand 1114 states and 1194 transitions. cyclomatic complexity: 83 Second operand  has 10 states, 10 states have (on average 36.3) internal successors, (363), 3 states have internal predecessors, (363), 2 states have call successors, (21), 8 states have call predecessors, (21), 3 states have return successors, (20), 3 states have call predecessors, (20), 2 states have call successors, (20)
[2023-02-07 02:28:15,215 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-02-07 02:28:15,215 INFO  L93              Difference]: Finished difference Result 1603 states and 1723 transitions.
[2023-02-07 02:28:15,216 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 22 states. 
[2023-02-07 02:28:15,216 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1603 states and 1723 transitions.
[2023-02-07 02:28:15,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-02-07 02:28:15,226 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1603 states to 1603 states and 1723 transitions.
[2023-02-07 02:28:15,226 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 127
[2023-02-07 02:28:15,226 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2023-02-07 02:28:15,227 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1603 states and 1723 transitions.
[2023-02-07 02:28:15,228 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-02-07 02:28:15,228 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 1603 states and 1723 transitions.
[2023-02-07 02:28:15,229 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1603 states and 1723 transitions.
[2023-02-07 02:28:15,241 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1603 to 1123.
[2023-02-07 02:28:15,242 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1123 states, 917 states have (on average 1.0806979280261724) internal successors, (991), 908 states have internal predecessors, (991), 107 states have call successors, (107), 107 states have call predecessors, (107), 99 states have return successors, (108), 108 states have call predecessors, (108), 106 states have call successors, (108)
[2023-02-07 02:28:15,244 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1123 states to 1123 states and 1206 transitions.
[2023-02-07 02:28:15,244 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1123 states and 1206 transitions.
[2023-02-07 02:28:15,244 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1123 states and 1206 transitions.
[2023-02-07 02:28:15,244 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 4 ============
[2023-02-07 02:28:15,244 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1123 states and 1206 transitions.
[2023-02-07 02:28:15,247 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:15,247 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:15,247 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:15,248 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:15,248 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:15,252 INFO  L752   eck$LassoCheckResult]: Stem: 10889#ULTIMATE.startENTRY_NONWA [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10980#L553-1_T1_init [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10924#L553_T1_init [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11439#L553_T1_init-D53 [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10836#mainENTRY_T1_init [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11678#mainENTRY_T1_init-D59 [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11302#havocProcedureENTRY_T1_init [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 11303#L402_T1_init [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 11135#L403_T1_init [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 11136#L404_T1_init [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 11435#L405_T1_init [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 11436#L406_T1_init [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 11298#L407_T1_init [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 11299#L408_T1_init [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 11485#L409_T1_init [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 11745#L410_T1_init [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 10876#L411_T1_init [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 10877#L412_T1_init [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 11645#L413_T1_init [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 11515#L414_T1_init [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 11516#L415_T1_init [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 11208#L416_T1_init [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 11209#L417_T1_init [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 11620#L418_T1_init [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 11621#L419_T1_init [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 11063#L420_T1_init [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 11064#L421_T1_init [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 11588#L422_T1_init [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 11532#L423_T1_init [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 11533#L424_T1_init [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 11807#L425_T1_init [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 11729#L426_T1_init [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 11730#L427_T1_init [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 11594#L428_T1_init [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 11487#L429_T1_init [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 11488#L430_T1_init [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 10942#L431_T1_init [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 10943#L432_T1_init [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 11466#L433_T1_init [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 11245#L434_T1_init [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 11246#L435_T1_init [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 11531#L436_T1_init [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 11541#L437_T1_init [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 11648#L438_T1_init [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 11171#L439_T1_init [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 11172#L440_T1_init [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 10835#L441_T1_init [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 10837#L442_T1_init [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 11222#L443_T1_init [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 11223#L444_T1_init [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 11159#L445_T1_init [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 11160#L446_T1_init [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 11433#L447_T1_init [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 11434#L448_T1_init [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 11007#L449_T1_init [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 11008#L450_T1_init [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 11721#L451_T1_init [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 11722#L452_T1_init [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 11559#L453_T1_init [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 11430#L454_T1_init [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 11431#L455_T1_init [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 11811#L456_T1_init [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 11119#L457_T1_init [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 11120#L458_T1_init [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 11647#L459_T1_init [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 11778#L460_T1_init [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 11239#L461_T1_init [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 11240#L462_T1_init [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 11408#L463_T1_init [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 11543#L464_T1_init [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 11109#L465_T1_init [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 11110#L466_T1_init [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 11396#L467_T1_init [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 11397#L468_T1_init [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 11809#L469_T1_init [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 11692#L470_T1_init [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 11693#L471_T1_init [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 11762#L472_T1_init [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 11782#L473_T1_init [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 11368#L474_T1_init [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 11128#L475_T1_init [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 11065#L476_T1_init [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 11066#L477_T1_init [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 11454#L478_T1_init [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 11494#L479_T1_init [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 11289#L480_T1_init [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 11290#L481_T1_init [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 11781#L482_T1_init [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 11233#L483_T1_init [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 11234#L484_T1_init [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 11666#L485_T1_init [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 11774#L486_T1_init [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 11381#L487_T1_init [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 11382#L488_T1_init [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 11432#L489_T1_init [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 11637#L490_T1_init [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 11592#L491_T1_init [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 11593#L492_T1_init [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 11671#L493_T1_init [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 11534#L494_T1_init [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 11535#L495_T1_init [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 11632#L496_T1_init [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 11455#L497_T1_init [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 10893#L498_T1_init [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 10894#L499_T1_init [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 11489#L500_T1_init [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 11585#L501_T1_init [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 11505#L502_T1_init [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 11506#L503_T1_init [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 11341#L504_T1_init [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 11342#L505_T1_init [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 11152#L506_T1_init [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 11153#L507_T1_init [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 10974#L508_T1_init [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 10975#L509_T1_init [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 11313#L510_T1_init [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 11747#L511_T1_init [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 11219#L512_T1_init [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 10926#L513_T1_init [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 10927#L514_T1_init [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 11561#L515_T1_init [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 11395#L516_T1_init [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 11235#L517_T1_init [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 11111#L518_T1_init [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 11112#L519_T1_init [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 11642#L520_T1_init [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 11548#L521_T1_init [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 11549#L522_T1_init [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 11805#L523_T1_init [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 11806#havocProcedureFINAL_T1_init [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10898#havocProcedureEXIT_T1_init >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10899#L535-D98 [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11339#L535_T1_init [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11403#L535_T1_init-D65 [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10865#_parser_ParserImplENTRY_T1_init [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11340#_parser_ParserImplENTRY_T1_init-D50 [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11484#startENTRY_T1_init [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 11623#L643_T1_init [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 10864#L643-1_T1_init [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10866#startEXIT_T1_init >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11375#_parser_ParserImplFINAL-D110 [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11573#_parser_ParserImplFINAL_T1_init [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11350#_parser_ParserImplEXIT_T1_init >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11351#L536-D149 [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11254#L536_T1_init [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11614#L536_T1_init-D92 [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11253#verifyChecksumFINAL_T1_init [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11255#verifyChecksumEXIT_T1_init >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11469#L537-D146 [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10851#L537_T1_init [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10858#L537_T1_init-D71 [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10859#ingressENTRY_T1_init [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10938#ingressENTRY_T1_init-D80 [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10939#forwarding_0.applyENTRY_T1_init [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 11422#L394_T1_init [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 10878#L394-1_T1_init [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10879#forwarding_0.applyEXIT_T1_init >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11186#ingressFINAL-D176 [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10850#ingressFINAL_T1_init [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10852#ingressEXIT_T1_init >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11596#L538-D143 [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10793#L538_T1_init [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11713#L538_T1_init-D17 [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11726#egressENTRY_T1_init [2435] egressENTRY_T1_init-->L318_T1_init: Formula: (= v_standard_metadata.ingress_port_22 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  AuxVars[]  AssignedVars[] 11376#L318_T1_init [2069] L318_T1_init-->L319_T1_init: Formula: (= v_meta.codel.queue_id_39 v_standard_metadata.egress_port_21)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_21}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21, meta.codel.queue_id=v_meta.codel.queue_id_39}  AuxVars[]  AssignedVars[meta.codel.queue_id] 10907#L319_T1_init [1799] L319_T1_init-->L319_T1_init-D74: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10908#L319_T1_init-D74 [1988] L319_T1_init-D74-->c_codel_0_a_codel_init_0ENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11198#c_codel_0_a_codel_init_0ENTRY_T1_init [1954] c_codel_0_a_codel_init_0ENTRY_T1_init-->L266_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_39)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_39}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 11199#L266_T1_init [2705] L266_T1_init-->L267_T1_init: Formula: (= v_meta.codel.time_now_39 (mod (+ (mod v_standard_metadata.deq_timedelta_30 281474976710656) (mod v_standard_metadata.enq_timestamp_18 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, meta.codel.time_now=v_meta.codel.time_now_39}  AuxVars[]  AssignedVars[meta.codel.time_now] 11567#L267_T1_init [2244] L267_T1_init-->L269_T1_init: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_40 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_23)  InVars {meta.codel.time_now=v_meta.codel.time_now_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_40, meta.codel.new_drop_time=v_meta.codel.new_drop_time_23}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 11568#L269_T1_init [2397] L269_T1_init-->L271_T1_init: Formula: (= v_meta.codel.state_dropping_26 (select v_r_state_dropping_17 v_meta.codel.queue_id_50))  InVars {r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50}  OutVars{r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50, meta.codel.state_dropping=v_meta.codel.state_dropping_26}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 11356#L271_T1_init [2058] L271_T1_init-->L273_T1_init: Formula: (= (select v_r_drop_count_18 v_meta.codel.queue_id_43) v_meta.codel.drop_cnt_36)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_36, meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 11357#L273_T1_init [2403] L273_T1_init-->L275_T1_init: Formula: (= (select v_r_last_drop_count_12 v_meta.codel.queue_id_41) v_meta.codel.last_drop_cnt_17)  InVars {r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41}  OutVars{r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_17}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 11701#L275_T1_init [2426] L275_T1_init-->L277_T1_init: Formula: (= v_meta.codel.drop_next_36 (select v_r_next_drop_20 v_meta.codel.queue_id_51))  InVars {r_next_drop=v_r_next_drop_20, meta.codel.queue_id=v_meta.codel.queue_id_51}  OutVars{r_next_drop=v_r_next_drop_20, meta.codel.drop_next=v_meta.codel.drop_next_36, meta.codel.queue_id=v_meta.codel.queue_id_51}  AuxVars[]  AssignedVars[meta.codel.drop_next] 10985#L277_T1_init [1829] L277_T1_init-->c_codel_0_a_codel_init_0FINAL_T1_init: Formula: (= v_meta.codel.drop_time_41 (select v_r_drop_time_14 v_meta.codel.queue_id_44))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_44, r_drop_time=v_r_drop_time_14}  OutVars{r_drop_time=v_r_drop_time_14, meta.codel.queue_id=v_meta.codel.queue_id_44, meta.codel.drop_time=v_meta.codel.drop_time_41}  AuxVars[]  AssignedVars[meta.codel.drop_time] 10986#c_codel_0_a_codel_init_0FINAL_T1_init [1874] c_codel_0_a_codel_init_0FINAL_T1_init-->c_codel_0_a_codel_init_0EXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11073#c_codel_0_a_codel_init_0EXIT_T1_init >[2993] c_codel_0_a_codel_init_0EXIT_T1_init-->L319-1-D125: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11362#L319-1-D125 [2098] L319-1-D125-->L319-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11084#L319-1_T1_init [1883] L319-1_T1_init-->L320-1_T1_init: Formula: (not (< v_standard_metadata.deq_timedelta_22 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  AuxVars[]  AssignedVars[] 11086#L320-1_T1_init [1993] L320-1_T1_init-->L329_T1_init: Formula: (not (= v_meta.codel.reset_drop_time_17 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  AuxVars[]  AssignedVars[] 11261#L329_T1_init [2740] L329_T1_init-->L335_T1_init: Formula: (not (= v_meta.codel.drop_time_29 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_29}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_29}  AuxVars[]  AssignedVars[] 11557#L335_T1_init [2230] L335_T1_init-->L336_T1_init: Formula: (<= v_meta.codel.drop_time_39 v_meta.codel.time_now_34)  InVars {meta.codel.time_now=v_meta.codel.time_now_34, meta.codel.drop_time=v_meta.codel.drop_time_39}  OutVars{meta.codel.time_now=v_meta.codel.time_now_34, meta.codel.drop_time=v_meta.codel.drop_time_39}  AuxVars[]  AssignedVars[] 11558#L336_T1_init [2551] L336_T1_init-->L335-2_T1_init: Formula: (= v_meta.codel.ok_to_drop_32 1)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_32}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 11770#L335-2_T1_init [1865] L335-2_T1_init-->L341_T1_init: Formula: (= v_meta.codel.state_dropping_23 1)  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_23}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_23}  AuxVars[]  AssignedVars[] 11825#L341_T1_init [1894] L341_T1_init-->L346_T1_init: Formula: (not (= 0 v_meta.codel.ok_to_drop_26))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_26}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_26}  AuxVars[]  AssignedVars[] 11816#L346_T1_init [2707] L346_T1_init-->L317_T1_init: Formula: (not (<= v_meta.codel.drop_next_33 v_meta.codel.time_now_33))  InVars {meta.codel.drop_next=v_meta.codel.drop_next_33, meta.codel.time_now=v_meta.codel.time_now_33}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_33, meta.codel.time_now=v_meta.codel.time_now_33}  AuxVars[]  AssignedVars[] 11522#L317_T1_init [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 11108#L369_T1_init [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 11887#egressFINAL_T1_init [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11885#egressEXIT_T1_init >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11884#L539-D173 [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11882#L539_T1_init [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11883#L539_T1_init-D35 [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11886#computeChecksumFINAL_T1_init [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11881#computeChecksumEXIT_T1_init >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11880#L540-D104 [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11879#L540_T1_init [2365] L540_T1_init-->L541-1_T1_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 11877#L541-1_T1_init [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 11876#L545_T1_init [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 11875#L546_T1_init [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 11874#L547_T1_init [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 11873#mainFINAL_T1_init [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11872#mainEXIT_T1_init >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11871#L553-1-D128 [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 11718#L553-1_T0_S2 [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10769#L553_T0_S2 [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11622#L553_T0_S2-D52 [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10787#mainENTRY_T0_S2 [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10987#mainENTRY_T0_S2-D58 [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11513#havocProcedureENTRY_T0_S2 [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 11507#L402_T0_S2 [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 11414#L403_T0_S2 [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 11415#L404_T0_S2 [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 11005#L405_T0_S2 [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 10862#L406_T0_S2 [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 10863#L407_T0_S2 [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 11067#L408_T0_S2 [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 11193#L409_T0_S2 [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 11517#L410_T0_S2 [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 11137#L411_T0_S2 [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 11138#L412_T0_S2 [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 11493#L413_T0_S2 [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 11272#L414_T0_S2 [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 11273#L415_T0_S2 [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 11639#L416_T0_S2 [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 11174#L417_T0_S2 [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 11175#L418_T0_S2 [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 11615#L419_T0_S2 [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 11616#L420_T0_S2 [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 11194#L421_T0_S2 [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 11195#L422_T0_S2 [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 11262#L423_T0_S2 [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 11617#L424_T0_S2 [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 11015#L425_T0_S2 [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 11016#L426_T0_S2 [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 11569#L427_T0_S2 [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 10915#L428_T0_S2 [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 10916#L429_T0_S2 [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 11526#L430_T0_S2 [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 11154#L431_T0_S2 [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 11155#L432_T0_S2 [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 11071#L433_T0_S2 [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 11072#L434_T0_S2 [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 11703#L435_T0_S2 [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 11650#L436_T0_S2 [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 11651#L437_T0_S2 [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 11744#L438_T0_S2 [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 11360#L439_T0_S2 [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 11176#L440_T0_S2 [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 11177#L441_T0_S2 [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 11284#L442_T0_S2 [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 11285#L443_T0_S2 [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 11761#L444_T0_S2 [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 11668#L445_T0_S2 [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 11669#L446_T0_S2 [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 11354#L447_T0_S2 [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 11355#L448_T0_S2 [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 10967#L449_T0_S2 [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 10968#L450_T0_S2 [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 11070#L451_T0_S2 [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 11441#L452_T0_S2 [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 11442#L453_T0_S2 [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 11490#L454_T0_S2 [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 11491#L455_T0_S2 [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 11644#L456_T0_S2 [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 10983#L457_T0_S2 [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 10984#L458_T0_S2 [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 11328#L459_T0_S2 [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 11502#L460_T0_S2 [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 11364#L461_T0_S2 [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 11178#L462_T0_S2 [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 11179#L463_T0_S2 [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 11655#L464_T0_S2 [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 11640#L465_T0_S2 [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 11641#L466_T0_S2 [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 10798#L467_T0_S2 [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 10799#L468_T0_S2 [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 11699#L469_T0_S2 [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 11326#L470_T0_S2 [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 11327#L471_T0_S2 [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 11462#L472_T0_S2 [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 11463#L473_T0_S2 [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 10946#L474_T0_S2 [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 10947#L475_T0_S2 [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 11163#L476_T0_S2 [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 11686#L477_T0_S2 [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 11590#L478_T0_S2 [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 11001#L479_T0_S2 [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 11002#L480_T0_S2 [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 10903#L481_T0_S2 [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 10904#L482_T0_S2 [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 11510#L483_T0_S2 [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 11638#L484_T0_S2 [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 11708#L485_T0_S2 [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 11709#L486_T0_S2 [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 11784#L487_T0_S2 [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 11266#L488_T0_S2 [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 11267#L489_T0_S2 [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 11714#L490_T0_S2 [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 11658#L491_T0_S2 [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 11077#L492_T0_S2 [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 11078#L493_T0_S2 [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 11268#L494_T0_S2 [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 11139#L495_T0_S2 [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 11140#L496_T0_S2 [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 11501#L497_T0_S2 [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 10956#L498_T0_S2 [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 10957#L499_T0_S2 [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 11574#L500_T0_S2 [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 11146#L501_T0_S2 [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 11147#L502_T0_S2 [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 11672#L503_T0_S2 [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 11787#L504_T0_S2 [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 10808#L505_T0_S2 [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 10809#L506_T0_S2 [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 11715#L507_T0_S2 [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 11719#L508_T0_S2 [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 10940#L509_T0_S2 [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 10941#L510_T0_S2 [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 11087#L511_T0_S2 [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 11088#L512_T0_S2 [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 11093#L513_T0_S2 [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 10786#L514_T0_S2 [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 10788#L515_T0_S2 [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 10887#L516_T0_S2 [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 10888#L517_T0_S2 [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 11231#L518_T0_S2 [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 11232#L519_T0_S2 [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 11091#L520_T0_S2 [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 11092#L521_T0_S2 [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 11406#L522_T0_S2 [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 11407#L523_T0_S2 [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 11799#havocProcedureFINAL_T0_S2 [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11775#havocProcedureEXIT_T0_S2 >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11776#L535-D97 [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10768#L535_T0_S2 [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10770#L535_T0_S2-D64 [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11280#_parser_ParserImplENTRY_T0_S2 [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11279#_parser_ParserImplENTRY_T0_S2-D49 [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11281#startENTRY_T0_S2 [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 11610#L643_T0_S2 [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 11478#L643-1_T0_S2 [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11479#startEXIT_T0_S2 >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11498#_parser_ParserImplFINAL-D109 [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11604#_parser_ParserImplFINAL_T0_S2 [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11785#_parser_ParserImplEXIT_T0_S2 >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10998#L536-D148 [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10999#L536_T0_S2 [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11728#L536_T0_S2-D91 [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11731#verifyChecksumFINAL_T0_S2 [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11732#verifyChecksumEXIT_T0_S2 >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11104#L537-D145 [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11105#L537_T0_S2 [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11316#L537_T0_S2-D70 [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10840#ingressENTRY_T0_S2 [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11220#ingressENTRY_T0_S2-D79 [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11297#forwarding_0.applyENTRY_T0_S2 [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 11603#L394_T0_S2 [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 10841#L394-1_T0_S2 [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11624#forwarding_0.applyEXIT_T0_S2 >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11514#ingressFINAL-D175 [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11387#ingressFINAL_T0_S2 [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11388#ingressEXIT_T0_S2 >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10948#L538-D142 [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10816#L538_T0_S2 [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10817#L538_T0_S2-D16 [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11053#egressENTRY_T0_S2 [2475] egressENTRY_T0_S2-->L318_T0_S2: Formula: (= v_standard_metadata.ingress_port_20 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  AuxVars[]  AssignedVars[] 11737#L318_T0_S2 [2613] L318_T0_S2-->L319_T0_S2: Formula: (= v_meta.codel.queue_id_38 v_standard_metadata.egress_port_20)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_20}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20, meta.codel.queue_id=v_meta.codel.queue_id_38}  AuxVars[]  AssignedVars[meta.codel.queue_id] 10934#L319_T0_S2 [2128] L319_T0_S2-->L319_T0_S2-D73: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11449#L319_T0_S2-D73 [2542] L319_T0_S2-D73-->c_codel_0_a_codel_init_0ENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11259#c_codel_0_a_codel_init_0ENTRY_T0_S2 [1991] c_codel_0_a_codel_init_0ENTRY_T0_S2-->L266_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_37)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_37}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 11260#L266_T0_S2 [2540] L266_T0_S2-->L267_T0_S2: Formula: (= v_meta.codel.time_now_38 (mod (+ (mod v_standard_metadata.enq_timestamp_17 281474976710656) (mod v_standard_metadata.deq_timedelta_29 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, meta.codel.time_now=v_meta.codel.time_now_38}  AuxVars[]  AssignedVars[meta.codel.time_now] 11291#L267_T0_S2 [2014] L267_T0_S2-->L269_T0_S2: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_37 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_22)  InVars {meta.codel.time_now=v_meta.codel.time_now_37}  OutVars{meta.codel.time_now=v_meta.codel.time_now_37, meta.codel.new_drop_time=v_meta.codel.new_drop_time_22}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 11292#L269_T0_S2 [2401] L269_T0_S2-->L271_T0_S2: Formula: (= v_meta.codel.state_dropping_25 (select v_r_state_dropping_16 v_meta.codel.queue_id_45))  InVars {r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45}  OutVars{r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45, meta.codel.state_dropping=v_meta.codel.state_dropping_25}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 11661#L271_T0_S2 [2346] L271_T0_S2-->L273_T0_S2: Formula: (= (select v_r_drop_count_19 v_meta.codel.queue_id_47) v_meta.codel.drop_cnt_37)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_37, meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 11417#L273_T0_S2 [2104] L273_T0_S2-->L275_T0_S2: Formula: (= (select v_r_last_drop_count_14 v_meta.codel.queue_id_52) v_meta.codel.last_drop_cnt_19)  InVars {r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52}  OutVars{r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_19}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 11418#L275_T0_S2 [2752] L275_T0_S2-->L277_T0_S2: Formula: (= (select v_r_next_drop_18 v_meta.codel.queue_id_40) v_meta.codel.drop_next_34)  InVars {r_next_drop=v_r_next_drop_18, meta.codel.queue_id=v_meta.codel.queue_id_40}  OutVars{r_next_drop=v_r_next_drop_18, meta.codel.drop_next=v_meta.codel.drop_next_34, meta.codel.queue_id=v_meta.codel.queue_id_40}  AuxVars[]  AssignedVars[meta.codel.drop_next] 10933#L277_T0_S2 [1808] L277_T0_S2-->c_codel_0_a_codel_init_0FINAL_T0_S2: Formula: (= v_meta.codel.drop_time_42 (select v_r_drop_time_15 v_meta.codel.queue_id_48))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_48, r_drop_time=v_r_drop_time_15}  OutVars{r_drop_time=v_r_drop_time_15, meta.codel.queue_id=v_meta.codel.queue_id_48, meta.codel.drop_time=v_meta.codel.drop_time_42}  AuxVars[]  AssignedVars[meta.codel.drop_time] 10935#c_codel_0_a_codel_init_0FINAL_T0_S2 [2506] c_codel_0_a_codel_init_0FINAL_T0_S2-->c_codel_0_a_codel_init_0EXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11419#c_codel_0_a_codel_init_0EXIT_T0_S2 >[2896] c_codel_0_a_codel_init_0EXIT_T0_S2-->L319-1-D124: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11410#L319-1-D124 [2096] L319-1-D124-->L319-1_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11411#L319-1_T0_S2 [2439] L319-1_T0_S2-->L320-1_T0_S2: Formula: (not (< v_standard_metadata.deq_timedelta_20 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  AuxVars[]  AssignedVars[] 11274#L320-1_T0_S2 [2006] L320-1_T0_S2-->L329_T0_S2: Formula: (not (= v_meta.codel.reset_drop_time_22 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  AuxVars[]  AssignedVars[] 11275#L329_T0_S2 [2357] L329_T0_S2-->L335_T0_S2: Formula: (not (= v_meta.codel.drop_time_38 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_38}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_38}  AuxVars[]  AssignedVars[] 11670#L335_T0_S2 [2459] L335_T0_S2-->L335-2_T0_S2: Formula: (not (<= v_meta.codel.drop_time_27 v_meta.codel.time_now_27))  InVars {meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  OutVars{meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  AuxVars[]  AssignedVars[] 11425#L335-2_T0_S2 [2111] L335-2_T0_S2-->L356_T0_S2: Formula: (not (= v_meta.codel.state_dropping_20 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_20}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_20}  AuxVars[]  AssignedVars[] 11427#L356_T0_S2 [2442] L356_T0_S2-->L317_T0_S2: Formula: (not (= v_meta.codel.ok_to_drop_36 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  AuxVars[]  AssignedVars[] 11601#L317_T0_S2 [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 11248#L369_T0_S2 [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 10830#egressFINAL_T0_S2 [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10831#egressEXIT_T0_S2 >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11402#L539-D172 [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10833#L539_T0_S2 [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10832#L539_T0_S2-D34 [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10834#computeChecksumFINAL_T0_S2 [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11544#computeChecksumEXIT_T0_S2 >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11606#L540-D103 [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11349#L540_T0_S2 [2052] L540_T0_S2-->L541-1_T0_S2: Formula: v_forward_23  InVars {forward=v_forward_23}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[] 11048#L541-1_T0_S2 [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 11115#L545_T0_S2 [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 11145#L546_T0_S2 [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 11097#L547_T0_S2 [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 11098#mainFINAL_T0_S2 [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11190#mainEXIT_T0_S2 >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11759#L553-1-D127 [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 11121#L553-1_accept_S5 
[2023-02-07 02:28:15,253 INFO  L754   eck$LassoCheckResult]: Loop: 11121#L553-1_accept_S5 [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10790#L553_accept_S5 [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10890#L553_accept_S5-D54 [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10796#mainENTRY_accept_S5 [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11675#mainENTRY_accept_S5-D60 [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11286#havocProcedureENTRY_accept_S5 [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 11287#L402_accept_S5 [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 11575#L403_accept_S5 [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 10885#L404_accept_S5 [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 10886#L405_accept_S5 [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 11113#L406_accept_S5 [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 11114#L407_accept_S5 [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 11329#L408_accept_S5 [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 11330#L409_accept_S5 [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 11379#L410_accept_S5 [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 11380#L411_accept_S5 [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 11131#L412_accept_S5 [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 11132#L413_accept_S5 [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 11345#L414_accept_S5 [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 10795#L415_accept_S5 [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 10797#L416_accept_S5 [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 11591#L417_accept_S5 [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 11363#L418_accept_S5 [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 11343#L419_accept_S5 [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 10842#L420_accept_S5 [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 10843#L421_accept_S5 [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 11653#L422_accept_S5 [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 11654#L423_accept_S5 [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 11560#L424_accept_S5 [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 11423#L425_accept_S5 [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 11393#L426_accept_S5 [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 11394#L427_accept_S5 [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 11555#L428_accept_S5 [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 11556#L429_accept_S5 [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 11562#L430_accept_S5 [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 11027#L431_accept_S5 [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 11028#L432_accept_S5 [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 11029#L433_accept_S5 [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 11734#L434_accept_S5 [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 11003#L435_accept_S5 [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 11004#L436_accept_S5 [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 10981#L437_accept_S5 [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 10982#L438_accept_S5 [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 11241#L439_accept_S5 [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 11564#L440_accept_S5 [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 11428#L441_accept_S5 [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 11319#L442_accept_S5 [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 11320#L443_accept_S5 [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 10976#L444_accept_S5 [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 10977#L445_accept_S5 [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 11075#L446_accept_S5 [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 11365#L447_accept_S5 [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 11366#L448_accept_S5 [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 11607#L449_accept_S5 [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 11673#L450_accept_S5 [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 11662#L451_accept_S5 [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 11657#L452_accept_S5 [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 11605#L453_accept_S5 [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 11537#L454_accept_S5 [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 11068#L455_accept_S5 [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 11069#L456_accept_S5 [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 11536#L457_accept_S5 [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 11482#L458_accept_S5 [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 11483#L459_accept_S5 [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 11486#L460_accept_S5 [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 11629#L461_accept_S5 [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 11727#L462_accept_S5 [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 11750#L463_accept_S5 [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 11399#L464_accept_S5 [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 11400#L465_accept_S5 [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 11786#L466_accept_S5 [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 11702#L467_accept_S5 [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 11676#L468_accept_S5 [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 11030#L469_accept_S5 [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 11031#L470_accept_S5 [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 11324#L471_accept_S5 [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 11325#L472_accept_S5 [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 11733#L473_accept_S5 [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 11317#L474_accept_S5 [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 11318#L475_accept_S5 [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 11465#L476_accept_S5 [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 11187#L477_accept_S5 [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 11188#L478_accept_S5 [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 11212#L479_accept_S5 [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 11680#L480_accept_S5 [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 11173#L481_accept_S5 [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 11017#L482_accept_S5 [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 11018#L483_accept_S5 [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 11582#L484_accept_S5 [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 10944#L485_accept_S5 [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 10945#L486_accept_S5 [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 11633#L487_accept_S5 [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 11698#L488_accept_S5 [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 10905#L489_accept_S5 [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 10906#L490_accept_S5 [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 11056#L491_accept_S5 [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 11057#L492_accept_S5 [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 11496#L493_accept_S5 [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 11456#L494_accept_S5 [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 11457#L495_accept_S5 [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 11300#L496_accept_S5 [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 11301#L497_accept_S5 [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 11717#L498_accept_S5 [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 10880#L499_accept_S5 [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 10881#L500_accept_S5 [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 11815#L501_accept_S5 [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 11227#L502_accept_S5 [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 11228#L503_accept_S5 [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 11353#L504_accept_S5 [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 10856#L505_accept_S5 [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 10857#L506_accept_S5 [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 11551#L507_accept_S5 [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 11765#L508_accept_S5 [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 11798#L509_accept_S5 [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 11795#L510_accept_S5 [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 11736#L511_accept_S5 [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 11571#L512_accept_S5 [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 11572#L513_accept_S5 [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 11061#L514_accept_S5 [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 11062#L515_accept_S5 [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 11652#L516_accept_S5 [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 11122#L517_accept_S5 [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 11123#L518_accept_S5 [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 11503#L519_accept_S5 [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 10891#L520_accept_S5 [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 10892#L521_accept_S5 [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 11019#L522_accept_S5 [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 11102#L523_accept_S5 [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 11103#havocProcedureFINAL_accept_S5 [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11609#havocProcedureEXIT_accept_S5 >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11636#L535-D99 [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11013#L535_accept_S5 [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11716#L535_accept_S5-D66 [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11117#_parser_ParserImplENTRY_accept_S5 [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11282#_parser_ParserImplENTRY_accept_S5-D51 [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11283#startENTRY_accept_S5 [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 11565#L643_accept_S5 [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 11116#L643-1_accept_S5 [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11118#startEXIT_accept_S5 >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11012#_parser_ParserImplFINAL-D111 [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11014#_parser_ParserImplFINAL_accept_S5 [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11459#_parser_ParserImplEXIT_accept_S5 >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11225#L536-D150 [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11226#L536_accept_S5 [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11294#L536_accept_S5-D93 [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11295#verifyChecksumFINAL_accept_S5 [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11800#verifyChecksumEXIT_accept_S5 >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11464#L537-D147 [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11203#L537_accept_S5 [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11238#L537_accept_S5-D72 [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10854#ingressENTRY_accept_S5 [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11818#ingressENTRY_accept_S5-D81 [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11519#forwarding_0.applyENTRY_accept_S5 [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 11520#L394_accept_S5 [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 11346#L394-1_accept_S5 [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11347#forwarding_0.applyEXIT_accept_S5 >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11202#ingressFINAL-D177 [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11204#ingressFINAL_accept_S5 [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11213#ingressEXIT_accept_S5 >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11589#L538-D144 [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10784#L538_accept_S5 [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 10820#L538_accept_S5-D18 [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10821#egressENTRY_accept_S5 [1908] egressENTRY_accept_S5-->L318_accept_S5: Formula: (= v_standard_metadata.ingress_port_18 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[] 10783#L318_accept_S5 [1749] L318_accept_S5-->L319_accept_S5: Formula: (= v_meta.codel.queue_id_37 v_standard_metadata.egress_port_19)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_19}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19, meta.codel.queue_id=v_meta.codel.queue_id_37}  AuxVars[]  AssignedVars[meta.codel.queue_id] 10785#L319_accept_S5 [2164] L319_accept_S5-->L319_accept_S5-D75: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11181#L319_accept_S5-D75 [1938] L319_accept_S5-D75-->c_codel_0_a_codel_init_0ENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10806#c_codel_0_a_codel_init_0ENTRY_accept_S5 [1756] c_codel_0_a_codel_init_0ENTRY_accept_S5-->L266_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_38)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_38}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 10807#L266_accept_S5 [2685] L266_accept_S5-->L267_accept_S5: Formula: (= v_meta.codel.time_now_36 (mod (+ (mod v_standard_metadata.deq_timedelta_28 281474976710656) (mod v_standard_metadata.enq_timestamp_16 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, meta.codel.time_now=v_meta.codel.time_now_36}  AuxVars[]  AssignedVars[meta.codel.time_now] 11695#L267_accept_S5 [2392] L267_accept_S5-->L269_accept_S5: Formula: (= v_meta.codel.new_drop_time_24 (mod (+ 100000 (mod v_meta.codel.time_now_41 281474976710656)) 281474976710656))  InVars {meta.codel.time_now=v_meta.codel.time_now_41}  OutVars{meta.codel.time_now=v_meta.codel.time_now_41, meta.codel.new_drop_time=v_meta.codel.new_drop_time_24}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 10978#L269_accept_S5 [1824] L269_accept_S5-->L271_accept_S5: Formula: (= (select v_r_state_dropping_18 v_meta.codel.queue_id_53) v_meta.codel.state_dropping_27)  InVars {r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53}  OutVars{r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53, meta.codel.state_dropping=v_meta.codel.state_dropping_27}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 10979#L271_accept_S5 [2261] L271_accept_S5-->L273_accept_S5: Formula: (= (select v_r_drop_count_20 v_meta.codel.queue_id_49) v_meta.codel.drop_cnt_38)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_38, meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 11584#L273_accept_S5 [2628] L273_accept_S5-->L275_accept_S5: Formula: (= (select v_r_last_drop_count_13 v_meta.codel.queue_id_42) v_meta.codel.last_drop_cnt_18)  InVars {r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42}  OutVars{r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_18}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 11477#L275_accept_S5 [2151] L275_accept_S5-->L277_accept_S5: Formula: (= v_meta.codel.drop_next_35 (select v_r_next_drop_19 v_meta.codel.queue_id_46))  InVars {r_next_drop=v_r_next_drop_19, meta.codel.queue_id=v_meta.codel.queue_id_46}  OutVars{r_next_drop=v_r_next_drop_19, meta.codel.drop_next=v_meta.codel.drop_next_35, meta.codel.queue_id=v_meta.codel.queue_id_46}  AuxVars[]  AssignedVars[meta.codel.drop_next] 11124#L277_accept_S5 [1910] L277_accept_S5-->c_codel_0_a_codel_init_0FINAL_accept_S5: Formula: (= v_meta.codel.drop_time_43 (select v_r_drop_time_16 v_meta.codel.queue_id_54))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_54, r_drop_time=v_r_drop_time_16}  OutVars{r_drop_time=v_r_drop_time_16, meta.codel.queue_id=v_meta.codel.queue_id_54, meta.codel.drop_time=v_meta.codel.drop_time_43}  AuxVars[]  AssignedVars[meta.codel.drop_time] 11125#c_codel_0_a_codel_init_0FINAL_accept_S5 [2464] c_codel_0_a_codel_init_0FINAL_accept_S5-->c_codel_0_a_codel_init_0EXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11133#c_codel_0_a_codel_init_0EXIT_accept_S5 >[2763] c_codel_0_a_codel_init_0EXIT_accept_S5-->L319-1-D126: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11134#L319-1-D126 [1959] L319-1-D126-->L319-1_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11207#L319-1_accept_S5 [2249] L319-1_accept_S5-->L320-1_accept_S5: Formula: (not (< v_standard_metadata.deq_timedelta_26 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  AuxVars[]  AssignedVars[] 11026#L320-1_accept_S5 [2653] L320-1_accept_S5-->L329_accept_S5: Formula: (not (= v_meta.codel.reset_drop_time_19 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  AuxVars[]  AssignedVars[] 11797#L329_accept_S5 [2634] L329_accept_S5-->L335_accept_S5: Formula: (not (= v_meta.codel.drop_time_24 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_24}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_24}  AuxVars[]  AssignedVars[] 10847#L335_accept_S5 [1773] L335_accept_S5-->L335-2_accept_S5: Formula: (not (<= v_meta.codel.drop_time_32 v_meta.codel.time_now_29))  InVars {meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  OutVars{meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  AuxVars[]  AssignedVars[] 10849#L335-2_accept_S5 [1804] L335-2_accept_S5-->L356_accept_S5: Formula: (not (= v_meta.codel.state_dropping_22 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_22}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_22}  AuxVars[]  AssignedVars[] 10919#L356_accept_S5 [1853] L356_accept_S5-->L317_accept_S5: Formula: (not (= v_meta.codel.ok_to_drop_31 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  AuxVars[]  AssignedVars[] 10970#L317_accept_S5 [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 11323#L369_accept_S5 [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 11696#egressFINAL_accept_S5 [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11681#egressEXIT_accept_S5 >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10789#L539-D174 [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10791#L539_accept_S5 [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 11296#L539_accept_S5-D36 [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11214#computeChecksumFINAL_accept_S5 [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11215#computeChecksumEXIT_accept_S5 >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11697#L540-D105 [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 10991#L540_accept_S5 [1832] L540_accept_S5-->L541-1_accept_S5: Formula: v_forward_21  InVars {forward=v_forward_21}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[] 10993#L541-1_accept_S5 [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 11602#L545_accept_S5 [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 11677#L546_accept_S5 [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 10818#L547_accept_S5 [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 10819#mainFINAL_accept_S5 [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11006#mainEXIT_accept_S5 >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 11481#L553-1-D129 [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 11121#L553-1_accept_S5 
[2023-02-07 02:28:15,254 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:15,254 INFO  L85        PathProgramCache]: Analyzing trace with hash 1441289859, now seen corresponding path program 1 times
[2023-02-07 02:28:15,254 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:15,254 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1285289952]
[2023-02-07 02:28:15,254 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:15,254 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:15,272 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,342 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-02-07 02:28:15,354 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,416 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,421 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,434 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:15,436 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,442 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,443 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,444 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:15,445 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,450 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:15,451 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,452 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,453 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,463 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:15,466 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,480 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:15,482 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,484 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 188
[2023-02-07 02:28:15,485 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,487 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 205
[2023-02-07 02:28:15,499 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,512 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,516 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,522 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:15,523 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,524 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,525 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,526 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:15,526 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,527 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:15,528 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,528 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:15,529 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,529 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:15,531 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,533 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:15,533 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,535 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 186
[2023-02-07 02:28:15,535 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:15,536 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-02-07 02:28:15,536 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-02-07 02:28:15,536 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [1285289952]
[2023-02-07 02:28:15,536 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [1285289952] provided 1 perfect and 0 imperfect interpolant sequences
[2023-02-07 02:28:15,537 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-02-07 02:28:15,537 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2023-02-07 02:28:15,537 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [1983563492]
[2023-02-07 02:28:15,537 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-02-07 02:28:15,537 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-02-07 02:28:15,537 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-02-07 02:28:15,537 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2023-02-07 02:28:15,537 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=98, Unknown=0, NotChecked=0, Total=132
[2023-02-07 02:28:15,538 INFO  L87              Difference]: Start difference. First operand 1123 states and 1206 transitions. cyclomatic complexity: 86 Second operand  has 12 states, 12 states have (on average 30.333333333333332) internal successors, (364), 5 states have internal predecessors, (364), 3 states have call successors, (21), 8 states have call predecessors, (21), 3 states have return successors, (20), 4 states have call predecessors, (20), 3 states have call successors, (20)
[2023-02-07 02:28:17,806 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-02-07 02:28:17,806 INFO  L93              Difference]: Finished difference Result 2491 states and 2702 transitions.
[2023-02-07 02:28:17,806 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 38 states. 
[2023-02-07 02:28:17,806 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2491 states and 2702 transitions.
[2023-02-07 02:28:17,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-02-07 02:28:17,818 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2491 states to 2491 states and 2702 transitions.
[2023-02-07 02:28:17,818 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 266
[2023-02-07 02:28:17,818 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 266
[2023-02-07 02:28:17,818 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2491 states and 2702 transitions.
[2023-02-07 02:28:17,820 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-02-07 02:28:17,820 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 2491 states and 2702 transitions.
[2023-02-07 02:28:17,821 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2491 states and 2702 transitions.
[2023-02-07 02:28:17,832 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2491 to 1123.
[2023-02-07 02:28:17,832 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1123 states, 917 states have (on average 1.0774263904034895) internal successors, (988), 908 states have internal predecessors, (988), 107 states have call successors, (107), 107 states have call predecessors, (107), 99 states have return successors, (108), 108 states have call predecessors, (108), 106 states have call successors, (108)
[2023-02-07 02:28:17,834 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1123 states to 1123 states and 1203 transitions.
[2023-02-07 02:28:17,834 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1123 states and 1203 transitions.
[2023-02-07 02:28:17,834 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1123 states and 1203 transitions.
[2023-02-07 02:28:17,834 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 5 ============
[2023-02-07 02:28:17,834 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1123 states and 1203 transitions.
[2023-02-07 02:28:17,836 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:17,836 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:17,836 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:17,837 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:17,837 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:17,839 INFO  L752   eck$LassoCheckResult]: Stem: 15400#ULTIMATE.startENTRY_NONWA [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15490#L553-1_T1_init [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15435#L553_T1_init [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15949#L553_T1_init-D53 [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15347#mainENTRY_T1_init [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16188#mainENTRY_T1_init-D59 [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15813#havocProcedureENTRY_T1_init [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 15814#L402_T1_init [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 15645#L403_T1_init [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 15646#L404_T1_init [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 15945#L405_T1_init [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 15946#L406_T1_init [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 15809#L407_T1_init [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 15810#L408_T1_init [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 15995#L409_T1_init [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 16248#L410_T1_init [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 15387#L411_T1_init [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 15388#L412_T1_init [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 16156#L413_T1_init [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 16024#L414_T1_init [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 16025#L415_T1_init [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 15719#L416_T1_init [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 15720#L417_T1_init [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 16130#L418_T1_init [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 16131#L419_T1_init [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 15573#L420_T1_init [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 15574#L421_T1_init [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 16096#L422_T1_init [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 16041#L423_T1_init [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 16042#L424_T1_init [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 16307#L425_T1_init [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 16235#L426_T1_init [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 16236#L427_T1_init [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 16102#L428_T1_init [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 15997#L429_T1_init [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 15998#L430_T1_init [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 15453#L431_T1_init [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 15454#L432_T1_init [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 15976#L433_T1_init [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 15755#L434_T1_init [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 15756#L435_T1_init [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 16040#L436_T1_init [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 16050#L437_T1_init [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 16159#L438_T1_init [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 15681#L439_T1_init [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 15682#L440_T1_init [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 15346#L441_T1_init [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 15348#L442_T1_init [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 15733#L443_T1_init [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 15734#L444_T1_init [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 15669#L445_T1_init [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 15670#L446_T1_init [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 15943#L447_T1_init [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 15944#L448_T1_init [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 15517#L449_T1_init [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 15518#L450_T1_init [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 16226#L451_T1_init [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 16227#L452_T1_init [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 16067#L453_T1_init [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 15940#L454_T1_init [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 15941#L455_T1_init [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 16311#L456_T1_init [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 15629#L457_T1_init [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 15630#L458_T1_init [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 16158#L459_T1_init [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 16280#L460_T1_init [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 15750#L461_T1_init [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 15751#L462_T1_init [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 15919#L463_T1_init [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 16052#L464_T1_init [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 15619#L465_T1_init [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 15620#L466_T1_init [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 15907#L467_T1_init [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 15908#L468_T1_init [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 16309#L469_T1_init [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 16201#L470_T1_init [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 16202#L471_T1_init [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 16265#L472_T1_init [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 16284#L473_T1_init [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 15879#L474_T1_init [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 15638#L475_T1_init [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 15575#L476_T1_init [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 15576#L477_T1_init [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 15964#L478_T1_init [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 16004#L479_T1_init [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 15800#L480_T1_init [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 15801#L481_T1_init [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 16283#L482_T1_init [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 15744#L483_T1_init [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 15745#L484_T1_init [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 16176#L485_T1_init [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 16276#L486_T1_init [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 15892#L487_T1_init [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 15893#L488_T1_init [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 15942#L489_T1_init [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 16148#L490_T1_init [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 16100#L491_T1_init [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 16101#L492_T1_init [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 16181#L493_T1_init [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 16043#L494_T1_init [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 16044#L495_T1_init [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 16143#L496_T1_init [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 15965#L497_T1_init [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 15404#L498_T1_init [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 15405#L499_T1_init [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 15999#L500_T1_init [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 16093#L501_T1_init [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 16014#L502_T1_init [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 16015#L503_T1_init [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 15852#L504_T1_init [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 15853#L505_T1_init [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15662#L506_T1_init [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 15663#L507_T1_init [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 15484#L508_T1_init [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 15485#L509_T1_init [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 15824#L510_T1_init [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 16250#L511_T1_init [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 15730#L512_T1_init [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 15437#L513_T1_init [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 15438#L514_T1_init [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 16069#L515_T1_init [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 15906#L516_T1_init [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 15746#L517_T1_init [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15621#L518_T1_init [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 15622#L519_T1_init [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 16153#L520_T1_init [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 16057#L521_T1_init [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 16058#L522_T1_init [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 16304#L523_T1_init [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 16305#havocProcedureFINAL_T1_init [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15409#havocProcedureEXIT_T1_init >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15410#L535-D98 [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15850#L535_T1_init [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15914#L535_T1_init-D65 [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15376#_parser_ParserImplENTRY_T1_init [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15851#_parser_ParserImplENTRY_T1_init-D50 [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15994#startENTRY_T1_init [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 16133#L643_T1_init [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 15375#L643-1_T1_init [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15377#startEXIT_T1_init >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15886#_parser_ParserImplFINAL-D110 [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16081#_parser_ParserImplFINAL_T1_init [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15861#_parser_ParserImplEXIT_T1_init >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15862#L536-D149 [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15765#L536_T1_init [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16123#L536_T1_init-D92 [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15764#verifyChecksumFINAL_T1_init [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15766#verifyChecksumEXIT_T1_init >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15979#L537-D146 [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15362#L537_T1_init [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15369#L537_T1_init-D71 [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15370#ingressENTRY_T1_init [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15449#ingressENTRY_T1_init-D80 [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15450#forwarding_0.applyENTRY_T1_init [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 15933#L394_T1_init [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 15389#L394-1_T1_init [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15390#forwarding_0.applyEXIT_T1_init >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15696#ingressFINAL-D176 [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15361#ingressFINAL_T1_init [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15363#ingressEXIT_T1_init >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16104#L538-D143 [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15304#L538_T1_init [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16218#L538_T1_init-D17 [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16231#egressENTRY_T1_init [2435] egressENTRY_T1_init-->L318_T1_init: Formula: (= v_standard_metadata.ingress_port_22 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  AuxVars[]  AssignedVars[] 15887#L318_T1_init [2069] L318_T1_init-->L319_T1_init: Formula: (= v_meta.codel.queue_id_39 v_standard_metadata.egress_port_21)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_21}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21, meta.codel.queue_id=v_meta.codel.queue_id_39}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15418#L319_T1_init [1799] L319_T1_init-->L319_T1_init-D74: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15419#L319_T1_init-D74 [1988] L319_T1_init-D74-->c_codel_0_a_codel_init_0ENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15709#c_codel_0_a_codel_init_0ENTRY_T1_init [1954] c_codel_0_a_codel_init_0ENTRY_T1_init-->L266_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_39)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_39}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 15710#L266_T1_init [2705] L266_T1_init-->L267_T1_init: Formula: (= v_meta.codel.time_now_39 (mod (+ (mod v_standard_metadata.deq_timedelta_30 281474976710656) (mod v_standard_metadata.enq_timestamp_18 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, meta.codel.time_now=v_meta.codel.time_now_39}  AuxVars[]  AssignedVars[meta.codel.time_now] 16075#L267_T1_init [2244] L267_T1_init-->L269_T1_init: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_40 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_23)  InVars {meta.codel.time_now=v_meta.codel.time_now_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_40, meta.codel.new_drop_time=v_meta.codel.new_drop_time_23}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 16076#L269_T1_init [2397] L269_T1_init-->L271_T1_init: Formula: (= v_meta.codel.state_dropping_26 (select v_r_state_dropping_17 v_meta.codel.queue_id_50))  InVars {r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50}  OutVars{r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50, meta.codel.state_dropping=v_meta.codel.state_dropping_26}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 15867#L271_T1_init [2058] L271_T1_init-->L273_T1_init: Formula: (= (select v_r_drop_count_18 v_meta.codel.queue_id_43) v_meta.codel.drop_cnt_36)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_36, meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 15868#L273_T1_init [2403] L273_T1_init-->L275_T1_init: Formula: (= (select v_r_last_drop_count_12 v_meta.codel.queue_id_41) v_meta.codel.last_drop_cnt_17)  InVars {r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41}  OutVars{r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_17}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 16210#L275_T1_init [2426] L275_T1_init-->L277_T1_init: Formula: (= v_meta.codel.drop_next_36 (select v_r_next_drop_20 v_meta.codel.queue_id_51))  InVars {r_next_drop=v_r_next_drop_20, meta.codel.queue_id=v_meta.codel.queue_id_51}  OutVars{r_next_drop=v_r_next_drop_20, meta.codel.drop_next=v_meta.codel.drop_next_36, meta.codel.queue_id=v_meta.codel.queue_id_51}  AuxVars[]  AssignedVars[meta.codel.drop_next] 15495#L277_T1_init [1829] L277_T1_init-->c_codel_0_a_codel_init_0FINAL_T1_init: Formula: (= v_meta.codel.drop_time_41 (select v_r_drop_time_14 v_meta.codel.queue_id_44))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_44, r_drop_time=v_r_drop_time_14}  OutVars{r_drop_time=v_r_drop_time_14, meta.codel.queue_id=v_meta.codel.queue_id_44, meta.codel.drop_time=v_meta.codel.drop_time_41}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15496#c_codel_0_a_codel_init_0FINAL_T1_init [1874] c_codel_0_a_codel_init_0FINAL_T1_init-->c_codel_0_a_codel_init_0EXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15583#c_codel_0_a_codel_init_0EXIT_T1_init >[2993] c_codel_0_a_codel_init_0EXIT_T1_init-->L319-1-D125: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15873#L319-1-D125 [2098] L319-1-D125-->L319-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15594#L319-1_T1_init [1883] L319-1_T1_init-->L320-1_T1_init: Formula: (not (< v_standard_metadata.deq_timedelta_22 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  AuxVars[]  AssignedVars[] 15596#L320-1_T1_init [1993] L320-1_T1_init-->L329_T1_init: Formula: (not (= v_meta.codel.reset_drop_time_17 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  AuxVars[]  AssignedVars[] 15772#L329_T1_init [2740] L329_T1_init-->L335_T1_init: Formula: (not (= v_meta.codel.drop_time_29 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_29}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_29}  AuxVars[]  AssignedVars[] 16065#L335_T1_init [2231] L335_T1_init-->L335-2_T1_init: Formula: (not (<= v_meta.codel.drop_time_40 v_meta.codel.time_now_35))  InVars {meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  AuxVars[]  AssignedVars[] 15568#L335-2_T1_init [1865] L335-2_T1_init-->L341_T1_init: Formula: (= v_meta.codel.state_dropping_23 1)  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_23}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_23}  AuxVars[]  AssignedVars[] 15569#L341_T1_init [1893] L341_T1_init-->L343_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_25)  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_25}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_25}  AuxVars[]  AssignedVars[] 15610#L343_T1_init [2498] L343_T1_init-->L343_T1_init-D23: Formula: (and (= v_r_state_dropping.write_indexInParam_1 v_meta.codel.queue_id_27) (= v_r_state_dropping.write_valueInParam_1 0))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_27}  OutVars{r_state_dropping.write_index=v_r_state_dropping.write_indexInParam_1, meta.codel.queue_id=v_meta.codel.queue_id_27, r_state_dropping.write_value=v_r_state_dropping.write_valueInParam_1}  AuxVars[]  AssignedVars[r_state_dropping.write_index, r_state_dropping.write_value]< 15609#L343_T1_init-D23 [1891] L343_T1_init-D23-->r_state_dropping.writeENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15611#r_state_dropping.writeENTRY_T1_init [2139] r_state_dropping.writeENTRY_T1_init-->r_state_dropping.writeFINAL_T1_init: Formula: (= v_r_state_dropping_19 (store v_r_state_dropping_20 v_r_state_dropping.write_index_2 v_r_state_dropping.write_value_2))  InVars {r_state_dropping=v_r_state_dropping_20, r_state_dropping.write_index=v_r_state_dropping.write_index_2, r_state_dropping.write_value=v_r_state_dropping.write_value_2}  OutVars{r_state_dropping=v_r_state_dropping_19, r_state_dropping.write_index=v_r_state_dropping.write_index_2, r_state_dropping.write_value=v_r_state_dropping.write_value_2}  AuxVars[]  AssignedVars[r_state_dropping] 16328#r_state_dropping.writeFINAL_T1_init [1836] r_state_dropping.writeFINAL_T1_init-->r_state_dropping.writeEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16327#r_state_dropping.writeEXIT_T1_init >[2907] r_state_dropping.writeEXIT_T1_init-->L317-D116: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_r_state_dropping.write_indexInParam_1 v_meta.codel.queue_id_27) (= v_r_state_dropping.write_valueInParam_1 0))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_27}  OutVars{r_state_dropping.write_index=v_r_state_dropping.write_indexInParam_1, meta.codel.queue_id=v_meta.codel.queue_id_27, r_state_dropping.write_value=v_r_state_dropping.write_valueInParam_1}  AuxVars[]  AssignedVars[r_state_dropping.write_index, r_state_dropping.write_value] 16266#L317-D116 [2537] L317-D116-->L317_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16267#L317_T1_init [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 16346#L369_T1_init [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 16345#egressFINAL_T1_init [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16343#egressEXIT_T1_init >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16342#L539-D173 [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16340#L539_T1_init [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16341#L539_T1_init-D35 [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16344#computeChecksumFINAL_T1_init [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16339#computeChecksumEXIT_T1_init >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16338#L540-D104 [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16337#L540_T1_init [2365] L540_T1_init-->L541-1_T1_init: Formula: v_forward_25  InVars {forward=v_forward_25}  OutVars{forward=v_forward_25}  AuxVars[]  AssignedVars[] 16335#L541-1_T1_init [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 16334#L545_T1_init [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 16333#L546_T1_init [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 16332#L547_T1_init [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 16331#mainFINAL_T1_init [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16330#mainEXIT_T1_init >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16329#L553-1-D128 [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 16223#L553-1_T0_S2 [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15280#L553_T0_S2 [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16132#L553_T0_S2-D52 [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15298#mainENTRY_T0_S2 [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15497#mainENTRY_T0_S2-D58 [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16022#havocProcedureENTRY_T0_S2 [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 16016#L402_T0_S2 [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 15925#L403_T0_S2 [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 15926#L404_T0_S2 [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 15515#L405_T0_S2 [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 15373#L406_T0_S2 [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 15374#L407_T0_S2 [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 15577#L408_T0_S2 [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 15703#L409_T0_S2 [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 16026#L410_T0_S2 [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 15647#L411_T0_S2 [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 15648#L412_T0_S2 [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 16003#L413_T0_S2 [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 15783#L414_T0_S2 [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 15784#L415_T0_S2 [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 16150#L416_T0_S2 [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 15684#L417_T0_S2 [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 15685#L418_T0_S2 [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 16124#L419_T0_S2 [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 16125#L420_T0_S2 [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 15704#L421_T0_S2 [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 15705#L422_T0_S2 [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 15773#L423_T0_S2 [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 16126#L424_T0_S2 [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 15525#L425_T0_S2 [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 15526#L426_T0_S2 [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 16077#L427_T0_S2 [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 15426#L428_T0_S2 [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 15427#L429_T0_S2 [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 16035#L430_T0_S2 [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 15664#L431_T0_S2 [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 15665#L432_T0_S2 [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 15581#L433_T0_S2 [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 15582#L434_T0_S2 [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 16212#L435_T0_S2 [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 16161#L436_T0_S2 [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 16162#L437_T0_S2 [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 16247#L438_T0_S2 [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 15871#L439_T0_S2 [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 15686#L440_T0_S2 [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 15687#L441_T0_S2 [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 15795#L442_T0_S2 [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 15796#L443_T0_S2 [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 16264#L444_T0_S2 [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 16178#L445_T0_S2 [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 16179#L446_T0_S2 [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 15865#L447_T0_S2 [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 15866#L448_T0_S2 [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 15478#L449_T0_S2 [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 15479#L450_T0_S2 [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 15580#L451_T0_S2 [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 15951#L452_T0_S2 [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 15952#L453_T0_S2 [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 16000#L454_T0_S2 [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 16001#L455_T0_S2 [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 16155#L456_T0_S2 [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 15493#L457_T0_S2 [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 15494#L458_T0_S2 [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 15839#L459_T0_S2 [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 16011#L460_T0_S2 [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 15875#L461_T0_S2 [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 15688#L462_T0_S2 [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 15689#L463_T0_S2 [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 16166#L464_T0_S2 [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 16151#L465_T0_S2 [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 16152#L466_T0_S2 [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 15309#L467_T0_S2 [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 15310#L468_T0_S2 [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 16208#L469_T0_S2 [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 15837#L470_T0_S2 [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 15838#L471_T0_S2 [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 15972#L472_T0_S2 [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 15973#L473_T0_S2 [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 15457#L474_T0_S2 [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 15458#L475_T0_S2 [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 15673#L476_T0_S2 [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 16196#L477_T0_S2 [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 16098#L478_T0_S2 [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 15511#L479_T0_S2 [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 15512#L480_T0_S2 [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 15414#L481_T0_S2 [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 15415#L482_T0_S2 [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 16019#L483_T0_S2 [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 16149#L484_T0_S2 [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 16215#L485_T0_S2 [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 16216#L486_T0_S2 [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 16286#L487_T0_S2 [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 15777#L488_T0_S2 [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 15778#L489_T0_S2 [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 16219#L490_T0_S2 [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 16169#L491_T0_S2 [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 15587#L492_T0_S2 [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 15588#L493_T0_S2 [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 15779#L494_T0_S2 [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 15649#L495_T0_S2 [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 15650#L496_T0_S2 [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 16010#L497_T0_S2 [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 15467#L498_T0_S2 [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 15468#L499_T0_S2 [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 16082#L500_T0_S2 [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 15656#L501_T0_S2 [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 15657#L502_T0_S2 [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 16182#L503_T0_S2 [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 16289#L504_T0_S2 [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 15319#L505_T0_S2 [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15320#L506_T0_S2 [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 16220#L507_T0_S2 [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 16224#L508_T0_S2 [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 15451#L509_T0_S2 [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 15452#L510_T0_S2 [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 15597#L511_T0_S2 [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 15598#L512_T0_S2 [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 15603#L513_T0_S2 [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 15297#L514_T0_S2 [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 15299#L515_T0_S2 [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 15398#L516_T0_S2 [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 15399#L517_T0_S2 [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15742#L518_T0_S2 [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 15743#L519_T0_S2 [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 15601#L520_T0_S2 [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 15602#L521_T0_S2 [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 15917#L522_T0_S2 [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 15918#L523_T0_S2 [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 16297#havocProcedureFINAL_T0_S2 [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16277#havocProcedureEXIT_T0_S2 >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16278#L535-D97 [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15279#L535_T0_S2 [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15281#L535_T0_S2-D64 [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15791#_parser_ParserImplENTRY_T0_S2 [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15790#_parser_ParserImplENTRY_T0_S2-D49 [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15792#startENTRY_T0_S2 [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 16118#L643_T0_S2 [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 15988#L643-1_T0_S2 [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15989#startEXIT_T0_S2 >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16008#_parser_ParserImplFINAL-D109 [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16112#_parser_ParserImplFINAL_T0_S2 [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16287#_parser_ParserImplEXIT_T0_S2 >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15508#L536-D148 [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15509#L536_T0_S2 [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16233#L536_T0_S2-D91 [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16237#verifyChecksumFINAL_T0_S2 [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16238#verifyChecksumEXIT_T0_S2 >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15614#L537-D145 [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15615#L537_T0_S2 [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15827#L537_T0_S2-D70 [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15351#ingressENTRY_T0_S2 [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15731#ingressENTRY_T0_S2-D79 [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15808#forwarding_0.applyENTRY_T0_S2 [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 16111#L394_T0_S2 [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 15352#L394-1_T0_S2 [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16134#forwarding_0.applyEXIT_T0_S2 >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16023#ingressFINAL-D175 [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15898#ingressFINAL_T0_S2 [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15899#ingressEXIT_T0_S2 >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15459#L538-D142 [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15327#L538_T0_S2 [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15328#L538_T0_S2-D16 [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15563#egressENTRY_T0_S2 [2475] egressENTRY_T0_S2-->L318_T0_S2: Formula: (= v_standard_metadata.ingress_port_20 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  AuxVars[]  AssignedVars[] 16243#L318_T0_S2 [2613] L318_T0_S2-->L319_T0_S2: Formula: (= v_meta.codel.queue_id_38 v_standard_metadata.egress_port_20)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_20}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20, meta.codel.queue_id=v_meta.codel.queue_id_38}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15445#L319_T0_S2 [2128] L319_T0_S2-->L319_T0_S2-D73: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15959#L319_T0_S2-D73 [2542] L319_T0_S2-D73-->c_codel_0_a_codel_init_0ENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15770#c_codel_0_a_codel_init_0ENTRY_T0_S2 [1991] c_codel_0_a_codel_init_0ENTRY_T0_S2-->L266_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_37)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_37}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 15771#L266_T0_S2 [2540] L266_T0_S2-->L267_T0_S2: Formula: (= v_meta.codel.time_now_38 (mod (+ (mod v_standard_metadata.enq_timestamp_17 281474976710656) (mod v_standard_metadata.deq_timedelta_29 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, meta.codel.time_now=v_meta.codel.time_now_38}  AuxVars[]  AssignedVars[meta.codel.time_now] 15802#L267_T0_S2 [2014] L267_T0_S2-->L269_T0_S2: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_37 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_22)  InVars {meta.codel.time_now=v_meta.codel.time_now_37}  OutVars{meta.codel.time_now=v_meta.codel.time_now_37, meta.codel.new_drop_time=v_meta.codel.new_drop_time_22}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 15803#L269_T0_S2 [2401] L269_T0_S2-->L271_T0_S2: Formula: (= v_meta.codel.state_dropping_25 (select v_r_state_dropping_16 v_meta.codel.queue_id_45))  InVars {r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45}  OutVars{r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45, meta.codel.state_dropping=v_meta.codel.state_dropping_25}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 16171#L271_T0_S2 [2346] L271_T0_S2-->L273_T0_S2: Formula: (= (select v_r_drop_count_19 v_meta.codel.queue_id_47) v_meta.codel.drop_cnt_37)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_37, meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 15928#L273_T0_S2 [2104] L273_T0_S2-->L275_T0_S2: Formula: (= (select v_r_last_drop_count_14 v_meta.codel.queue_id_52) v_meta.codel.last_drop_cnt_19)  InVars {r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52}  OutVars{r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_19}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 15929#L275_T0_S2 [2752] L275_T0_S2-->L277_T0_S2: Formula: (= (select v_r_next_drop_18 v_meta.codel.queue_id_40) v_meta.codel.drop_next_34)  InVars {r_next_drop=v_r_next_drop_18, meta.codel.queue_id=v_meta.codel.queue_id_40}  OutVars{r_next_drop=v_r_next_drop_18, meta.codel.drop_next=v_meta.codel.drop_next_34, meta.codel.queue_id=v_meta.codel.queue_id_40}  AuxVars[]  AssignedVars[meta.codel.drop_next] 15444#L277_T0_S2 [1808] L277_T0_S2-->c_codel_0_a_codel_init_0FINAL_T0_S2: Formula: (= v_meta.codel.drop_time_42 (select v_r_drop_time_15 v_meta.codel.queue_id_48))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_48, r_drop_time=v_r_drop_time_15}  OutVars{r_drop_time=v_r_drop_time_15, meta.codel.queue_id=v_meta.codel.queue_id_48, meta.codel.drop_time=v_meta.codel.drop_time_42}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15446#c_codel_0_a_codel_init_0FINAL_T0_S2 [2506] c_codel_0_a_codel_init_0FINAL_T0_S2-->c_codel_0_a_codel_init_0EXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15930#c_codel_0_a_codel_init_0EXIT_T0_S2 >[2896] c_codel_0_a_codel_init_0EXIT_T0_S2-->L319-1-D124: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15921#L319-1-D124 [2096] L319-1-D124-->L319-1_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15922#L319-1_T0_S2 [2439] L319-1_T0_S2-->L320-1_T0_S2: Formula: (not (< v_standard_metadata.deq_timedelta_20 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  AuxVars[]  AssignedVars[] 15785#L320-1_T0_S2 [2006] L320-1_T0_S2-->L329_T0_S2: Formula: (not (= v_meta.codel.reset_drop_time_22 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  AuxVars[]  AssignedVars[] 15786#L329_T0_S2 [2357] L329_T0_S2-->L335_T0_S2: Formula: (not (= v_meta.codel.drop_time_38 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_38}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_38}  AuxVars[]  AssignedVars[] 16180#L335_T0_S2 [2459] L335_T0_S2-->L335-2_T0_S2: Formula: (not (<= v_meta.codel.drop_time_27 v_meta.codel.time_now_27))  InVars {meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  OutVars{meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  AuxVars[]  AssignedVars[] 16128#L335-2_T0_S2 [2111] L335-2_T0_S2-->L356_T0_S2: Formula: (not (= v_meta.codel.state_dropping_20 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_20}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_20}  AuxVars[]  AssignedVars[] 16234#L356_T0_S2 [2442] L356_T0_S2-->L317_T0_S2: Formula: (not (= v_meta.codel.ok_to_drop_36 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  AuxVars[]  AssignedVars[] 16109#L317_T0_S2 [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 15758#L369_T0_S2 [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 15341#egressFINAL_T0_S2 [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15342#egressEXIT_T0_S2 >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15913#L539-D172 [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15344#L539_T0_S2 [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15343#L539_T0_S2-D34 [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15345#computeChecksumFINAL_T0_S2 [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16053#computeChecksumEXIT_T0_S2 >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16114#L540-D103 [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15860#L540_T0_S2 [2052] L540_T0_S2-->L541-1_T0_S2: Formula: v_forward_23  InVars {forward=v_forward_23}  OutVars{forward=v_forward_23}  AuxVars[]  AssignedVars[] 15558#L541-1_T0_S2 [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 15625#L545_T0_S2 [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 15655#L546_T0_S2 [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 15607#L547_T0_S2 [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 15608#mainFINAL_T0_S2 [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15700#mainEXIT_T0_S2 >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16262#L553-1-D127 [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 15631#L553-1_accept_S5 
[2023-02-07 02:28:17,840 INFO  L754   eck$LassoCheckResult]: Loop: 15631#L553-1_accept_S5 [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15301#L553_accept_S5 [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15401#L553_accept_S5-D54 [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15307#mainENTRY_accept_S5 [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16185#mainENTRY_accept_S5-D60 [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15797#havocProcedureENTRY_accept_S5 [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 15798#L402_accept_S5 [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 16083#L403_accept_S5 [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 15396#L404_accept_S5 [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 15397#L405_accept_S5 [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 15623#L406_accept_S5 [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 15624#L407_accept_S5 [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 15840#L408_accept_S5 [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 15841#L409_accept_S5 [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 15890#L410_accept_S5 [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 15891#L411_accept_S5 [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 15641#L412_accept_S5 [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 15642#L413_accept_S5 [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 15856#L414_accept_S5 [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 15306#L415_accept_S5 [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 15308#L416_accept_S5 [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 16099#L417_accept_S5 [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 15874#L418_accept_S5 [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 15854#L419_accept_S5 [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 15353#L420_accept_S5 [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 15354#L421_accept_S5 [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 16164#L422_accept_S5 [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 16165#L423_accept_S5 [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 16068#L424_accept_S5 [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 15934#L425_accept_S5 [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 15904#L426_accept_S5 [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 15905#L427_accept_S5 [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 16063#L428_accept_S5 [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 16064#L429_accept_S5 [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 16070#L430_accept_S5 [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 15537#L431_accept_S5 [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 15538#L432_accept_S5 [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 15539#L433_accept_S5 [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 16240#L434_accept_S5 [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 15513#L435_accept_S5 [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 15514#L436_accept_S5 [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 15491#L437_accept_S5 [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 15492#L438_accept_S5 [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 15752#L439_accept_S5 [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 16072#L440_accept_S5 [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 15938#L441_accept_S5 [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 15830#L442_accept_S5 [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 15831#L443_accept_S5 [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 15486#L444_accept_S5 [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 15487#L445_accept_S5 [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 15585#L446_accept_S5 [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 15876#L447_accept_S5 [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 15877#L448_accept_S5 [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 16115#L449_accept_S5 [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 16183#L450_accept_S5 [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 16172#L451_accept_S5 [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 16168#L452_accept_S5 [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 16113#L453_accept_S5 [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 16046#L454_accept_S5 [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 15578#L455_accept_S5 [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 15579#L456_accept_S5 [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 16045#L457_accept_S5 [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 15992#L458_accept_S5 [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 15993#L459_accept_S5 [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 15996#L460_accept_S5 [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 16140#L461_accept_S5 [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 16232#L462_accept_S5 [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 16253#L463_accept_S5 [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 15910#L464_accept_S5 [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 15911#L465_accept_S5 [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 16288#L466_accept_S5 [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 16211#L467_accept_S5 [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 16186#L468_accept_S5 [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 15540#L469_accept_S5 [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 15541#L470_accept_S5 [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 15835#L471_accept_S5 [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 15836#L472_accept_S5 [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 16239#L473_accept_S5 [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 15828#L474_accept_S5 [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 15829#L475_accept_S5 [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 15975#L476_accept_S5 [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 15697#L477_accept_S5 [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 15698#L478_accept_S5 [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 15723#L479_accept_S5 [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 16190#L480_accept_S5 [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 15683#L481_accept_S5 [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 15527#L482_accept_S5 [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 15528#L483_accept_S5 [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 16090#L484_accept_S5 [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 15455#L485_accept_S5 [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 15456#L486_accept_S5 [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 16144#L487_accept_S5 [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 16207#L488_accept_S5 [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 15416#L489_accept_S5 [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 15417#L490_accept_S5 [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 15566#L491_accept_S5 [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 15567#L492_accept_S5 [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 16006#L493_accept_S5 [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 15966#L494_accept_S5 [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 15967#L495_accept_S5 [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 15811#L496_accept_S5 [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 15812#L497_accept_S5 [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 16222#L498_accept_S5 [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 15391#L499_accept_S5 [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 15392#L500_accept_S5 [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 16313#L501_accept_S5 [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 15738#L502_accept_S5 [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 15739#L503_accept_S5 [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 15864#L504_accept_S5 [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 15367#L505_accept_S5 [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15368#L506_accept_S5 [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 16060#L507_accept_S5 [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 16269#L508_accept_S5 [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 16296#L509_accept_S5 [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 16293#L510_accept_S5 [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 16242#L511_accept_S5 [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 16079#L512_accept_S5 [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 16080#L513_accept_S5 [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 15571#L514_accept_S5 [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 15572#L515_accept_S5 [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 16163#L516_accept_S5 [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 15632#L517_accept_S5 [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15633#L518_accept_S5 [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 16012#L519_accept_S5 [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 15402#L520_accept_S5 [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 15403#L521_accept_S5 [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 15529#L522_accept_S5 [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 15612#L523_accept_S5 [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 15613#havocProcedureFINAL_accept_S5 [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16117#havocProcedureEXIT_accept_S5 >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16147#L535-D99 [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15523#L535_accept_S5 [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16221#L535_accept_S5-D66 [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15627#_parser_ParserImplENTRY_accept_S5 [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15793#_parser_ParserImplENTRY_accept_S5-D51 [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15794#startENTRY_accept_S5 [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 16073#L643_accept_S5 [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 15626#L643-1_accept_S5 [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15628#startEXIT_accept_S5 >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15522#_parser_ParserImplFINAL-D111 [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15524#_parser_ParserImplFINAL_accept_S5 [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15969#_parser_ParserImplEXIT_accept_S5 >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15736#L536-D150 [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15737#L536_accept_S5 [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15805#L536_accept_S5-D93 [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15806#verifyChecksumFINAL_accept_S5 [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16298#verifyChecksumEXIT_accept_S5 >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15974#L537-D147 [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15714#L537_accept_S5 [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15749#L537_accept_S5-D72 [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15365#ingressENTRY_accept_S5 [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 16316#ingressENTRY_accept_S5-D81 [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16028#forwarding_0.applyENTRY_accept_S5 [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 16029#L394_accept_S5 [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 15857#L394-1_accept_S5 [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15858#forwarding_0.applyEXIT_accept_S5 >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15713#ingressFINAL-D177 [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15715#ingressFINAL_accept_S5 [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15724#ingressEXIT_accept_S5 >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16097#L538-D144 [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15295#L538_accept_S5 [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15331#L538_accept_S5-D18 [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15332#egressENTRY_accept_S5 [1908] egressENTRY_accept_S5-->L318_accept_S5: Formula: (= v_standard_metadata.ingress_port_18 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[] 15294#L318_accept_S5 [1749] L318_accept_S5-->L319_accept_S5: Formula: (= v_meta.codel.queue_id_37 v_standard_metadata.egress_port_19)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_19}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19, meta.codel.queue_id=v_meta.codel.queue_id_37}  AuxVars[]  AssignedVars[meta.codel.queue_id] 15296#L319_accept_S5 [2164] L319_accept_S5-->L319_accept_S5-D75: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15691#L319_accept_S5-D75 [1938] L319_accept_S5-D75-->c_codel_0_a_codel_init_0ENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15317#c_codel_0_a_codel_init_0ENTRY_accept_S5 [1756] c_codel_0_a_codel_init_0ENTRY_accept_S5-->L266_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_38)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_38}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 15318#L266_accept_S5 [2685] L266_accept_S5-->L267_accept_S5: Formula: (= v_meta.codel.time_now_36 (mod (+ (mod v_standard_metadata.deq_timedelta_28 281474976710656) (mod v_standard_metadata.enq_timestamp_16 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, meta.codel.time_now=v_meta.codel.time_now_36}  AuxVars[]  AssignedVars[meta.codel.time_now] 16204#L267_accept_S5 [2392] L267_accept_S5-->L269_accept_S5: Formula: (= v_meta.codel.new_drop_time_24 (mod (+ 100000 (mod v_meta.codel.time_now_41 281474976710656)) 281474976710656))  InVars {meta.codel.time_now=v_meta.codel.time_now_41}  OutVars{meta.codel.time_now=v_meta.codel.time_now_41, meta.codel.new_drop_time=v_meta.codel.new_drop_time_24}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 15488#L269_accept_S5 [1824] L269_accept_S5-->L271_accept_S5: Formula: (= (select v_r_state_dropping_18 v_meta.codel.queue_id_53) v_meta.codel.state_dropping_27)  InVars {r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53}  OutVars{r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53, meta.codel.state_dropping=v_meta.codel.state_dropping_27}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 15489#L271_accept_S5 [2261] L271_accept_S5-->L273_accept_S5: Formula: (= (select v_r_drop_count_20 v_meta.codel.queue_id_49) v_meta.codel.drop_cnt_38)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_38, meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 16092#L273_accept_S5 [2628] L273_accept_S5-->L275_accept_S5: Formula: (= (select v_r_last_drop_count_13 v_meta.codel.queue_id_42) v_meta.codel.last_drop_cnt_18)  InVars {r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42}  OutVars{r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_18}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 15987#L275_accept_S5 [2151] L275_accept_S5-->L277_accept_S5: Formula: (= v_meta.codel.drop_next_35 (select v_r_next_drop_19 v_meta.codel.queue_id_46))  InVars {r_next_drop=v_r_next_drop_19, meta.codel.queue_id=v_meta.codel.queue_id_46}  OutVars{r_next_drop=v_r_next_drop_19, meta.codel.drop_next=v_meta.codel.drop_next_35, meta.codel.queue_id=v_meta.codel.queue_id_46}  AuxVars[]  AssignedVars[meta.codel.drop_next] 15634#L277_accept_S5 [1910] L277_accept_S5-->c_codel_0_a_codel_init_0FINAL_accept_S5: Formula: (= v_meta.codel.drop_time_43 (select v_r_drop_time_16 v_meta.codel.queue_id_54))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_54, r_drop_time=v_r_drop_time_16}  OutVars{r_drop_time=v_r_drop_time_16, meta.codel.queue_id=v_meta.codel.queue_id_54, meta.codel.drop_time=v_meta.codel.drop_time_43}  AuxVars[]  AssignedVars[meta.codel.drop_time] 15635#c_codel_0_a_codel_init_0FINAL_accept_S5 [2464] c_codel_0_a_codel_init_0FINAL_accept_S5-->c_codel_0_a_codel_init_0EXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15643#c_codel_0_a_codel_init_0EXIT_accept_S5 >[2763] c_codel_0_a_codel_init_0EXIT_accept_S5-->L319-1-D126: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15644#L319-1-D126 [1959] L319-1-D126-->L319-1_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15718#L319-1_accept_S5 [2249] L319-1_accept_S5-->L320-1_accept_S5: Formula: (not (< v_standard_metadata.deq_timedelta_26 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  AuxVars[]  AssignedVars[] 15536#L320-1_accept_S5 [2653] L320-1_accept_S5-->L329_accept_S5: Formula: (not (= v_meta.codel.reset_drop_time_19 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  AuxVars[]  AssignedVars[] 16295#L329_accept_S5 [2634] L329_accept_S5-->L335_accept_S5: Formula: (not (= v_meta.codel.drop_time_24 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_24}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_24}  AuxVars[]  AssignedVars[] 15358#L335_accept_S5 [1773] L335_accept_S5-->L335-2_accept_S5: Formula: (not (<= v_meta.codel.drop_time_32 v_meta.codel.time_now_29))  InVars {meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  OutVars{meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  AuxVars[]  AssignedVars[] 15360#L335-2_accept_S5 [1804] L335-2_accept_S5-->L356_accept_S5: Formula: (not (= v_meta.codel.state_dropping_22 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_22}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_22}  AuxVars[]  AssignedVars[] 15430#L356_accept_S5 [1853] L356_accept_S5-->L317_accept_S5: Formula: (not (= v_meta.codel.ok_to_drop_31 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  AuxVars[]  AssignedVars[] 15481#L317_accept_S5 [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 15834#L369_accept_S5 [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 16205#egressFINAL_accept_S5 [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16191#egressEXIT_accept_S5 >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15300#L539-D174 [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15302#L539_accept_S5 [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 15807#L539_accept_S5-D36 [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15725#computeChecksumFINAL_accept_S5 [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15726#computeChecksumEXIT_accept_S5 >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 16206#L540-D105 [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15501#L540_accept_S5 [1832] L540_accept_S5-->L541-1_accept_S5: Formula: v_forward_21  InVars {forward=v_forward_21}  OutVars{forward=v_forward_21}  AuxVars[]  AssignedVars[] 15503#L541-1_accept_S5 [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 16110#L545_accept_S5 [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 16187#L546_accept_S5 [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 15329#L547_accept_S5 [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 15330#mainFINAL_accept_S5 [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15516#mainEXIT_accept_S5 >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 15991#L553-1-D129 [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 15631#L553-1_accept_S5 
[2023-02-07 02:28:17,841 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:17,841 INFO  L85        PathProgramCache]: Analyzing trace with hash 12873957, now seen corresponding path program 1 times
[2023-02-07 02:28:17,841 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:17,841 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [381096420]
[2023-02-07 02:28:17,841 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:17,841 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:17,855 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:17,911 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 2
[2023-02-07 02:28:17,921 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:17,977 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:17,984 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:17,999 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:18,001 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,008 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:18,009 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,010 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:18,011 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,015 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:18,017 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,028 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:18,029 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,038 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:18,043 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,053 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:18,055 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,061 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 22
[2023-02-07 02:28:18,062 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,063 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 192
[2023-02-07 02:28:18,063 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,066 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 209
[2023-02-07 02:28:18,077 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,087 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:18,092 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,099 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 129
[2023-02-07 02:28:18,100 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,102 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:18,103 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,103 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 141
[2023-02-07 02:28:18,104 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,105 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 146
[2023-02-07 02:28:18,106 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,107 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 1
[2023-02-07 02:28:18,108 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,108 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 158
[2023-02-07 02:28:18,110 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,113 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 3
[2023-02-07 02:28:18,114 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,115 INFO  L376   atingTraceCheckCraig]: Compute interpolants for subsequence at non-pending call position 186
[2023-02-07 02:28:18,116 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2023-02-07 02:28:18,118 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2023-02-07 02:28:18,118 INFO  L136   FreeRefinementEngine]: Strategy CAMEL found an infeasible trace
[2023-02-07 02:28:18,118 INFO  L333   FreeRefinementEngine]: Using interpolant generator IpTcStrategyModuleSmtInterpolCraig [381096420]
[2023-02-07 02:28:18,118 INFO  L157   FreeRefinementEngine]: IpTcStrategyModuleSmtInterpolCraig [381096420] provided 1 perfect and 0 imperfect interpolant sequences
[2023-02-07 02:28:18,118 INFO  L184   FreeRefinementEngine]: Found 1 perfect and 0 imperfect interpolant sequences.
[2023-02-07 02:28:18,118 INFO  L197   FreeRefinementEngine]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2023-02-07 02:28:18,119 INFO  L121   tionRefinementEngine]: Using interpolant automaton builder IpAbStrategyModuleStraightlineAll [2050688552]
[2023-02-07 02:28:18,119 INFO  L85    oduleStraightlineAll]: Using 1 perfect interpolants to construct interpolant automaton
[2023-02-07 02:28:18,119 INFO  L757   eck$LassoCheckResult]: stem already infeasible
[2023-02-07 02:28:18,119 INFO  L100   FreeRefinementEngine]: Using predicate unifier PredicateUnifier provided by strategy CAMEL
[2023-02-07 02:28:18,119 INFO  L143   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2023-02-07 02:28:18,120 INFO  L145   InterpolantAutomaton]: CoverageRelationStatistics Valid=39, Invalid=93, Unknown=0, NotChecked=0, Total=132
[2023-02-07 02:28:18,120 INFO  L87              Difference]: Start difference. First operand 1123 states and 1203 transitions. cyclomatic complexity: 83 Second operand  has 12 states, 12 states have (on average 30.5) internal successors, (366), 4 states have internal predecessors, (366), 4 states have call successors, (22), 9 states have call predecessors, (22), 4 states have return successors, (21), 4 states have call predecessors, (21), 4 states have call successors, (21)
[2023-02-07 02:28:20,034 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2023-02-07 02:28:20,034 INFO  L93              Difference]: Finished difference Result 1842 states and 2053 transitions.
[2023-02-07 02:28:20,034 INFO  L141   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 35 states. 
[2023-02-07 02:28:20,035 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1842 states and 2053 transitions.
[2023-02-07 02:28:20,040 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2023-02-07 02:28:20,046 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1842 states to 1842 states and 2053 transitions.
[2023-02-07 02:28:20,046 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 274
[2023-02-07 02:28:20,046 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 274
[2023-02-07 02:28:20,046 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1842 states and 2053 transitions.
[2023-02-07 02:28:20,048 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2023-02-07 02:28:20,049 INFO  L369   hiAutomatonCegarLoop]: Abstraction has 1842 states and 2053 transitions.
[2023-02-07 02:28:20,050 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1842 states and 2053 transitions.
[2023-02-07 02:28:20,065 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1842 to 1598.
[2023-02-07 02:28:20,066 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand  has 1598 states, 1269 states have (on average 1.0929866036249014) internal successors, (1387), 1254 states have internal predecessors, (1387), 168 states have call successors, (168), 168 states have call predecessors, (168), 161 states have return successors, (176), 176 states have call predecessors, (176), 167 states have call successors, (176)
[2023-02-07 02:28:20,068 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1598 states to 1598 states and 1731 transitions.
[2023-02-07 02:28:20,068 INFO  L392   hiAutomatonCegarLoop]: Abstraction has 1598 states and 1731 transitions.
[2023-02-07 02:28:20,068 INFO  L399   stractBuchiCegarLoop]: Abstraction has 1598 states and 1731 transitions.
[2023-02-07 02:28:20,068 INFO  L287   stractBuchiCegarLoop]: ======== Iteration 6 ============
[2023-02-07 02:28:20,068 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1598 states and 1731 transitions.
[2023-02-07 02:28:20,071 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 3
[2023-02-07 02:28:20,071 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2023-02-07 02:28:20,071 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2023-02-07 02:28:20,072 INFO  L179   hiAutomatonCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:20,072 INFO  L180   hiAutomatonCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2023-02-07 02:28:20,075 INFO  L752   eck$LassoCheckResult]: Stem: 19268#ULTIMATE.startENTRY_NONWA [1825] ULTIMATE.startENTRY_NONWA-->L553-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19361#L553-1_T1_init [2446] L553-1_T1_init-->L553_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19305#L553_T1_init [2119] L553_T1_init-->L553_T1_init-D53: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19865#L553_T1_init-D53 [2596] L553_T1_init-D53-->mainENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19215#mainENTRY_T1_init [2650] mainENTRY_T1_init-->mainENTRY_T1_init-D59: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20145#mainENTRY_T1_init-D59 [2371] mainENTRY_T1_init-D59-->havocProcedureENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19710#havocProcedureENTRY_T1_init [2021] havocProcedureENTRY_T1_init-->L402_T1_init: Formula: (not v_drop_32)  InVars {}  OutVars{drop=v_drop_32}  AuxVars[]  AssignedVars[drop] 19711#L402_T1_init [2255] L402_T1_init-->L403_T1_init: Formula: (not v_forward_19)  InVars {}  OutVars{forward=v_forward_19}  AuxVars[]  AssignedVars[forward] 19528#L403_T1_init [1915] L403_T1_init-->L404_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_16}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 19529#L404_T1_init [2189] L404_T1_init-->L405_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_port_13) (< v_standard_metadata.ingress_port_13 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_13}  AuxVars[]  AssignedVars[] 19861#L405_T1_init [2118] L405_T1_init-->L406_T1_init: Formula: (= v_standard_metadata.egress_spec_16 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_16}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 19862#L406_T1_init [2639] L406_T1_init-->L407_T1_init: Formula: (= 0 v_standard_metadata.egress_port_16)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_16}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 19706#L407_T1_init [2019] L407_T1_init-->L408_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_11}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 19707#L408_T1_init [2156] L408_T1_init-->L409_T1_init: Formula: (and (< v_standard_metadata.instance_type_13 4294967296) (<= 0 v_standard_metadata.instance_type_13))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_13}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_13}  AuxVars[]  AssignedVars[] 19916#L409_T1_init [2725] L409_T1_init-->L410_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_9}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 20231#L410_T1_init [2493] L410_T1_init-->L411_T1_init: Formula: (and (<= 0 v_standard_metadata.packet_length_11) (< v_standard_metadata.packet_length_11 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_11}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_11}  AuxVars[]  AssignedVars[] 19255#L411_T1_init [1785] L411_T1_init-->L412_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 19256#L412_T1_init [2331] L412_T1_init-->L413_T1_init: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_13) (< v_standard_metadata.enq_timestamp_13 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_13}  AuxVars[]  AssignedVars[] 20106#L413_T1_init [2734] L413_T1_init-->L414_T1_init: Formula: (= v_standard_metadata.enq_qdepth_9 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 19950#L414_T1_init [2187] L414_T1_init-->L415_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_18}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 19951#L415_T1_init [2414] L415_T1_init-->L416_T1_init: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_13) (< v_standard_metadata.deq_timedelta_13 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_13}  AuxVars[]  AssignedVars[] 19603#L416_T1_init [1961] L416_T1_init-->L417_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_13}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 19604#L417_T1_init [2606] L417_T1_init-->L418_T1_init: Formula: (and (< v_standard_metadata.deq_qdepth_11 524288) (<= 0 v_standard_metadata.deq_qdepth_11))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_11}  AuxVars[]  AssignedVars[] 20073#L418_T1_init [2302] L418_T1_init-->L419_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_11}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 20074#L419_T1_init [2347] L419_T1_init-->L420_T1_init: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_10) (< v_standard_metadata.ingress_global_timestamp_10 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_10}  AuxVars[]  AssignedVars[] 19450#L420_T1_init [1868] L420_T1_init-->L421_T1_init: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 19451#L421_T1_init [2264] L421_T1_init-->L422_T1_init: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_13) (< v_standard_metadata.egress_global_timestamp_13 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_13}  AuxVars[]  AssignedVars[] 20032#L422_T1_init [2383] L422_T1_init-->L423_T1_init: Formula: (= 0 v_standard_metadata.mcast_grp_9)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_9}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 19968#L423_T1_init [2206] L423_T1_init-->L424_T1_init: Formula: (= v_standard_metadata.egress_rid_8 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_8}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 19969#L424_T1_init [2672] L424_T1_init-->L425_T1_init: Formula: (= v_standard_metadata.checksum_error_9 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_9}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 20321#L425_T1_init [2677] L425_T1_init-->L426_T1_init: Formula: (= v_standard_metadata.parser_error_9 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_9}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 20210#L426_T1_init [2455] L426_T1_init-->L427_T1_init: Formula: (= v_standard_metadata.priority_9 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_9}  AuxVars[]  AssignedVars[standard_metadata.priority] 20211#L427_T1_init [2462] L427_T1_init-->L428_T1_init: Formula: (not v_hdr.ethernet.valid_13)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_13}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20039#L428_T1_init [2271] L428_T1_init-->L429_T1_init: Formula: (= v_emit_21 (store v_emit_22 v_hdr.ethernet_2 false))  InVars {emit=v_emit_22, hdr.ethernet=v_hdr.ethernet_2}  OutVars{emit=v_emit_21, hdr.ethernet=v_hdr.ethernet_2}  AuxVars[]  AssignedVars[emit] 19918#L429_T1_init [2159] L429_T1_init-->L430_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_18}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 19919#L430_T1_init [2656] L430_T1_init-->L431_T1_init: Formula: (and (<= 0 v_hdr.ethernet.dst_addr_21) (< v_hdr.ethernet.dst_addr_21 281474976710656))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_21}  AuxVars[]  AssignedVars[] 19323#L431_T1_init [1811] L431_T1_init-->L432_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_14}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 19324#L432_T1_init [2144] L432_T1_init-->L433_T1_init: Formula: (and (<= 0 v_hdr.ethernet.src_addr_11) (< v_hdr.ethernet.src_addr_11 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_11}  AuxVars[]  AssignedVars[] 19895#L433_T1_init [2556] L433_T1_init-->L434_T1_init: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_14}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 19641#L434_T1_init [1984] L434_T1_init-->L435_T1_init: Formula: (and (< v_hdr.ethernet.ethertype_11 65536) (<= 0 v_hdr.ethernet.ethertype_11))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_11}  AuxVars[]  AssignedVars[] 19642#L435_T1_init [2205] L435_T1_init-->L436_T1_init: Formula: (not v_hdr.ipv4.valid_15)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_15}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 19967#L436_T1_init [2218] L436_T1_init-->L437_T1_init: Formula: (= v_emit_45 (store v_emit_46 v_hdr.ipv4_3 false))  InVars {hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_46}  OutVars{hdr.ipv4=v_hdr.ipv4_3, emit=v_emit_45}  AuxVars[]  AssignedVars[emit] 19978#L437_T1_init [2612] L437_T1_init-->L438_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_12}  AuxVars[]  AssignedVars[hdr.ipv4.version] 20109#L438_T1_init [2334] L438_T1_init-->L439_T1_init: Formula: (and (<= 0 v_hdr.ipv4.version_9) (< v_hdr.ipv4.version_9 16))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_9}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_9}  AuxVars[]  AssignedVars[] 19563#L439_T1_init [1932] L439_T1_init-->L440_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 19564#L440_T1_init [2390] L440_T1_init-->L441_T1_init: Formula: (and (<= 0 v_hdr.ipv4.ihl_9) (< v_hdr.ipv4.ihl_9 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_9}  AuxVars[]  AssignedVars[] 19214#L441_T1_init [1768] L441_T1_init-->L442_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_12}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 19216#L442_T1_init [2053] L442_T1_init-->L443_T1_init: Formula: (and (< v_hdr.ipv4.diffserv_9 256) (<= 0 v_hdr.ipv4.diffserv_9))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_9}  AuxVars[]  AssignedVars[] 19619#L443_T1_init [1970] L443_T1_init-->L444_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_17}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 19620#L444_T1_init [2225] L444_T1_init-->L445_T1_init: Formula: (and (<= 0 v_hdr.ipv4.totalLen_14) (< v_hdr.ipv4.totalLen_14 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_14}  AuxVars[]  AssignedVars[] 19552#L445_T1_init [1928] L445_T1_init-->L446_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_11}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 19553#L446_T1_init [2503] L446_T1_init-->L447_T1_init: Formula: (and (<= 0 v_hdr.ipv4.identification_12) (< v_hdr.ipv4.identification_12 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_12}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_12}  AuxVars[]  AssignedVars[] 19859#L447_T1_init [2116] L447_T1_init-->L448_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_12}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 19860#L448_T1_init [2674] L448_T1_init-->L449_T1_init: Formula: (and (<= 0 v_hdr.ipv4.flags_9) (< v_hdr.ipv4.flags_9 8))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_9}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_9}  AuxVars[]  AssignedVars[] 19389#L449_T1_init [1841] L449_T1_init-->L450_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_13}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 19390#L450_T1_init [2589] L450_T1_init-->L451_T1_init: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_14) (< v_hdr.ipv4.fragOffset_14 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_14}  AuxVars[]  AssignedVars[] 20200#L451_T1_init [2427] L451_T1_init-->L452_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_12}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 20201#L452_T1_init [2517] L452_T1_init-->L453_T1_init: Formula: (and (< v_hdr.ipv4.ttl_9 256) (<= 0 v_hdr.ipv4.ttl_9))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_9}  AuxVars[]  AssignedVars[] 19999#L453_T1_init [2233] L453_T1_init-->L454_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_15}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 19856#L454_T1_init [2114] L454_T1_init-->L455_T1_init: Formula: (and (< v_hdr.ipv4.protocol_18 256) (<= 0 v_hdr.ipv4.protocol_18))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_18}  AuxVars[]  AssignedVars[] 19857#L455_T1_init [2755] L455_T1_init-->L456_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_12}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 20325#L456_T1_init [2687] L456_T1_init-->L457_T1_init: Formula: (and (< v_hdr.ipv4.hdrChecksum_11 65536) (<= 0 v_hdr.ipv4.hdrChecksum_11))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_11}  AuxVars[]  AssignedVars[] 19512#L457_T1_init [1906] L457_T1_init-->L458_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 19513#L458_T1_init [2333] L458_T1_init-->L459_T1_init: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_12) (< v_hdr.ipv4.srcAddr_12 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_12}  AuxVars[]  AssignedVars[] 20108#L459_T1_init [2559] L459_T1_init-->L460_T1_init: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 20278#L460_T1_init [2743] L460_T1_init-->L461_T1_init: Formula: (and (< v_hdr.ipv4.dstAddr_14 4294967296) (<= 0 v_hdr.ipv4.dstAddr_14))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_14}  AuxVars[]  AssignedVars[] 19636#L461_T1_init [1980] L461_T1_init-->L462_T1_init: Formula: (not v_hdr.queue_delay.valid_22)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_22}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 19637#L462_T1_init [2095] L462_T1_init-->L463_T1_init: Formula: (= v_emit_29 (store v_emit_30 v_hdr.queue_delay_3 false))  InVars {emit=v_emit_30, hdr.queue_delay=v_hdr.queue_delay_3}  OutVars{emit=v_emit_29, hdr.queue_delay=v_hdr.queue_delay_3}  AuxVars[]  AssignedVars[emit] 19828#L463_T1_init [2220] L463_T1_init-->L464_T1_init: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_17}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 19980#L464_T1_init [2423] L464_T1_init-->L465_T1_init: Formula: (and (< v_hdr.queue_delay.delay_13 4294967296) (<= 0 v_hdr.queue_delay.delay_13))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_13}  AuxVars[]  AssignedVars[] 19501#L465_T1_init [1898] L465_T1_init-->L466_T1_init: Formula: (not v_hdr.tcp.valid_19)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_19}  AuxVars[]  AssignedVars[hdr.tcp.valid] 19502#L466_T1_init [2703] L466_T1_init-->L467_T1_init: Formula: (= v_emit_39 (store v_emit_40 v_hdr.tcp_4 false))  InVars {hdr.tcp=v_hdr.tcp_4, emit=v_emit_40}  OutVars{hdr.tcp=v_hdr.tcp_4, emit=v_emit_39}  AuxVars[]  AssignedVars[emit] 19812#L467_T1_init [2085] L467_T1_init-->L468_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_11}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 19813#L468_T1_init [2735] L468_T1_init-->L469_T1_init: Formula: (and (< v_hdr.tcp.srcPort_14 65536) (<= 0 v_hdr.tcp.srcPort_14))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_14}  AuxVars[]  AssignedVars[] 20322#L469_T1_init [2680] L469_T1_init-->L470_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_10}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 20161#L470_T1_init [2389] L470_T1_init-->L471_T1_init: Formula: (and (< v_hdr.tcp.dstPort_12 65536) (<= 0 v_hdr.tcp.dstPort_12))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_12}  AuxVars[]  AssignedVars[] 20162#L471_T1_init [2533] L471_T1_init-->L472_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_12}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 20254#L472_T1_init [2637] L472_T1_init-->L473_T1_init: Formula: (and (<= 0 v_hdr.tcp.seqNo_9) (< v_hdr.tcp.seqNo_9 4294967296))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_9}  AuxVars[]  AssignedVars[] 20282#L473_T1_init [2578] L473_T1_init-->L474_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_13}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 19784#L474_T1_init [2067] L474_T1_init-->L475_T1_init: Formula: (and (< v_hdr.tcp.ackNo_10 4294967296) (<= 0 v_hdr.tcp.ackNo_10))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_10}  AuxVars[]  AssignedVars[] 19521#L475_T1_init [1913] L475_T1_init-->L476_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_13}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 19452#L476_T1_init [1870] L476_T1_init-->L477_T1_init: Formula: (and (<= 0 v_hdr.tcp.dataOffset_12) (< v_hdr.tcp.dataOffset_12 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_12}  AuxVars[]  AssignedVars[] 19453#L477_T1_init [2132] L477_T1_init-->L478_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_12}  AuxVars[]  AssignedVars[hdr.tcp.res] 19883#L478_T1_init [2274] L478_T1_init-->L479_T1_init: Formula: (and (< v_hdr.tcp.res_11 16) (<= 0 v_hdr.tcp.res_11))  InVars {hdr.tcp.res=v_hdr.tcp.res_11}  OutVars{hdr.tcp.res=v_hdr.tcp.res_11}  AuxVars[]  AssignedVars[] 19926#L479_T1_init [2165] L479_T1_init-->L480_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_14}  AuxVars[]  AssignedVars[hdr.tcp.flags] 19694#L480_T1_init [2012] L480_T1_init-->L481_T1_init: Formula: (and (<= 0 v_hdr.tcp.flags_11) (< v_hdr.tcp.flags_11 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_11}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_11}  AuxVars[]  AssignedVars[] 19695#L481_T1_init [2570] L481_T1_init-->L482_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_14}  AuxVars[]  AssignedVars[hdr.tcp.window] 20281#L482_T1_init [2702] L482_T1_init-->L483_T1_init: Formula: (and (< v_hdr.tcp.window_9 65536) (<= 0 v_hdr.tcp.window_9))  InVars {hdr.tcp.window=v_hdr.tcp.window_9}  OutVars{hdr.tcp.window=v_hdr.tcp.window_9}  AuxVars[]  AssignedVars[] 19630#L483_T1_init [1976] L483_T1_init-->L484_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_10}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 19631#L484_T1_init [2351] L484_T1_init-->L485_T1_init: Formula: (and (<= 0 v_hdr.tcp.checksum_9) (< v_hdr.tcp.checksum_9 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_9}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_9}  AuxVars[]  AssignedVars[] 20130#L485_T1_init [2555] L485_T1_init-->L486_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_13}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 20274#L486_T1_init [2663] L486_T1_init-->L487_T1_init: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_10) (< v_hdr.tcp.urgentPtr_10 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_10}  AuxVars[]  AssignedVars[] 19797#L487_T1_init [2075] L487_T1_init-->L488_T1_init: Formula: (not v_hdr.tcp_options.valid_21)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_21}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 19798#L488_T1_init [2115] L488_T1_init-->L489_T1_init: Formula: (= v_emit_41 (store v_emit_42 v_hdr.tcp_options_3 false))  InVars {emit=v_emit_42, hdr.tcp_options=v_hdr.tcp_options_3}  OutVars{emit=v_emit_41, hdr.tcp_options=v_hdr.tcp_options_3}  AuxVars[]  AssignedVars[emit] 19858#L489_T1_init [2322] L489_T1_init-->L490_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_9}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 20098#L490_T1_init [2709] L490_T1_init-->L491_T1_init: Formula: (and (< v_hdr.tcp_options.a_13 4294967296) (<= 0 v_hdr.tcp_options.a_13))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_13}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_13}  AuxVars[]  AssignedVars[] 20037#L491_T1_init [2268] L491_T1_init-->L492_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_14}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 20038#L492_T1_init [2682] L492_T1_init-->L493_T1_init: Formula: (and (<= 0 v_hdr.tcp_options.b_10) (< v_hdr.tcp_options.b_10 4294967296))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_10}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_10}  AuxVars[]  AssignedVars[] 20137#L493_T1_init [2361] L493_T1_init-->L494_T1_init: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_14}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 19970#L494_T1_init [2207] L494_T1_init-->L495_T1_init: Formula: (and (< v_hdr.tcp_options.c_13 4294967296) (<= 0 v_hdr.tcp_options.c_13))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_13}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_13}  AuxVars[]  AssignedVars[] 19971#L495_T1_init [2523] L495_T1_init-->L496_T1_init: Formula: (not v_hdr.udp.valid_19)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_19}  AuxVars[]  AssignedVars[hdr.udp.valid] 20092#L496_T1_init [2314] L496_T1_init-->L497_T1_init: Formula: (= v_emit_49 (store v_emit_50 v_hdr.udp_3 false))  InVars {hdr.udp=v_hdr.udp_3, emit=v_emit_50}  OutVars{hdr.udp=v_hdr.udp_3, emit=v_emit_49}  AuxVars[]  AssignedVars[emit] 19884#L497_T1_init [2133] L497_T1_init-->L498_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_12}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 19272#L498_T1_init [1794] L498_T1_init-->L499_T1_init: Formula: (and (<= 0 v_hdr.udp.sourcePort_13) (< v_hdr.udp.sourcePort_13 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_13}  AuxVars[]  AssignedVars[] 19273#L499_T1_init [2160] L499_T1_init-->L500_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_12}  AuxVars[]  AssignedVars[hdr.udp.destPort] 19920#L500_T1_init [2262] L500_T1_init-->L501_T1_init: Formula: (and (< v_hdr.udp.destPort_13 65536) (<= 0 v_hdr.udp.destPort_13))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_13}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_13}  AuxVars[]  AssignedVars[] 20028#L501_T1_init [2297] L501_T1_init-->L502_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__12}  AuxVars[]  AssignedVars[hdr.udp.length_] 19939#L502_T1_init [2180] L502_T1_init-->L503_T1_init: Formula: (and (<= 0 v_hdr.udp.length__14) (< v_hdr.udp.length__14 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__14}  OutVars{hdr.udp.length_=v_hdr.udp.length__14}  AuxVars[]  AssignedVars[] 19940#L503_T1_init [2505] L503_T1_init-->L504_T1_init: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_10}  AuxVars[]  AssignedVars[hdr.udp.checksum] 19750#L504_T1_init [2045] L504_T1_init-->L505_T1_init: Formula: (and (< v_hdr.udp.checksum_11 65536) (<= 0 v_hdr.udp.checksum_11))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_11}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_11}  AuxVars[]  AssignedVars[] 19751#L505_T1_init [2625] L505_T1_init-->L506_T1_init: Formula: (= v_meta.codel.drop_time_21 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_21}  AuxVars[]  AssignedVars[meta.codel.drop_time] 19545#L506_T1_init [1924] L506_T1_init-->L507_T1_init: Formula: (= v_meta.codel.time_now_22 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_22}  AuxVars[]  AssignedVars[meta.codel.time_now] 19546#L507_T1_init [2597] L507_T1_init-->L508_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_21)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_21}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 19355#L508_T1_init [1822] L508_T1_init-->L509_T1_init: Formula: (= v_meta.codel.state_dropping_18 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_18}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 19356#L509_T1_init [2027] L509_T1_init-->L510_T1_init: Formula: (= 0 v_meta.codel.delta_20)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_20}  AuxVars[]  AssignedVars[meta.codel.delta] 19721#L510_T1_init [2502] L510_T1_init-->L511_T1_init: Formula: (= v_meta.codel.time_since_last_dropping_17 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_17}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 20233#L511_T1_init [2497] L511_T1_init-->L512_T1_init: Formula: (= v_meta.codel.drop_next_26 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_26}  AuxVars[]  AssignedVars[meta.codel.drop_next] 19615#L512_T1_init [1967] L512_T1_init-->L513_T1_init: Formula: (= v_meta.codel.drop_cnt_25 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_25}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 19307#L513_T1_init [1806] L513_T1_init-->L514_T1_init: Formula: (= v_meta.codel.last_drop_cnt_14 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_14}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 19308#L514_T1_init [2741] L514_T1_init-->L515_T1_init: Formula: (= v_meta.codel.reset_drop_time_15 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_15}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 20001#L515_T1_init [2235] L515_T1_init-->L516_T1_init: Formula: (= v_meta.codel.new_drop_time_18 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_18}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 19811#L516_T1_init [2084] L516_T1_init-->L517_T1_init: Formula: (= v_meta.codel.new_drop_time_helper_9 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_9}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 19632#L517_T1_init [1977] L517_T1_init-->L518_T1_init: Formula: (= v_meta.codel.queue_id_35 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_35}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19503#L518_T1_init [1900] L518_T1_init-->L519_T1_init: Formula: (= v_meta.routing_metadata.tcpLength_20 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_20}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 19504#L519_T1_init [2328] L519_T1_init-->L520_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_10}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 20103#L520_T1_init [2635] L520_T1_init-->L521_T1_init: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_13}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 19988#L521_T1_init [2224] L521_T1_init-->L522_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_12}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 19989#L522_T1_init [2749] L522_T1_init-->L523_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_12}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 20315#L523_T1_init [2664] L523_T1_init-->havocProcedureFINAL_T1_init: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_13}  AuxVars[]  AssignedVars[forwarding_0.action_run] 20316#havocProcedureFINAL_T1_init [2738] havocProcedureFINAL_T1_init-->havocProcedureEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19277#havocProcedureEXIT_T1_init >[2928] havocProcedureEXIT_T1_init-->L535-D98: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19278#L535-D98 [2382] L535-D98-->L535_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19748#L535_T1_init [2683] L535_T1_init-->L535_T1_init-D65: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19823#L535_T1_init-D65 [2091] L535_T1_init-D65-->_parser_ParserImplENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19244#_parser_ParserImplENTRY_T1_init [2044] _parser_ParserImplENTRY_T1_init-->_parser_ParserImplENTRY_T1_init-D50: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19749#_parser_ParserImplENTRY_T1_init-D50 [2155] _parser_ParserImplENTRY_T1_init-D50-->startENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19915#startENTRY_T1_init [2303] startENTRY_T1_init-->L643_T1_init: Formula: v_hdr.ethernet.valid_18  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_18}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20076#L643_T1_init [2591] L643_T1_init-->L643-1_T1_init: Formula: (not (= 2048 v_hdr.ethernet.ethertype_18))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_18}  AuxVars[]  AssignedVars[] 19243#L643-1_T1_init [1781] L643-1_T1_init-->startEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19245#startEXIT_T1_init >[2927] startEXIT_T1_init-->_parser_ParserImplFINAL-D110: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19791#_parser_ParserImplFINAL-D110 [2484] _parser_ParserImplFINAL-D110-->_parser_ParserImplFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20017#_parser_ParserImplFINAL_T1_init [2253] _parser_ParserImplFINAL_T1_init-->_parser_ParserImplEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19764#_parser_ParserImplEXIT_T1_init >[2851] _parser_ParserImplEXIT_T1_init-->L536-D149: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19765#L536-D149 [2479] L536-D149-->L536_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19654#L536_T1_init [2292] L536_T1_init-->L536_T1_init-D92: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20065#L536_T1_init-D92 [2631] L536_T1_init-D92-->verifyChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19653#verifyChecksumFINAL_T1_init [1989] verifyChecksumFINAL_T1_init-->verifyChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19655#verifyChecksumEXIT_T1_init >[3009] verifyChecksumEXIT_T1_init-->L537-D146: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19899#L537-D146 [2147] L537-D146-->L537_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19230#L537_T1_init [2411] L537_T1_init-->L537_T1_init-D71: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19237#L537_T1_init-D71 [1779] L537_T1_init-D71-->ingressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19238#ingressENTRY_T1_init [2358] ingressENTRY_T1_init-->ingressENTRY_T1_init-D80: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19319#ingressENTRY_T1_init-D80 [1809] ingressENTRY_T1_init-D80-->forwarding_0.applyENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19320#forwarding_0.applyENTRY_T1_init [2108] forwarding_0.applyENTRY_T1_init-->L394_T1_init: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_20))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_20}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_20}  AuxVars[]  AssignedVars[] 19846#L394_T1_init [2671] L394_T1_init-->L394-1_T1_init: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_22))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_22}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_22}  AuxVars[]  AssignedVars[] 19257#L394-1_T1_init [1786] L394-1_T1_init-->forwarding_0.applyEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19258#forwarding_0.applyEXIT_T1_init >[3030] forwarding_0.applyEXIT_T1_init-->ingressFINAL-D176: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20418#ingressFINAL-D176 [1942] ingressFINAL-D176-->ingressFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19229#ingressFINAL_T1_init [1774] ingressFINAL_T1_init-->ingressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19231#ingressEXIT_T1_init >[2781] ingressEXIT_T1_init-->L538-D143: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20041#L538-D143 [2337] L538-D143-->L538_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19171#L538_T1_init [2416] L538_T1_init-->L538_T1_init-D17: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20190#L538_T1_init-D17 [2751] L538_T1_init-D17-->egressENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20351#egressENTRY_T1_init [2435] egressENTRY_T1_init-->L318_T1_init: Formula: (= v_standard_metadata.ingress_port_22 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_22}  AuxVars[]  AssignedVars[] 20431#L318_T1_init [2069] L318_T1_init-->L319_T1_init: Formula: (= v_meta.codel.queue_id_39 v_standard_metadata.egress_port_21)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_21}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_21, meta.codel.queue_id=v_meta.codel.queue_id_39}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19286#L319_T1_init [1799] L319_T1_init-->L319_T1_init-D74: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19287#L319_T1_init-D74 [1988] L319_T1_init-D74-->c_codel_0_a_codel_init_0ENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19652#c_codel_0_a_codel_init_0ENTRY_T1_init [1954] c_codel_0_a_codel_init_0ENTRY_T1_init-->L266_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_39)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_39}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 20332#L266_T1_init [2705] L266_T1_init-->L267_T1_init: Formula: (= v_meta.codel.time_now_39 (mod (+ (mod v_standard_metadata.deq_timedelta_30 281474976710656) (mod v_standard_metadata.enq_timestamp_18 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_30, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_18, meta.codel.time_now=v_meta.codel.time_now_39}  AuxVars[]  AssignedVars[meta.codel.time_now] 20009#L267_T1_init [2244] L267_T1_init-->L269_T1_init: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_40 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_23)  InVars {meta.codel.time_now=v_meta.codel.time_now_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_40, meta.codel.new_drop_time=v_meta.codel.new_drop_time_23}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 20010#L269_T1_init [2397] L269_T1_init-->L271_T1_init: Formula: (= v_meta.codel.state_dropping_26 (select v_r_state_dropping_17 v_meta.codel.queue_id_50))  InVars {r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50}  OutVars{r_state_dropping=v_r_state_dropping_17, meta.codel.queue_id=v_meta.codel.queue_id_50, meta.codel.state_dropping=v_meta.codel.state_dropping_26}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 19770#L271_T1_init [2058] L271_T1_init-->L273_T1_init: Formula: (= (select v_r_drop_count_18 v_meta.codel.queue_id_43) v_meta.codel.drop_cnt_36)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_36, meta.codel.queue_id=v_meta.codel.queue_id_43, r_drop_count=v_r_drop_count_18}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 19771#L273_T1_init [2403] L273_T1_init-->L275_T1_init: Formula: (= (select v_r_last_drop_count_12 v_meta.codel.queue_id_41) v_meta.codel.last_drop_cnt_17)  InVars {r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41}  OutVars{r_last_drop_count=v_r_last_drop_count_12, meta.codel.queue_id=v_meta.codel.queue_id_41, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_17}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 20198#L275_T1_init [2426] L275_T1_init-->L277_T1_init: Formula: (= v_meta.codel.drop_next_36 (select v_r_next_drop_20 v_meta.codel.queue_id_51))  InVars {r_next_drop=v_r_next_drop_20, meta.codel.queue_id=v_meta.codel.queue_id_51}  OutVars{r_next_drop=v_r_next_drop_20, meta.codel.drop_next=v_meta.codel.drop_next_36, meta.codel.queue_id=v_meta.codel.queue_id_51}  AuxVars[]  AssignedVars[meta.codel.drop_next] 20199#L277_T1_init [1829] L277_T1_init-->c_codel_0_a_codel_init_0FINAL_T1_init: Formula: (= v_meta.codel.drop_time_41 (select v_r_drop_time_14 v_meta.codel.queue_id_44))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_44, r_drop_time=v_r_drop_time_14}  OutVars{r_drop_time=v_r_drop_time_14, meta.codel.queue_id=v_meta.codel.queue_id_44, meta.codel.drop_time=v_meta.codel.drop_time_41}  AuxVars[]  AssignedVars[meta.codel.drop_time] 20430#c_codel_0_a_codel_init_0FINAL_T1_init [1874] c_codel_0_a_codel_init_0FINAL_T1_init-->c_codel_0_a_codel_init_0EXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19777#c_codel_0_a_codel_init_0EXIT_T1_init >[2993] c_codel_0_a_codel_init_0EXIT_T1_init-->L319-1-D125: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19778#L319-1-D125 [2098] L319-1-D125-->L319-1_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20426#L319-1_T1_init [1883] L319-1_T1_init-->L320-1_T1_init: Formula: (not (< v_standard_metadata.deq_timedelta_22 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_22}  AuxVars[]  AssignedVars[] 20425#L320-1_T1_init [1993] L320-1_T1_init-->L329_T1_init: Formula: (not (= v_meta.codel.reset_drop_time_17 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_17}  AuxVars[]  AssignedVars[] 20345#L329_T1_init [2740] L329_T1_init-->L335_T1_init: Formula: (not (= v_meta.codel.drop_time_29 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_29}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_29}  AuxVars[]  AssignedVars[] 20346#L335_T1_init [2231] L335_T1_init-->L335-2_T1_init: Formula: (not (<= v_meta.codel.drop_time_40 v_meta.codel.time_now_35))  InVars {meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  OutVars{meta.codel.time_now=v_meta.codel.time_now_35, meta.codel.drop_time=v_meta.codel.drop_time_40}  AuxVars[]  AssignedVars[] 20419#L335-2_T1_init [1865] L335-2_T1_init-->L341_T1_init: Formula: (= v_meta.codel.state_dropping_23 1)  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_23}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_23}  AuxVars[]  AssignedVars[] 19493#L341_T1_init [1893] L341_T1_init-->L343_T1_init: Formula: (= 0 v_meta.codel.ok_to_drop_25)  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_25}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_25}  AuxVars[]  AssignedVars[] 19491#L343_T1_init [2498] L343_T1_init-->L343_T1_init-D23: Formula: (and (= v_r_state_dropping.write_indexInParam_1 v_meta.codel.queue_id_27) (= v_r_state_dropping.write_valueInParam_1 0))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_27}  OutVars{r_state_dropping.write_index=v_r_state_dropping.write_indexInParam_1, meta.codel.queue_id=v_meta.codel.queue_id_27, r_state_dropping.write_value=v_r_state_dropping.write_valueInParam_1}  AuxVars[]  AssignedVars[r_state_dropping.write_index, r_state_dropping.write_value]< 19490#L343_T1_init-D23 [1891] L343_T1_init-D23-->r_state_dropping.writeENTRY_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19492#r_state_dropping.writeENTRY_T1_init [2139] r_state_dropping.writeENTRY_T1_init-->r_state_dropping.writeFINAL_T1_init: Formula: (= v_r_state_dropping_19 (store v_r_state_dropping_20 v_r_state_dropping.write_index_2 v_r_state_dropping.write_value_2))  InVars {r_state_dropping=v_r_state_dropping_20, r_state_dropping.write_index=v_r_state_dropping.write_index_2, r_state_dropping.write_value=v_r_state_dropping.write_value_2}  OutVars{r_state_dropping=v_r_state_dropping_19, r_state_dropping.write_index=v_r_state_dropping.write_index_2, r_state_dropping.write_value=v_r_state_dropping.write_value_2}  AuxVars[]  AssignedVars[r_state_dropping] 20378#r_state_dropping.writeFINAL_T1_init [1836] r_state_dropping.writeFINAL_T1_init-->r_state_dropping.writeEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20379#r_state_dropping.writeEXIT_T1_init >[2907] r_state_dropping.writeEXIT_T1_init-->L317-D116: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: (and (= v_r_state_dropping.write_indexInParam_1 v_meta.codel.queue_id_27) (= v_r_state_dropping.write_valueInParam_1 0))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_27}  OutVars{r_state_dropping.write_index=v_r_state_dropping.write_indexInParam_1, meta.codel.queue_id=v_meta.codel.queue_id_27, r_state_dropping.write_value=v_r_state_dropping.write_valueInParam_1}  AuxVars[]  AssignedVars[r_state_dropping.write_index, r_state_dropping.write_value] 20258#L317-D116 [2537] L317-D116-->L317_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20259#L317_T1_init [2195] L317_T1_init-->L369_T1_init: Formula: (not (< 500 v_hdr.ipv4.totalLen_23))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_23}  AuxVars[]  AssignedVars[] 20412#L369_T1_init [1982] L369_T1_init-->egressFINAL_T1_init: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_27 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_26)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_27}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_26}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 20409#egressFINAL_T1_init [2163] egressFINAL_T1_init-->egressEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20407#egressEXIT_T1_init >[2788] egressEXIT_T1_init-->L539-D173: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20404#L539-D173 [2166] L539-D173-->L539_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20399#L539_T1_init [1805] L539_T1_init-->L539_T1_init-D35: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20400#L539_T1_init-D35 [2718] L539_T1_init-D35-->computeChecksumFINAL_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20403#computeChecksumFINAL_T1_init [2603] computeChecksumFINAL_T1_init-->computeChecksumEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20398#computeChecksumEXIT_T1_init >[2831] computeChecksumEXIT_T1_init-->L540-D104: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20394#L540-D104 [2754] L540-D104-->L540_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20392#L540_T1_init [2364] L540_T1_init-->L542_T1_init: Formula: (not v_forward_24)  InVars {forward=v_forward_24}  OutVars{forward=v_forward_24}  AuxVars[]  AssignedVars[] 20390#L542_T1_init [2311] L542_T1_init-->L541-1_T1_init: Formula: v_drop_35  InVars {}  OutVars{drop=v_drop_35}  AuxVars[]  AssignedVars[drop] 20389#L541-1_T1_init [2496] L541-1_T1_init-->L545_T1_init: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_44 v_meta.codel.time_now_42))) (or (and v__p4ltl_0_6 .cse0) (and (not v__p4ltl_0_6) (not .cse0))))  InVars {meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  OutVars{_p4ltl_0=v__p4ltl_0_6, meta.codel.time_now=v_meta.codel.time_now_42, meta.codel.drop_time=v_meta.codel.drop_time_44}  AuxVars[]  AssignedVars[_p4ltl_0] 20388#L545_T1_init [2609] L545_T1_init-->L546_T1_init: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_41))) (or (and (not v__p4ltl_1_7) (not .cse0)) (and v__p4ltl_1_7 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_41, _p4ltl_1=v__p4ltl_1_7}  AuxVars[]  AssignedVars[_p4ltl_1] 20387#L546_T1_init [2547] L546_T1_init-->L547_T1_init: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_30 1))) (or (and (not v__p4ltl_2_8) (not .cse0)) (and v__p4ltl_2_8 .cse0)))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_30}  OutVars{_p4ltl_2=v__p4ltl_2_8, meta.codel.state_dropping=v_meta.codel.state_dropping_30}  AuxVars[]  AssignedVars[_p4ltl_2] 20386#L547_T1_init [2026] L547_T1_init-->mainFINAL_T1_init: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_24 1))) (or (and v__p4ltl_3_6 .cse0) (and (not .cse0) (not v__p4ltl_3_6))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_24}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_24, _p4ltl_3=v__p4ltl_3_6}  AuxVars[]  AssignedVars[_p4ltl_3] 20385#mainFINAL_T1_init [2553] mainFINAL_T1_init-->mainEXIT_T1_init: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20384#mainEXIT_T1_init >[2918] mainEXIT_T1_init-->L553-1-D128: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20383#L553-1-D128 [2619] L553-1-D128-->L553-1_T0_S2: Formula: (and v__p4ltl_1_9 v__p4ltl_2_9 v__p4ltl_3_10)  InVars {_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  OutVars{_p4ltl_2=v__p4ltl_2_9, _p4ltl_3=v__p4ltl_3_10, _p4ltl_1=v__p4ltl_1_9}  AuxVars[]  AssignedVars[] 20195#L553-1_T0_S2 [2421] L553-1_T0_S2-->L553_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19147#L553_T0_S2 [2301] L553_T0_S2-->L553_T0_S2-D52: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20075#L553_T0_S2-D52 [2550] L553_T0_S2-D52-->mainENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19165#mainENTRY_T0_S2 [1828] mainENTRY_T0_S2-->mainENTRY_T0_S2-D58: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19369#mainENTRY_T0_S2-D58 [2487] mainENTRY_T0_S2-D58-->havocProcedureENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19947#havocProcedureENTRY_T0_S2 [2184] havocProcedureENTRY_T0_S2-->L402_T0_S2: Formula: (not v_drop_33)  InVars {}  OutVars{drop=v_drop_33}  AuxVars[]  AssignedVars[drop] 19941#L402_T0_S2 [2179] L402_T0_S2-->L403_T0_S2: Formula: (not v_forward_18)  InVars {}  OutVars{forward=v_forward_18}  AuxVars[]  AssignedVars[forward] 19835#L403_T0_S2 [2100] L403_T0_S2-->L404_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_17}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 19836#L404_T0_S2 [2445] L404_T0_S2-->L405_T0_S2: Formula: (and (<= 0 v_standard_metadata.ingress_port_15) (< v_standard_metadata.ingress_port_15 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_15}  AuxVars[]  AssignedVars[] 19387#L405_T0_S2 [1839] L405_T0_S2-->L406_T0_S2: Formula: (= v_standard_metadata.egress_spec_15 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_15}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 19241#L406_T0_S2 [1780] L406_T0_S2-->L407_T0_S2: Formula: (= 0 v_standard_metadata.egress_port_18)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_18}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 19242#L407_T0_S2 [1869] L407_T0_S2-->L408_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_14}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 19454#L408_T0_S2 [1949] L408_T0_S2-->L409_T0_S2: Formula: (and (<= 0 v_standard_metadata.instance_type_9) (< v_standard_metadata.instance_type_9 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_9}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_9}  AuxVars[]  AssignedVars[] 19586#L409_T0_S2 [2188] L409_T0_S2-->L410_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_13}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 19952#L410_T0_S2 [2212] L410_T0_S2-->L411_T0_S2: Formula: (and (<= 0 v_standard_metadata.packet_length_14) (< v_standard_metadata.packet_length_14 4294967296))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_14}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_14}  AuxVars[]  AssignedVars[] 19530#L411_T0_S2 [1916] L411_T0_S2-->L412_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 19531#L412_T0_S2 [2215] L412_T0_S2-->L413_T0_S2: Formula: (and (<= 0 v_standard_metadata.enq_timestamp_15) (< v_standard_metadata.enq_timestamp_15 4294967296))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_15}  AuxVars[]  AssignedVars[] 19925#L413_T0_S2 [2162] L413_T0_S2-->L414_T0_S2: Formula: (= v_standard_metadata.enq_qdepth_10 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_10}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 19676#L414_T0_S2 [2002] L414_T0_S2-->L415_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_15}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 19677#L415_T0_S2 [2326] L415_T0_S2-->L416_T0_S2: Formula: (and (< v_standard_metadata.deq_timedelta_17 4294967296) (<= 0 v_standard_metadata.deq_timedelta_17))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_17}  AuxVars[]  AssignedVars[] 20100#L416_T0_S2 [2434] L416_T0_S2-->L417_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_9}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 19566#L417_T0_S2 [1934] L417_T0_S2-->L418_T0_S2: Formula: (and (< v_standard_metadata.deq_qdepth_10 524288) (<= 0 v_standard_metadata.deq_qdepth_10))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_10}  AuxVars[]  AssignedVars[] 19567#L418_T0_S2 [2513] L418_T0_S2-->L419_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 20067#L419_T0_S2 [2294] L419_T0_S2-->L420_T0_S2: Formula: (and (< v_standard_metadata.ingress_global_timestamp_13 281474976710656) (<= 0 v_standard_metadata.ingress_global_timestamp_13))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_13}  AuxVars[]  AssignedVars[] 20068#L420_T0_S2 [2470] L420_T0_S2-->L421_T0_S2: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 19587#L421_T0_S2 [1950] L421_T0_S2-->L422_T0_S2: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_11) (< v_standard_metadata.egress_global_timestamp_11 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_11}  AuxVars[]  AssignedVars[] 19588#L422_T0_S2 [1994] L422_T0_S2-->L423_T0_S2: Formula: (= v_standard_metadata.mcast_grp_10 0)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_10}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 19665#L423_T0_S2 [2295] L423_T0_S2-->L424_T0_S2: Formula: (= v_standard_metadata.egress_rid_9 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_9}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 20069#L424_T0_S2 [2689] L424_T0_S2-->L425_T0_S2: Formula: (= v_standard_metadata.checksum_error_10 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_10}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 19397#L425_T0_S2 [1843] L425_T0_S2-->L426_T0_S2: Formula: (= v_standard_metadata.parser_error_10 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_10}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 19398#L426_T0_S2 [2573] L426_T0_S2-->L427_T0_S2: Formula: (= v_standard_metadata.priority_8 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_8}  AuxVars[]  AssignedVars[standard_metadata.priority] 20013#L427_T0_S2 [2250] L427_T0_S2-->L428_T0_S2: Formula: (not v_hdr.ethernet.valid_15)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_15}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 19294#L428_T0_S2 [1801] L428_T0_S2-->L429_T0_S2: Formula: (= v_emit_31 (store v_emit_32 v_hdr.ethernet_4 false))  InVars {emit=v_emit_32, hdr.ethernet=v_hdr.ethernet_4}  OutVars{emit=v_emit_31, hdr.ethernet=v_hdr.ethernet_4}  AuxVars[]  AssignedVars[emit] 19295#L429_T0_S2 [2320] L429_T0_S2-->L430_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_19}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 19962#L430_T0_S2 [2200] L430_T0_S2-->L431_T0_S2: Formula: (and (< v_hdr.ethernet.dst_addr_17 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_17))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_17}  AuxVars[]  AssignedVars[] 19547#L431_T0_S2 [1925] L431_T0_S2-->L432_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_10}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 19548#L432_T0_S2 [2038] L432_T0_S2-->L433_T0_S2: Formula: (and (<= 0 v_hdr.ethernet.src_addr_12) (< v_hdr.ethernet.src_addr_12 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_12}  AuxVars[]  AssignedVars[] 19458#L433_T0_S2 [1873] L433_T0_S2-->L434_T0_S2: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_15}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 19459#L434_T0_S2 [2404] L434_T0_S2-->L435_T0_S2: Formula: (and (< v_hdr.ethernet.ethertype_16 65536) (<= 0 v_hdr.ethernet.ethertype_16))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_16}  AuxVars[]  AssignedVars[] 20179#L435_T0_S2 [2730] L435_T0_S2-->L436_T0_S2: Formula: (not v_hdr.ipv4.valid_16)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_16}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 20111#L436_T0_S2 [2336] L436_T0_S2-->L437_T0_S2: Formula: (= v_emit_51 (store v_emit_52 v_hdr.ipv4_4 false))  InVars {hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_52}  OutVars{hdr.ipv4=v_hdr.ipv4_4, emit=v_emit_51}  AuxVars[]  AssignedVars[emit] 20112#L437_T0_S2 [2684] L437_T0_S2-->L438_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_11}  AuxVars[]  AssignedVars[hdr.ipv4.version] 20228#L438_T0_S2 [2488] L438_T0_S2-->L439_T0_S2: Formula: (and (< v_hdr.ipv4.version_14 16) (<= 0 v_hdr.ipv4.version_14))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_14}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_14}  AuxVars[]  AssignedVars[] 19775#L439_T0_S2 [2060] L439_T0_S2-->L440_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 19568#L440_T0_S2 [1935] L440_T0_S2-->L441_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.ihl_14) (< v_hdr.ipv4.ihl_14 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_14}  AuxVars[]  AssignedVars[] 19569#L441_T0_S2 [2405] L441_T0_S2-->L442_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_11}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 19689#L442_T0_S2 [2009] L442_T0_S2-->L443_T0_S2: Formula: (and (< v_hdr.ipv4.diffserv_14 256) (<= 0 v_hdr.ipv4.diffserv_14))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_14}  AuxVars[]  AssignedVars[] 19690#L443_T0_S2 [2648] L443_T0_S2-->L444_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_12}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 20253#L444_T0_S2 [2531] L444_T0_S2-->L445_T0_S2: Formula: (and (< v_hdr.ipv4.totalLen_15 65536) (<= 0 v_hdr.ipv4.totalLen_15))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_15}  AuxVars[]  AssignedVars[] 20133#L445_T0_S2 [2355] L445_T0_S2-->L446_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_13}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 20134#L446_T0_S2 [2582] L446_T0_S2-->L447_T0_S2: Formula: (and (< v_hdr.ipv4.identification_14 65536) (<= 0 v_hdr.ipv4.identification_14))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_14}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_14}  AuxVars[]  AssignedVars[] 19768#L447_T0_S2 [2056] L447_T0_S2-->L448_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_14}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 19769#L448_T0_S2 [2263] L448_T0_S2-->L449_T0_S2: Formula: (and (< v_hdr.ipv4.flags_13 8) (<= 0 v_hdr.ipv4.flags_13))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_13}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_13}  AuxVars[]  AssignedVars[] 19348#L449_T0_S2 [1820] L449_T0_S2-->L450_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_12}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 19349#L450_T0_S2 [1872] L450_T0_S2-->L451_T0_S2: Formula: (and (< v_hdr.ipv4.fragOffset_11 8192) (<= 0 v_hdr.ipv4.fragOffset_11))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_11}  AuxVars[]  AssignedVars[] 19457#L451_T0_S2 [2313] L451_T0_S2-->L452_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_11}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 19867#L452_T0_S2 [2121] L452_T0_S2-->L453_T0_S2: Formula: (and (< v_hdr.ipv4.ttl_14 256) (<= 0 v_hdr.ipv4.ttl_14))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_14}  AuxVars[]  AssignedVars[] 19868#L453_T0_S2 [2345] L453_T0_S2-->L454_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_17}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 19921#L454_T0_S2 [2161] L454_T0_S2-->L455_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.protocol_16) (< v_hdr.ipv4.protocol_16 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_16}  AuxVars[]  AssignedVars[] 19922#L455_T0_S2 [2330] L455_T0_S2-->L456_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_10}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 20105#L456_T0_S2 [2536] L456_T0_S2-->L457_T0_S2: Formula: (and (<= 0 v_hdr.ipv4.hdrChecksum_9) (< v_hdr.ipv4.hdrChecksum_9 65536))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_9}  AuxVars[]  AssignedVars[] 19364#L457_T0_S2 [1827] L457_T0_S2-->L458_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_13}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 19365#L458_T0_S2 [2039] L458_T0_S2-->L459_T0_S2: Formula: (and (< v_hdr.ipv4.srcAddr_14 4294967296) (<= 0 v_hdr.ipv4.srcAddr_14))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_14}  AuxVars[]  AssignedVars[] 19736#L459_T0_S2 [2359] L459_T0_S2-->L460_T0_S2: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_10}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 19936#L460_T0_S2 [2174] L460_T0_S2-->L461_T0_S2: Formula: (and (< v_hdr.ipv4.dstAddr_11 4294967296) (<= 0 v_hdr.ipv4.dstAddr_11))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_11}  AuxVars[]  AssignedVars[] 19780#L461_T0_S2 [2064] L461_T0_S2-->L462_T0_S2: Formula: (not v_hdr.queue_delay.valid_21)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_21}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 19570#L462_T0_S2 [1936] L462_T0_S2-->L463_T0_S2: Formula: (= v_emit_25 (store v_emit_26 v_hdr.queue_delay_2 false))  InVars {emit=v_emit_26, hdr.queue_delay=v_hdr.queue_delay_2}  OutVars{emit=v_emit_25, hdr.queue_delay=v_hdr.queue_delay_2}  AuxVars[]  AssignedVars[emit] 19571#L463_T0_S2 [2466] L463_T0_S2-->L464_T0_S2: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_12}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 20117#L464_T0_S2 [2341] L464_T0_S2-->L465_T0_S2: Formula: (and (< v_hdr.queue_delay.delay_14 4294967296) (<= 0 v_hdr.queue_delay.delay_14))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_14}  AuxVars[]  AssignedVars[] 20101#L465_T0_S2 [2327] L465_T0_S2-->L466_T0_S2: Formula: (not v_hdr.tcp.valid_18)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_18}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20102#L466_T0_S2 [2713] L466_T0_S2-->L467_T0_S2: Formula: (= (store v_emit_20 v_hdr.tcp_2 false) v_emit_19)  InVars {hdr.tcp=v_hdr.tcp_2, emit=v_emit_20}  OutVars{hdr.tcp=v_hdr.tcp_2, emit=v_emit_19}  AuxVars[]  AssignedVars[emit] 19176#L467_T0_S2 [1754] L467_T0_S2-->L468_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_10}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 19177#L468_T0_S2 [2399] L468_T0_S2-->L469_T0_S2: Formula: (and (< v_hdr.tcp.srcPort_13 65536) (<= 0 v_hdr.tcp.srcPort_13))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_13}  AuxVars[]  AssignedVars[] 20172#L469_T0_S2 [2649] L469_T0_S2-->L470_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_9}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 19734#L470_T0_S2 [2036] L470_T0_S2-->L471_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dstPort_14) (< v_hdr.tcp.dstPort_14 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_14}  AuxVars[]  AssignedVars[] 19735#L471_T0_S2 [2698] L471_T0_S2-->L472_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_10}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 19891#L472_T0_S2 [2140] L472_T0_S2-->L473_T0_S2: Formula: (and (< v_hdr.tcp.seqNo_11 4294967296) (<= 0 v_hdr.tcp.seqNo_11))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_11}  AuxVars[]  AssignedVars[] 19892#L473_T0_S2 [2477] L473_T0_S2-->L474_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_12}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 19327#L474_T0_S2 [1814] L474_T0_S2-->L475_T0_S2: Formula: (and (<= 0 v_hdr.tcp.ackNo_14) (< v_hdr.tcp.ackNo_14 4294967296))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_14}  AuxVars[]  AssignedVars[] 19328#L475_T0_S2 [1930] L475_T0_S2-->L476_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_16}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 19556#L476_T0_S2 [2384] L476_T0_S2-->L477_T0_S2: Formula: (and (<= 0 v_hdr.tcp.dataOffset_11) (< v_hdr.tcp.dataOffset_11 16))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_11}  AuxVars[]  AssignedVars[] 20154#L477_T0_S2 [2714] L477_T0_S2-->L478_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_14}  AuxVars[]  AssignedVars[hdr.tcp.res] 20035#L478_T0_S2 [2267] L478_T0_S2-->L479_T0_S2: Formula: (and (<= 0 v_hdr.tcp.res_10) (< v_hdr.tcp.res_10 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_10}  OutVars{hdr.tcp.res=v_hdr.tcp.res_10}  AuxVars[]  AssignedVars[] 19383#L479_T0_S2 [1837] L479_T0_S2-->L480_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_10}  AuxVars[]  AssignedVars[hdr.tcp.flags] 19384#L480_T0_S2 [2467] L480_T0_S2-->L481_T0_S2: Formula: (and (<= 0 v_hdr.tcp.flags_9) (< v_hdr.tcp.flags_9 256))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_9}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_9}  AuxVars[]  AssignedVars[] 19282#L481_T0_S2 [1797] L481_T0_S2-->L482_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_11}  AuxVars[]  AssignedVars[hdr.tcp.window] 19283#L482_T0_S2 [2182] L482_T0_S2-->L483_T0_S2: Formula: (and (< v_hdr.tcp.window_12 65536) (<= 0 v_hdr.tcp.window_12))  InVars {hdr.tcp.window=v_hdr.tcp.window_12}  OutVars{hdr.tcp.window=v_hdr.tcp.window_12}  AuxVars[]  AssignedVars[] 19944#L483_T0_S2 [2324] L483_T0_S2-->L484_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_13}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 20099#L484_T0_S2 [2693] L484_T0_S2-->L485_T0_S2: Formula: (and (<= 0 v_hdr.tcp.checksum_12) (< v_hdr.tcp.checksum_12 65536))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_12}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_12}  AuxVars[]  AssignedVars[] 20184#L485_T0_S2 [2408] L485_T0_S2-->L486_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_14}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 20185#L486_T0_S2 [2581] L486_T0_S2-->L487_T0_S2: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_12) (< v_hdr.tcp.urgentPtr_12 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_12}  AuxVars[]  AssignedVars[] 20284#L487_T0_S2 [2660] L487_T0_S2-->L488_T0_S2: Formula: (not v_hdr.tcp_options.valid_20)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_20}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 19670#L488_T0_S2 [1998] L488_T0_S2-->L489_T0_S2: Formula: (= v_emit_27 (store v_emit_28 v_hdr.tcp_options_2 false))  InVars {emit=v_emit_28, hdr.tcp_options=v_hdr.tcp_options_2}  OutVars{emit=v_emit_27, hdr.tcp_options=v_hdr.tcp_options_2}  AuxVars[]  AssignedVars[emit] 19671#L489_T0_S2 [2461] L489_T0_S2-->L490_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_12}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 20191#L490_T0_S2 [2415] L490_T0_S2-->L491_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.a_10) (< v_hdr.tcp_options.a_10 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_10}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_10}  AuxVars[]  AssignedVars[] 20120#L491_T0_S2 [2343] L491_T0_S2-->L492_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_11}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 19467#L492_T0_S2 [1879] L492_T0_S2-->L493_T0_S2: Formula: (and (< v_hdr.tcp_options.b_12 4294967296) (<= 0 v_hdr.tcp_options.b_12))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_12}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_12}  AuxVars[]  AssignedVars[] 19468#L493_T0_S2 [2731] L493_T0_S2-->L494_T0_S2: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_11}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 19672#L494_T0_S2 [2000] L494_T0_S2-->L495_T0_S2: Formula: (and (<= 0 v_hdr.tcp_options.c_10) (< v_hdr.tcp_options.c_10 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_10}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_10}  AuxVars[]  AssignedVars[] 19532#L495_T0_S2 [1917] L495_T0_S2-->L496_T0_S2: Formula: (not v_hdr.udp.valid_17)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_17}  AuxVars[]  AssignedVars[hdr.udp.valid] 19533#L496_T0_S2 [2211] L496_T0_S2-->L497_T0_S2: Formula: (= v_emit_35 (store v_emit_36 v_hdr.udp_2 false))  InVars {hdr.udp=v_hdr.udp_2, emit=v_emit_36}  OutVars{hdr.udp=v_hdr.udp_2, emit=v_emit_35}  AuxVars[]  AssignedVars[emit] 19935#L497_T0_S2 [2173] L497_T0_S2-->L498_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_14}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 19337#L498_T0_S2 [1816] L498_T0_S2-->L499_T0_S2: Formula: (and (<= 0 v_hdr.udp.sourcePort_9) (< v_hdr.udp.sourcePort_9 65536))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_9}  AuxVars[]  AssignedVars[] 19338#L499_T0_S2 [2252] L499_T0_S2-->L500_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_9}  AuxVars[]  AssignedVars[hdr.udp.destPort] 20018#L500_T0_S2 [2481] L500_T0_S2-->L501_T0_S2: Formula: (and (< v_hdr.udp.destPort_14 65536) (<= 0 v_hdr.udp.destPort_14))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_14}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_14}  AuxVars[]  AssignedVars[] 19539#L501_T0_S2 [1921] L501_T0_S2-->L502_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__10}  AuxVars[]  AssignedVars[hdr.udp.length_] 19540#L502_T0_S2 [2362] L502_T0_S2-->L503_T0_S2: Formula: (and (<= 0 v_hdr.udp.length__11) (< v_hdr.udp.length__11 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__11}  OutVars{hdr.udp.length_=v_hdr.udp.length__11}  AuxVars[]  AssignedVars[] 20138#L503_T0_S2 [2600] L503_T0_S2-->L504_T0_S2: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_12}  AuxVars[]  AssignedVars[hdr.udp.checksum] 20287#L504_T0_S2 [2585] L504_T0_S2-->L505_T0_S2: Formula: (and (<= 0 v_hdr.udp.checksum_13) (< v_hdr.udp.checksum_13 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_13}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_13}  AuxVars[]  AssignedVars[] 19186#L505_T0_S2 [1757] L505_T0_S2-->L506_T0_S2: Formula: (= v_meta.codel.drop_time_22 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_22}  AuxVars[]  AssignedVars[meta.codel.drop_time] 19187#L506_T0_S2 [2417] L506_T0_S2-->L507_T0_S2: Formula: (= v_meta.codel.time_now_21 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_21}  AuxVars[]  AssignedVars[meta.codel.time_now] 20192#L507_T0_S2 [2424] L507_T0_S2-->L508_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_20)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_20}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 20196#L508_T0_S2 [2437] L508_T0_S2-->L509_T0_S2: Formula: (= v_meta.codel.state_dropping_16 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_16}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 19321#L509_T0_S2 [1810] L509_T0_S2-->L510_T0_S2: Formula: (= 0 v_meta.codel.delta_18)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_18}  AuxVars[]  AssignedVars[meta.codel.delta] 19322#L510_T0_S2 [2170] L510_T0_S2-->L511_T0_S2: Formula: (= v_meta.codel.time_since_last_dropping_15 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_15}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 19478#L511_T0_S2 [1886] L511_T0_S2-->L512_T0_S2: Formula: (= v_meta.codel.drop_next_25 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_25}  AuxVars[]  AssignedVars[meta.codel.drop_next] 19479#L512_T0_S2 [2073] L512_T0_S2-->L513_T0_S2: Formula: (= v_meta.codel.drop_cnt_24 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_24}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 19484#L513_T0_S2 [1889] L513_T0_S2-->L514_T0_S2: Formula: (= v_meta.codel.last_drop_cnt_15 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_15}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 19164#L514_T0_S2 [1750] L514_T0_S2-->L515_T0_S2: Formula: (= v_meta.codel.reset_drop_time_13 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_13}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 19166#L515_T0_S2 [1807] L515_T0_S2-->L516_T0_S2: Formula: (= v_meta.codel.new_drop_time_17 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_17}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 19266#L516_T0_S2 [1791] L516_T0_S2-->L517_T0_S2: Formula: (= v_meta.codel.new_drop_time_helper_8 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_8}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 19267#L517_T0_S2 [2135] L517_T0_S2-->L518_T0_S2: Formula: (= v_meta.codel.queue_id_34 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_34}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19628#L518_T0_S2 [1974] L518_T0_S2-->L519_T0_S2: Formula: (= v_meta.routing_metadata.tcpLength_19 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_19}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 19629#L519_T0_S2 [2338] L519_T0_S2-->L520_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 19482#L520_T0_S2 [1887] L520_T0_S2-->L521_T0_S2: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_14}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 19483#L521_T0_S2 [2651] L521_T0_S2-->L522_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_11}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 19826#L522_T0_S2 [2094] L522_T0_S2-->L523_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_11}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 19827#L523_T0_S2 [2641] L523_T0_S2-->havocProcedureFINAL_T0_S2: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_14}  AuxVars[]  AssignedVars[forwarding_0.action_run] 20306#havocProcedureFINAL_T0_S2 [2722] havocProcedureFINAL_T0_S2-->havocProcedureEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20275#havocProcedureEXIT_T0_S2 >[2983] havocProcedureEXIT_T0_S2-->L535-D97: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20276#L535-D97 [2694] L535-D97-->L535_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19146#L535_T0_S2 [1744] L535_T0_S2-->L535_T0_S2-D64: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19148#L535_T0_S2-D64 [2595] L535_T0_S2-D64-->_parser_ParserImplENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19685#_parser_ParserImplENTRY_T0_S2 [2077] _parser_ParserImplENTRY_T0_S2-->_parser_ParserImplENTRY_T0_S2-D49: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19684#_parser_ParserImplENTRY_T0_S2-D49 [2007] _parser_ParserImplENTRY_T0_S2-D49-->startENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19686#startENTRY_T0_S2 [2289] startENTRY_T0_S2-->L643_T0_S2: Formula: v_hdr.ethernet.valid_16  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_16}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20059#L643_T0_S2 [2394] L643_T0_S2-->L643-1_T0_S2: Formula: (not (= 2048 v_hdr.ethernet.ethertype_20))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_20}  AuxVars[]  AssignedVars[] 19909#L643-1_T0_S2 [2152] L643-1_T0_S2-->startEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19910#startEXIT_T0_S2 >[2989] startEXIT_T0_S2-->_parser_ParserImplFINAL-D109: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19931#_parser_ParserImplFINAL-D109 [2284] _parser_ParserImplFINAL-D109-->_parser_ParserImplFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20052#_parser_ParserImplFINAL_T0_S2 [2617] _parser_ParserImplFINAL_T0_S2-->_parser_ParserImplEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20285#_parser_ParserImplEXIT_T0_S2 >[2903] _parser_ParserImplEXIT_T0_S2-->L536-D148: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19380#L536-D148 [1835] L536-D148-->L536_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19381#L536_T0_S2 [2443] L536_T0_S2-->L536_T0_S2-D91: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20208#L536_T0_S2-D91 [2697] L536_T0_S2-D91-->verifyChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20212#verifyChecksumFINAL_T0_S2 [2457] verifyChecksumFINAL_T0_S2-->verifyChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20213#verifyChecksumEXIT_T0_S2 >[2790] verifyChecksumEXIT_T0_S2-->L537-D145: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19496#L537-D145 [1895] L537-D145-->L537_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19497#L537_T0_S2 [2748] L537_T0_S2-->L537_T0_S2-D70: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19724#L537_T0_S2-D70 [2028] L537_T0_S2-D70-->ingressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19219#ingressENTRY_T0_S2 [1966] ingressENTRY_T0_S2-->ingressENTRY_T0_S2-D79: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19617#ingressENTRY_T0_S2-D79 [2018] ingressENTRY_T0_S2-D79-->forwarding_0.applyENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19705#forwarding_0.applyENTRY_T0_S2 [2281] forwarding_0.applyENTRY_T0_S2-->L394_T0_S2: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_24))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_24}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_24}  AuxVars[]  AssignedVars[] 20051#L394_T0_S2 [2410] L394_T0_S2-->L394-1_T0_S2: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_18))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_18}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_18}  AuxVars[]  AssignedVars[] 19220#L394-1_T0_S2 [2375] L394-1_T0_S2-->forwarding_0.applyEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20149#forwarding_0.applyEXIT_T0_S2 >[2807] forwarding_0.applyEXIT_T0_S2-->ingressFINAL-D175: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19948#ingressFINAL-D175 [2186] ingressFINAL-D175-->ingressFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19949#ingressFINAL_T0_S2 [2080] ingressFINAL_T0_S2-->ingressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19981#ingressEXIT_T0_S2 >[2823] ingressEXIT_T0_S2-->L538-D142: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19982#L538-D142 [1813] L538-D142-->L538_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19194#L538_T0_S2 [1759] L538_T0_S2-->L538_T0_S2-D16: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19195#L538_T0_S2-D16 [1861] L538_T0_S2-D16-->egressENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19438#egressENTRY_T0_S2 [2475] egressENTRY_T0_S2-->L318_T0_S2: Formula: (= v_standard_metadata.ingress_port_20 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_20}  AuxVars[]  AssignedVars[] 20222#L318_T0_S2 [2613] L318_T0_S2-->L319_T0_S2: Formula: (= v_meta.codel.queue_id_38 v_standard_metadata.egress_port_20)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_20}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_20, meta.codel.queue_id=v_meta.codel.queue_id_38}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19315#L319_T0_S2 [2128] L319_T0_S2-->L319_T0_S2-D73: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19875#L319_T0_S2-D73 [2542] L319_T0_S2-D73-->c_codel_0_a_codel_init_0ENTRY_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20264#c_codel_0_a_codel_init_0ENTRY_T0_S2 [1991] c_codel_0_a_codel_init_0ENTRY_T0_S2-->L266_T0_S2: Formula: (= 0 v_meta.codel.ok_to_drop_37)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_37}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 20261#L266_T0_S2 [2540] L266_T0_S2-->L267_T0_S2: Formula: (= v_meta.codel.time_now_38 (mod (+ (mod v_standard_metadata.enq_timestamp_17 281474976710656) (mod v_standard_metadata.deq_timedelta_29 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_29, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_17, meta.codel.time_now=v_meta.codel.time_now_38}  AuxVars[]  AssignedVars[meta.codel.time_now] 20262#L267_T0_S2 [2014] L267_T0_S2-->L269_T0_S2: Formula: (= (mod (+ 100000 (mod v_meta.codel.time_now_37 281474976710656)) 281474976710656) v_meta.codel.new_drop_time_22)  InVars {meta.codel.time_now=v_meta.codel.time_now_37}  OutVars{meta.codel.time_now=v_meta.codel.time_now_37, meta.codel.new_drop_time=v_meta.codel.new_drop_time_22}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 20174#L269_T0_S2 [2401] L269_T0_S2-->L271_T0_S2: Formula: (= v_meta.codel.state_dropping_25 (select v_r_state_dropping_16 v_meta.codel.queue_id_45))  InVars {r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45}  OutVars{r_state_dropping=v_r_state_dropping_16, meta.codel.queue_id=v_meta.codel.queue_id_45, meta.codel.state_dropping=v_meta.codel.state_dropping_25}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 20175#L271_T0_S2 [2346] L271_T0_S2-->L273_T0_S2: Formula: (= (select v_r_drop_count_19 v_meta.codel.queue_id_47) v_meta.codel.drop_cnt_37)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_37, meta.codel.queue_id=v_meta.codel.queue_id_47, r_drop_count=v_r_drop_count_19}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 19838#L273_T0_S2 [2104] L273_T0_S2-->L275_T0_S2: Formula: (= (select v_r_last_drop_count_14 v_meta.codel.queue_id_52) v_meta.codel.last_drop_cnt_19)  InVars {r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52}  OutVars{r_last_drop_count=v_r_last_drop_count_14, meta.codel.queue_id=v_meta.codel.queue_id_52, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_19}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 19839#L275_T0_S2 [2752] L275_T0_S2-->L277_T0_S2: Formula: (= (select v_r_next_drop_18 v_meta.codel.queue_id_40) v_meta.codel.drop_next_34)  InVars {r_next_drop=v_r_next_drop_18, meta.codel.queue_id=v_meta.codel.queue_id_40}  OutVars{r_next_drop=v_r_next_drop_18, meta.codel.drop_next=v_meta.codel.drop_next_34, meta.codel.queue_id=v_meta.codel.queue_id_40}  AuxVars[]  AssignedVars[meta.codel.drop_next] 19314#L277_T0_S2 [1808] L277_T0_S2-->c_codel_0_a_codel_init_0FINAL_T0_S2: Formula: (= v_meta.codel.drop_time_42 (select v_r_drop_time_15 v_meta.codel.queue_id_48))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_48, r_drop_time=v_r_drop_time_15}  OutVars{r_drop_time=v_r_drop_time_15, meta.codel.queue_id=v_meta.codel.queue_id_48, meta.codel.drop_time=v_meta.codel.drop_time_42}  AuxVars[]  AssignedVars[meta.codel.drop_time] 19316#c_codel_0_a_codel_init_0FINAL_T0_S2 [2506] c_codel_0_a_codel_init_0FINAL_T0_S2-->c_codel_0_a_codel_init_0EXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19840#c_codel_0_a_codel_init_0EXIT_T0_S2 >[2896] c_codel_0_a_codel_init_0EXIT_T0_S2-->L319-1-D124: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19841#L319-1-D124 [2096] L319-1-D124-->L319-1_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20206#L319-1_T0_S2 [2439] L319-1_T0_S2-->L320-1_T0_S2: Formula: (not (< v_standard_metadata.deq_timedelta_20 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_20}  AuxVars[]  AssignedVars[] 19678#L320-1_T0_S2 [2006] L320-1_T0_S2-->L329_T0_S2: Formula: (not (= v_meta.codel.reset_drop_time_22 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_22}  AuxVars[]  AssignedVars[] 19680#L329_T0_S2 [2357] L329_T0_S2-->L335_T0_S2: Formula: (not (= v_meta.codel.drop_time_38 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_38}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_38}  AuxVars[]  AssignedVars[] 20136#L335_T0_S2 [2459] L335_T0_S2-->L335-2_T0_S2: Formula: (not (<= v_meta.codel.drop_time_27 v_meta.codel.time_now_27))  InVars {meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  OutVars{meta.codel.time_now=v_meta.codel.time_now_27, meta.codel.drop_time=v_meta.codel.drop_time_27}  AuxVars[]  AssignedVars[] 20071#L335-2_T0_S2 [2111] L335-2_T0_S2-->L356_T0_S2: Formula: (not (= v_meta.codel.state_dropping_20 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_20}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_20}  AuxVars[]  AssignedVars[] 20209#L356_T0_S2 [2442] L356_T0_S2-->L317_T0_S2: Formula: (not (= v_meta.codel.ok_to_drop_36 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_36}  AuxVars[]  AssignedVars[] 20047#L317_T0_S2 [2608] L317_T0_S2-->L369_T0_S2: Formula: (not (< 500 v_hdr.ipv4.totalLen_21))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_21}  AuxVars[]  AssignedVars[] 19644#L369_T0_S2 [2518] L369_T0_S2-->egressFINAL_T0_S2: Formula: (= (mod (+ (mod v_meta.routing_metadata.tcpLength_23 65536) 65516) 65536) v_meta.routing_metadata.tcpLength_22)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_23}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_22}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 20244#egressFINAL_T0_S2 [1765] egressFINAL_T0_S2-->egressEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20217#egressEXIT_T0_S2 >[3031] egressEXIT_T0_S2-->L539-D172: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19821#L539-D172 [2090] L539-D172-->L539_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19822#L539_T0_S2 [2074] L539_T0_S2-->L539_T0_S2-D34: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20442#L539_T0_S2-D34 [1766] L539_T0_S2-D34-->computeChecksumFINAL_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19983#computeChecksumFINAL_T0_S2 [2221] computeChecksumFINAL_T0_S2-->computeChecksumEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19984#computeChecksumEXIT_T0_S2 >[2756] computeChecksumEXIT_T0_S2-->L540-D103: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20260#L540-D103 [2538] L540-D103-->L540_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19763#L540_T0_S2 [2051] L540_T0_S2-->L542_T0_S2: Formula: (not v_forward_22)  InVars {forward=v_forward_22}  OutVars{forward=v_forward_22}  AuxVars[]  AssignedVars[] 19432#L542_T0_S2 [1858] L542_T0_S2-->L541-1_T0_S2: Formula: v_drop_34  InVars {}  OutVars{drop=v_drop_34}  AuxVars[]  AssignedVars[drop] 19433#L541-1_T0_S2 [1901] L541-1_T0_S2-->L545_T0_S2: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_46 v_meta.codel.time_now_44))) (or (and (not .cse0) (not v__p4ltl_0_8)) (and v__p4ltl_0_8 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  OutVars{_p4ltl_0=v__p4ltl_0_8, meta.codel.time_now=v_meta.codel.time_now_44, meta.codel.drop_time=v_meta.codel.drop_time_46}  AuxVars[]  AssignedVars[_p4ltl_0] 19507#L545_T0_S2 [1920] L545_T0_S2-->L546_T0_S2: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_42))) (or (and v__p4ltl_1_8 .cse0) (and (not v__p4ltl_1_8) (not .cse0))))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_42, _p4ltl_1=v__p4ltl_1_8}  AuxVars[]  AssignedVars[_p4ltl_1] 19538#L546_T0_S2 [2530] L546_T0_S2-->L547_T0_S2: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_29 1))) (or (and v__p4ltl_2_7 .cse0) (and (not v__p4ltl_2_7) (not .cse0))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_29}  OutVars{_p4ltl_2=v__p4ltl_2_7, meta.codel.state_dropping=v_meta.codel.state_dropping_29}  AuxVars[]  AssignedVars[_p4ltl_2] 19488#L547_T0_S2 [1890] L547_T0_S2-->mainFINAL_T0_S2: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_25 1))) (or (and v__p4ltl_3_7 .cse0) (and (not v__p4ltl_3_7) (not .cse0))))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_25}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_25, _p4ltl_3=v__p4ltl_3_7}  AuxVars[]  AssignedVars[_p4ltl_3] 19489#mainFINAL_T0_S2 [1946] mainFINAL_T0_S2-->mainEXIT_T0_S2: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19583#mainEXIT_T0_S2 >[2794] mainEXIT_T0_S2-->L553-1-D127: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20251#L553-1-D127 [2528] L553-1-D127-->L553-1_accept_S5: Formula: (and v__p4ltl_3_13 (not v__p4ltl_0_10) v_drop_37)  InVars {_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  OutVars{_p4ltl_3=v__p4ltl_3_13, _p4ltl_0=v__p4ltl_0_10, drop=v_drop_37}  AuxVars[]  AssignedVars[] 19514#L553-1_accept_S5 
[2023-02-07 02:28:20,076 INFO  L754   eck$LassoCheckResult]: Loop: 19514#L553-1_accept_S5 [1904] L553-1_accept_S5-->L553_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19168#L553_accept_S5 [1790] L553_accept_S5-->L553_accept_S5-D54: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19269#L553_accept_S5-D54 [1796] L553_accept_S5-D54-->mainENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19174#mainENTRY_accept_S5 [2454] mainENTRY_accept_S5-->mainENTRY_accept_S5-D60: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20141#mainENTRY_accept_S5-D60 [2366] mainENTRY_accept_S5-D60-->havocProcedureENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19691#havocProcedureENTRY_accept_S5 [2010] havocProcedureENTRY_accept_S5-->L402_accept_S5: Formula: (not v_drop_31)  InVars {}  OutVars{drop=v_drop_31}  AuxVars[]  AssignedVars[drop] 19692#L402_accept_S5 [2254] L402_accept_S5-->L403_accept_S5: Formula: (not v_forward_17)  InVars {}  OutVars{forward=v_forward_17}  AuxVars[]  AssignedVars[forward] 20019#L403_accept_S5 [2577] L403_accept_S5-->L404_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_14}  AuxVars[]  AssignedVars[standard_metadata.ingress_port] 19264#L404_accept_S5 [1789] L404_accept_S5-->L405_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_port_12) (< v_standard_metadata.ingress_port_12 512))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_12}  AuxVars[]  AssignedVars[] 19265#L405_accept_S5 [2593] L405_accept_S5-->L406_accept_S5: Formula: (= v_standard_metadata.egress_spec_17 0)  InVars {}  OutVars{standard_metadata.egress_spec=v_standard_metadata.egress_spec_17}  AuxVars[]  AssignedVars[standard_metadata.egress_spec] 19505#L406_accept_S5 [1899] L406_accept_S5-->L407_accept_S5: Formula: (= 0 v_standard_metadata.egress_port_17)  InVars {}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_17}  AuxVars[]  AssignedVars[standard_metadata.egress_port] 19506#L407_accept_S5 [2214] L407_accept_S5-->L408_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_10}  AuxVars[]  AssignedVars[standard_metadata.instance_type] 19737#L408_accept_S5 [2037] L408_accept_S5-->L409_accept_S5: Formula: (and (<= 0 v_standard_metadata.instance_type_12) (< v_standard_metadata.instance_type_12 4294967296))  InVars {standard_metadata.instance_type=v_standard_metadata.instance_type_12}  OutVars{standard_metadata.instance_type=v_standard_metadata.instance_type_12}  AuxVars[]  AssignedVars[] 19738#L409_accept_S5 [2419] L409_accept_S5-->L410_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_10}  AuxVars[]  AssignedVars[standard_metadata.packet_length] 19795#L410_accept_S5 [2072] L410_accept_S5-->L411_accept_S5: Formula: (and (< v_standard_metadata.packet_length_12 4294967296) (<= 0 v_standard_metadata.packet_length_12))  InVars {standard_metadata.packet_length=v_standard_metadata.packet_length_12}  OutVars{standard_metadata.packet_length=v_standard_metadata.packet_length_12}  AuxVars[]  AssignedVars[] 19796#L411_accept_S5 [2675] L411_accept_S5-->L412_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_12}  AuxVars[]  AssignedVars[standard_metadata.enq_timestamp] 19524#L412_accept_S5 [1912] L412_accept_S5-->L413_accept_S5: Formula: (and (< v_standard_metadata.enq_timestamp_11 4294967296) (<= 0 v_standard_metadata.enq_timestamp_11))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  OutVars{standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_11}  AuxVars[]  AssignedVars[] 19525#L413_accept_S5 [2201] L413_accept_S5-->L414_accept_S5: Formula: (= v_standard_metadata.enq_qdepth_8 0)  InVars {}  OutVars{standard_metadata.enq_qdepth=v_standard_metadata.enq_qdepth_8}  AuxVars[]  AssignedVars[standard_metadata.enq_qdepth] 19754#L414_accept_S5 [2048] L414_accept_S5-->L415_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_16}  AuxVars[]  AssignedVars[standard_metadata.deq_timedelta] 19173#L415_accept_S5 [1752] L415_accept_S5-->L416_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_timedelta_14) (< v_standard_metadata.deq_timedelta_14 4294967296))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_14}  AuxVars[]  AssignedVars[] 19175#L416_accept_S5 [2567] L416_accept_S5-->L417_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_12}  AuxVars[]  AssignedVars[standard_metadata.deq_qdepth] 20036#L417_accept_S5 [2266] L417_accept_S5-->L418_accept_S5: Formula: (and (<= 0 v_standard_metadata.deq_qdepth_14) (< v_standard_metadata.deq_qdepth_14 524288))  InVars {standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  OutVars{standard_metadata.deq_qdepth=v_standard_metadata.deq_qdepth_14}  AuxVars[]  AssignedVars[] 19779#L418_accept_S5 [2062] L418_accept_S5-->L419_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_9}  AuxVars[]  AssignedVars[standard_metadata.ingress_global_timestamp] 19752#L419_accept_S5 [2046] L419_accept_S5-->L420_accept_S5: Formula: (and (<= 0 v_standard_metadata.ingress_global_timestamp_12) (< v_standard_metadata.ingress_global_timestamp_12 281474976710656))  InVars {standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  OutVars{standard_metadata.ingress_global_timestamp=v_standard_metadata.ingress_global_timestamp_12}  AuxVars[]  AssignedVars[] 19221#L420_accept_S5 [1770] L420_accept_S5-->L421_accept_S5: Formula: true  InVars {}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_10}  AuxVars[]  AssignedVars[standard_metadata.egress_global_timestamp] 19222#L421_accept_S5 [2700] L421_accept_S5-->L422_accept_S5: Formula: (and (<= 0 v_standard_metadata.egress_global_timestamp_14) (< v_standard_metadata.egress_global_timestamp_14 281474976710656))  InVars {standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  OutVars{standard_metadata.egress_global_timestamp=v_standard_metadata.egress_global_timestamp_14}  AuxVars[]  AssignedVars[] 20115#L422_accept_S5 [2340] L422_accept_S5-->L423_accept_S5: Formula: (= 0 v_standard_metadata.mcast_grp_8)  InVars {}  OutVars{standard_metadata.mcast_grp=v_standard_metadata.mcast_grp_8}  AuxVars[]  AssignedVars[standard_metadata.mcast_grp] 20116#L423_accept_S5 [2662] L423_accept_S5-->L424_accept_S5: Formula: (= v_standard_metadata.egress_rid_10 0)  InVars {}  OutVars{standard_metadata.egress_rid=v_standard_metadata.egress_rid_10}  AuxVars[]  AssignedVars[standard_metadata.egress_rid] 20000#L424_accept_S5 [2232] L424_accept_S5-->L425_accept_S5: Formula: (= v_standard_metadata.checksum_error_8 0)  InVars {}  OutVars{standard_metadata.checksum_error=v_standard_metadata.checksum_error_8}  AuxVars[]  AssignedVars[standard_metadata.checksum_error] 19847#L425_accept_S5 [2106] L425_accept_S5-->L426_accept_S5: Formula: (= v_standard_metadata.parser_error_8 0)  InVars {}  OutVars{standard_metadata.parser_error=v_standard_metadata.parser_error_8}  AuxVars[]  AssignedVars[standard_metadata.parser_error] 19809#L426_accept_S5 [2083] L426_accept_S5-->L427_accept_S5: Formula: (= v_standard_metadata.priority_10 0)  InVars {}  OutVars{standard_metadata.priority=v_standard_metadata.priority_10}  AuxVars[]  AssignedVars[standard_metadata.priority] 19810#L427_accept_S5 [2270] L427_accept_S5-->L428_accept_S5: Formula: (not v_hdr.ethernet.valid_14)  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_14}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 19995#L428_accept_S5 [2229] L428_accept_S5-->L429_accept_S5: Formula: (= v_emit_23 (store v_emit_24 v_hdr.ethernet_3 false))  InVars {emit=v_emit_24, hdr.ethernet=v_hdr.ethernet_3}  OutVars{emit=v_emit_23, hdr.ethernet=v_hdr.ethernet_3}  AuxVars[]  AssignedVars[emit] 19996#L429_accept_S5 [2236] L429_accept_S5-->L430_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_16}  AuxVars[]  AssignedVars[hdr.ethernet.dst_addr] 20002#L430_accept_S5 [2491] L430_accept_S5-->L431_accept_S5: Formula: (and (< v_hdr.ethernet.dst_addr_20 281474976710656) (<= 0 v_hdr.ethernet.dst_addr_20))  InVars {hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  OutVars{hdr.ethernet.dst_addr=v_hdr.ethernet.dst_addr_20}  AuxVars[]  AssignedVars[] 19410#L431_accept_S5 [1851] L431_accept_S5-->L432_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_13}  AuxVars[]  AssignedVars[hdr.ethernet.src_addr] 19411#L432_accept_S5 [1854] L432_accept_S5-->L433_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.src_addr_9) (< v_hdr.ethernet.src_addr_9 281474976710656))  InVars {hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  OutVars{hdr.ethernet.src_addr=v_hdr.ethernet.src_addr_9}  AuxVars[]  AssignedVars[] 19414#L433_accept_S5 [2584] L433_accept_S5-->L434_accept_S5: Formula: true  InVars {}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_12}  AuxVars[]  AssignedVars[hdr.ethernet.ethertype] 20218#L434_accept_S5 [2465] L434_accept_S5-->L435_accept_S5: Formula: (and (<= 0 v_hdr.ethernet.ethertype_13) (< v_hdr.ethernet.ethertype_13 65536))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_13}  AuxVars[]  AssignedVars[] 19385#L435_accept_S5 [1838] L435_accept_S5-->L436_accept_S5: Formula: (not v_hdr.ipv4.valid_17)  InVars {}  OutVars{hdr.ipv4.valid=v_hdr.ipv4.valid_17}  AuxVars[]  AssignedVars[hdr.ipv4.valid] 19386#L436_accept_S5 [1999] L436_accept_S5-->L437_accept_S5: Formula: (= v_emit_33 (store v_emit_34 v_hdr.ipv4_2 false))  InVars {hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_34}  OutVars{hdr.ipv4=v_hdr.ipv4_2, emit=v_emit_33}  AuxVars[]  AssignedVars[emit] 19362#L437_accept_S5 [1826] L437_accept_S5-->L438_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_13}  AuxVars[]  AssignedVars[hdr.ipv4.version] 19363#L438_accept_S5 [1979] L438_accept_S5-->L439_accept_S5: Formula: (and (< v_hdr.ipv4.version_10 16) (<= 0 v_hdr.ipv4.version_10))  InVars {hdr.ipv4.version=v_hdr.ipv4.version_10}  OutVars{hdr.ipv4.version=v_hdr.ipv4.version_10}  AuxVars[]  AssignedVars[] 19638#L439_accept_S5 [2431] L439_accept_S5-->L440_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_10}  AuxVars[]  AssignedVars[hdr.ipv4.ihl] 20005#L440_accept_S5 [2238] L440_accept_S5-->L441_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ihl_12) (< v_hdr.ipv4.ihl_12 16))  InVars {hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  OutVars{hdr.ipv4.ihl=v_hdr.ipv4.ihl_12}  AuxVars[]  AssignedVars[] 19852#L441_accept_S5 [2112] L441_accept_S5-->L442_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_13}  AuxVars[]  AssignedVars[hdr.ipv4.diffserv] 19727#L442_accept_S5 [2031] L442_accept_S5-->L443_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.diffserv_10) (< v_hdr.ipv4.diffserv_10 256))  InVars {hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  OutVars{hdr.ipv4.diffserv=v_hdr.ipv4.diffserv_10}  AuxVars[]  AssignedVars[] 19728#L443_accept_S5 [2131] L443_accept_S5-->L444_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_16}  AuxVars[]  AssignedVars[hdr.ipv4.totalLen] 19357#L444_accept_S5 [1823] L444_accept_S5-->L445_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.totalLen_13) (< v_hdr.ipv4.totalLen_13 65536))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_13}  AuxVars[]  AssignedVars[] 19358#L445_accept_S5 [1876] L445_accept_S5-->L446_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_9}  AuxVars[]  AssignedVars[hdr.ipv4.identification] 19464#L446_accept_S5 [2655] L446_accept_S5-->L447_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.identification_10) (< v_hdr.ipv4.identification_10 65536))  InVars {hdr.ipv4.identification=v_hdr.ipv4.identification_10}  OutVars{hdr.ipv4.identification=v_hdr.ipv4.identification_10}  AuxVars[]  AssignedVars[] 19781#L447_accept_S5 [2065] L447_accept_S5-->L448_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_11}  AuxVars[]  AssignedVars[hdr.ipv4.flags] 19782#L448_accept_S5 [2286] L448_accept_S5-->L449_accept_S5: Formula: (and (< v_hdr.ipv4.flags_10 8) (<= 0 v_hdr.ipv4.flags_10))  InVars {hdr.ipv4.flags=v_hdr.ipv4.flags_10}  OutVars{hdr.ipv4.flags=v_hdr.ipv4.flags_10}  AuxVars[]  AssignedVars[] 20056#L449_accept_S5 [2640] L449_accept_S5-->L450_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_10}  AuxVars[]  AssignedVars[hdr.ipv4.fragOffset] 20139#L450_accept_S5 [2363] L450_accept_S5-->L451_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.fragOffset_9) (< v_hdr.ipv4.fragOffset_9 8192))  InVars {hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  OutVars{hdr.ipv4.fragOffset=v_hdr.ipv4.fragOffset_9}  AuxVars[]  AssignedVars[] 20126#L451_accept_S5 [2348] L451_accept_S5-->L452_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_13}  AuxVars[]  AssignedVars[hdr.ipv4.ttl] 20119#L452_accept_S5 [2342] L452_accept_S5-->L453_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.ttl_10) (< v_hdr.ipv4.ttl_10 256))  InVars {hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  OutVars{hdr.ipv4.ttl=v_hdr.ipv4.ttl_10}  AuxVars[]  AssignedVars[] 20053#L453_accept_S5 [2285] L453_accept_S5-->L454_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_13}  AuxVars[]  AssignedVars[hdr.ipv4.protocol] 19974#L454_accept_S5 [2210] L454_accept_S5-->L455_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.protocol_14) (< v_hdr.ipv4.protocol_14 256))  InVars {hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  OutVars{hdr.ipv4.protocol=v_hdr.ipv4.protocol_14}  AuxVars[]  AssignedVars[] 19455#L455_accept_S5 [1871] L455_accept_S5-->L456_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_14}  AuxVars[]  AssignedVars[hdr.ipv4.hdrChecksum] 19456#L456_accept_S5 [2209] L456_accept_S5-->L457_accept_S5: Formula: (and (< v_hdr.ipv4.hdrChecksum_13 65536) (<= 0 v_hdr.ipv4.hdrChecksum_13))  InVars {hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  OutVars{hdr.ipv4.hdrChecksum=v_hdr.ipv4.hdrChecksum_13}  AuxVars[]  AssignedVars[] 19973#L457_accept_S5 [2566] L457_accept_S5-->L458_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_9}  AuxVars[]  AssignedVars[hdr.ipv4.srcAddr] 19913#L458_accept_S5 [2154] L458_accept_S5-->L459_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.srcAddr_11) (< v_hdr.ipv4.srcAddr_11 4294967296))  InVars {hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  OutVars{hdr.ipv4.srcAddr=v_hdr.ipv4.srcAddr_11}  AuxVars[]  AssignedVars[] 19914#L459_accept_S5 [2158] L459_accept_S5-->L460_accept_S5: Formula: true  InVars {}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_12}  AuxVars[]  AssignedVars[hdr.ipv4.dstAddr] 19917#L460_accept_S5 [2310] L460_accept_S5-->L461_accept_S5: Formula: (and (<= 0 v_hdr.ipv4.dstAddr_9) (< v_hdr.ipv4.dstAddr_9 4294967296))  InVars {hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  OutVars{hdr.ipv4.dstAddr=v_hdr.ipv4.dstAddr_9}  AuxVars[]  AssignedVars[] 20085#L461_accept_S5 [2440] L461_accept_S5-->L462_accept_S5: Formula: (not v_hdr.queue_delay.valid_23)  InVars {}  OutVars{hdr.queue_delay.valid=v_hdr.queue_delay.valid_23}  AuxVars[]  AssignedVars[hdr.queue_delay.valid] 20207#L462_accept_S5 [2508] L462_accept_S5-->L463_accept_S5: Formula: (= v_emit_43 (store v_emit_44 v_hdr.queue_delay_4 false))  InVars {emit=v_emit_44, hdr.queue_delay=v_hdr.queue_delay_4}  OutVars{emit=v_emit_43, hdr.queue_delay=v_hdr.queue_delay_4}  AuxVars[]  AssignedVars[emit] 20240#L463_accept_S5 [2658] L463_accept_S5-->L464_accept_S5: Formula: true  InVars {}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_15}  AuxVars[]  AssignedVars[hdr.queue_delay.delay] 19818#L464_accept_S5 [2088] L464_accept_S5-->L465_accept_S5: Formula: (and (< v_hdr.queue_delay.delay_16 4294967296) (<= 0 v_hdr.queue_delay.delay_16))  InVars {hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  OutVars{hdr.queue_delay.delay=v_hdr.queue_delay.delay_16}  AuxVars[]  AssignedVars[] 19819#L465_accept_S5 [2583] L465_accept_S5-->L466_accept_S5: Formula: (not v_hdr.tcp.valid_17)  InVars {}  OutVars{hdr.tcp.valid=v_hdr.tcp.valid_17}  AuxVars[]  AssignedVars[hdr.tcp.valid] 20286#L466_accept_S5 [2701] L466_accept_S5-->L467_accept_S5: Formula: (= v_emit_37 (store v_emit_38 v_hdr.tcp_3 false))  InVars {hdr.tcp=v_hdr.tcp_3, emit=v_emit_38}  OutVars{hdr.tcp=v_hdr.tcp_3, emit=v_emit_37}  AuxVars[]  AssignedVars[emit] 20178#L467_accept_S5 [2402] L467_accept_S5-->L468_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_12}  AuxVars[]  AssignedVars[hdr.tcp.srcPort] 20143#L468_accept_S5 [2369] L468_accept_S5-->L469_accept_S5: Formula: (and (< v_hdr.tcp.srcPort_9 65536) (<= 0 v_hdr.tcp.srcPort_9))  InVars {hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  OutVars{hdr.tcp.srcPort=v_hdr.tcp.srcPort_9}  AuxVars[]  AssignedVars[] 19415#L469_accept_S5 [1855] L469_accept_S5-->L470_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_13}  AuxVars[]  AssignedVars[hdr.tcp.dstPort] 19416#L470_accept_S5 [2507] L470_accept_S5-->L471_accept_S5: Formula: (and (<= 0 v_hdr.tcp.dstPort_11) (< v_hdr.tcp.dstPort_11 65536))  InVars {hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  OutVars{hdr.tcp.dstPort=v_hdr.tcp.dstPort_11}  AuxVars[]  AssignedVars[] 19732#L471_accept_S5 [2034] L471_accept_S5-->L472_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_14}  AuxVars[]  AssignedVars[hdr.tcp.seqNo] 19733#L472_accept_S5 [2460] L472_accept_S5-->L473_accept_S5: Formula: (and (< v_hdr.tcp.seqNo_13 4294967296) (<= 0 v_hdr.tcp.seqNo_13))  InVars {hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  OutVars{hdr.tcp.seqNo=v_hdr.tcp.seqNo_13}  AuxVars[]  AssignedVars[] 20216#L473_accept_S5 [2708] L473_accept_S5-->L474_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_11}  AuxVars[]  AssignedVars[hdr.tcp.ackNo] 19725#L474_accept_S5 [2030] L474_accept_S5-->L475_accept_S5: Formula: (and (< v_hdr.tcp.ackNo_9 4294967296) (<= 0 v_hdr.tcp.ackNo_9))  InVars {hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  OutVars{hdr.tcp.ackNo=v_hdr.tcp.ackNo_9}  AuxVars[]  AssignedVars[] 19726#L475_accept_S5 [2143] L475_accept_S5-->L476_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_14}  AuxVars[]  AssignedVars[hdr.tcp.dataOffset] 19894#L476_accept_S5 [2145] L476_accept_S5-->L477_accept_S5: Formula: (and (< v_hdr.tcp.dataOffset_15 16) (<= 0 v_hdr.tcp.dataOffset_15))  InVars {hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  OutVars{hdr.tcp.dataOffset=v_hdr.tcp.dataOffset_15}  AuxVars[]  AssignedVars[] 19579#L477_accept_S5 [1941] L477_accept_S5-->L478_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.res=v_hdr.tcp.res_9}  AuxVars[]  AssignedVars[hdr.tcp.res] 19580#L478_accept_S5 [1962] L478_accept_S5-->L479_accept_S5: Formula: (and (<= 0 v_hdr.tcp.res_13) (< v_hdr.tcp.res_13 16))  InVars {hdr.tcp.res=v_hdr.tcp.res_13}  OutVars{hdr.tcp.res=v_hdr.tcp.res_13}  AuxVars[]  AssignedVars[] 19607#L479_accept_S5 [2616] L479_accept_S5-->L480_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_13}  AuxVars[]  AssignedVars[hdr.tcp.flags] 20147#L480_accept_S5 [2374] L480_accept_S5-->L481_accept_S5: Formula: (and (< v_hdr.tcp.flags_12 256) (<= 0 v_hdr.tcp.flags_12))  InVars {hdr.tcp.flags=v_hdr.tcp.flags_12}  OutVars{hdr.tcp.flags=v_hdr.tcp.flags_12}  AuxVars[]  AssignedVars[] 19565#L481_accept_S5 [1933] L481_accept_S5-->L482_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.window=v_hdr.tcp.window_13}  AuxVars[]  AssignedVars[hdr.tcp.window] 19399#L482_accept_S5 [1844] L482_accept_S5-->L483_accept_S5: Formula: (and (< v_hdr.tcp.window_10 65536) (<= 0 v_hdr.tcp.window_10))  InVars {hdr.tcp.window=v_hdr.tcp.window_10}  OutVars{hdr.tcp.window=v_hdr.tcp.window_10}  AuxVars[]  AssignedVars[] 19400#L483_accept_S5 [2512] L483_accept_S5-->L484_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_11}  AuxVars[]  AssignedVars[hdr.tcp.checksum] 20025#L484_accept_S5 [2258] L484_accept_S5-->L485_accept_S5: Formula: (and (< v_hdr.tcp.checksum_14 65536) (<= 0 v_hdr.tcp.checksum_14))  InVars {hdr.tcp.checksum=v_hdr.tcp.checksum_14}  OutVars{hdr.tcp.checksum=v_hdr.tcp.checksum_14}  AuxVars[]  AssignedVars[] 19325#L485_accept_S5 [1812] L485_accept_S5-->L486_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_11}  AuxVars[]  AssignedVars[hdr.tcp.urgentPtr] 19326#L486_accept_S5 [2315] L486_accept_S5-->L487_accept_S5: Formula: (and (<= 0 v_hdr.tcp.urgentPtr_9) (< v_hdr.tcp.urgentPtr_9 65536))  InVars {hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  OutVars{hdr.tcp.urgentPtr=v_hdr.tcp.urgentPtr_9}  AuxVars[]  AssignedVars[] 20093#L487_accept_S5 [2398] L487_accept_S5-->L488_accept_S5: Formula: (not v_hdr.tcp_options.valid_19)  InVars {}  OutVars{hdr.tcp_options.valid=v_hdr.tcp_options.valid_19}  AuxVars[]  AssignedVars[hdr.tcp_options.valid] 20171#L488_accept_S5 [2432] L488_accept_S5-->L489_accept_S5: Formula: (= v_emit_47 (store v_emit_48 v_hdr.tcp_options_4 false))  InVars {emit=v_emit_48, hdr.tcp_options=v_hdr.tcp_options_4}  OutVars{emit=v_emit_47, hdr.tcp_options=v_hdr.tcp_options_4}  AuxVars[]  AssignedVars[emit] 19284#L489_accept_S5 [1798] L489_accept_S5-->L490_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_11}  AuxVars[]  AssignedVars[hdr.tcp_options.a] 19285#L490_accept_S5 [2623] L490_accept_S5-->L491_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.a_14) (< v_hdr.tcp_options.a_14 4294967296))  InVars {hdr.tcp_options.a=v_hdr.tcp_options.a_14}  OutVars{hdr.tcp_options.a=v_hdr.tcp_options.a_14}  AuxVars[]  AssignedVars[] 19441#L491_accept_S5 [1862] L491_accept_S5-->L492_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_13}  AuxVars[]  AssignedVars[hdr.tcp_options.b] 19442#L492_accept_S5 [2586] L492_accept_S5-->L493_accept_S5: Formula: (and (< v_hdr.tcp_options.b_9 4294967296) (<= 0 v_hdr.tcp_options.b_9))  InVars {hdr.tcp_options.b=v_hdr.tcp_options.b_9}  OutVars{hdr.tcp_options.b=v_hdr.tcp_options.b_9}  AuxVars[]  AssignedVars[] 19929#L493_accept_S5 [2167] L493_accept_S5-->L494_accept_S5: Formula: true  InVars {}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_9}  AuxVars[]  AssignedVars[hdr.tcp_options.c] 19885#L494_accept_S5 [2134] L494_accept_S5-->L495_accept_S5: Formula: (and (<= 0 v_hdr.tcp_options.c_12) (< v_hdr.tcp_options.c_12 4294967296))  InVars {hdr.tcp_options.c=v_hdr.tcp_options.c_12}  OutVars{hdr.tcp_options.c=v_hdr.tcp_options.c_12}  AuxVars[]  AssignedVars[] 19886#L495_accept_S5 [2396] L495_accept_S5-->L496_accept_S5: Formula: (not v_hdr.udp.valid_18)  InVars {}  OutVars{hdr.udp.valid=v_hdr.udp.valid_18}  AuxVars[]  AssignedVars[hdr.udp.valid] 19708#L496_accept_S5 [2020] L496_accept_S5-->L497_accept_S5: Formula: (= v_emit_53 (store v_emit_54 v_hdr.udp_4 false))  InVars {hdr.udp=v_hdr.udp_4, emit=v_emit_54}  OutVars{hdr.udp=v_hdr.udp_4, emit=v_emit_53}  AuxVars[]  AssignedVars[emit] 19709#L497_accept_S5 [2420] L497_accept_S5-->L498_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_11}  AuxVars[]  AssignedVars[hdr.udp.sourcePort] 20194#L498_accept_S5 [2532] L498_accept_S5-->L499_accept_S5: Formula: (and (< v_hdr.udp.sourcePort_10 65536) (<= 0 v_hdr.udp.sourcePort_10))  InVars {hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  OutVars{hdr.udp.sourcePort=v_hdr.udp.sourcePort_10}  AuxVars[]  AssignedVars[] 19259#L499_accept_S5 [1787] L499_accept_S5-->L500_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_10}  AuxVars[]  AssignedVars[hdr.udp.destPort] 19260#L500_accept_S5 [2696] L500_accept_S5-->L501_accept_S5: Formula: (and (<= 0 v_hdr.udp.destPort_11) (< v_hdr.udp.destPort_11 65536))  InVars {hdr.udp.destPort=v_hdr.udp.destPort_11}  OutVars{hdr.udp.destPort=v_hdr.udp.destPort_11}  AuxVars[]  AssignedVars[] 20330#L501_accept_S5 [2742] L501_accept_S5-->L502_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.length_=v_hdr.udp.length__13}  AuxVars[]  AssignedVars[hdr.udp.length_] 19624#L502_accept_S5 [1973] L502_accept_S5-->L503_accept_S5: Formula: (and (<= 0 v_hdr.udp.length__9) (< v_hdr.udp.length__9 65536))  InVars {hdr.udp.length_=v_hdr.udp.length__9}  OutVars{hdr.udp.length_=v_hdr.udp.length__9}  AuxVars[]  AssignedVars[] 19625#L503_accept_S5 [2055] L503_accept_S5-->L504_accept_S5: Formula: true  InVars {}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_9}  AuxVars[]  AssignedVars[hdr.udp.checksum] 19767#L504_accept_S5 [2471] L504_accept_S5-->L505_accept_S5: Formula: (and (<= 0 v_hdr.udp.checksum_14) (< v_hdr.udp.checksum_14 65536))  InVars {hdr.udp.checksum=v_hdr.udp.checksum_14}  OutVars{hdr.udp.checksum=v_hdr.udp.checksum_14}  AuxVars[]  AssignedVars[] 19235#L505_accept_S5 [1776] L505_accept_S5-->L506_accept_S5: Formula: (= v_meta.codel.drop_time_20 0)  InVars {}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_20}  AuxVars[]  AssignedVars[meta.codel.drop_time] 19236#L506_accept_S5 [2227] L506_accept_S5-->L507_accept_S5: Formula: (= v_meta.codel.time_now_23 0)  InVars {}  OutVars{meta.codel.time_now=v_meta.codel.time_now_23}  AuxVars[]  AssignedVars[meta.codel.time_now] 19991#L507_accept_S5 [2545] L507_accept_S5-->L508_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_19)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_19}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 20265#L508_accept_S5 [2676] L508_accept_S5-->L509_accept_S5: Formula: (= v_meta.codel.state_dropping_17 0)  InVars {}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_17}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 20305#L509_accept_S5 [2638] L509_accept_S5-->L510_accept_S5: Formula: (= 0 v_meta.codel.delta_19)  InVars {}  OutVars{meta.codel.delta=v_meta.codel.delta_19}  AuxVars[]  AssignedVars[meta.codel.delta] 20294#L510_accept_S5 [2610] L510_accept_S5-->L511_accept_S5: Formula: (= v_meta.codel.time_since_last_dropping_16 0)  InVars {}  OutVars{meta.codel.time_since_last_dropping=v_meta.codel.time_since_last_dropping_16}  AuxVars[]  AssignedVars[meta.codel.time_since_last_dropping] 20220#L511_accept_S5 [2472] L511_accept_S5-->L512_accept_S5: Formula: (= v_meta.codel.drop_next_27 0)  InVars {}  OutVars{meta.codel.drop_next=v_meta.codel.drop_next_27}  AuxVars[]  AssignedVars[meta.codel.drop_next] 20015#L512_accept_S5 [2251] L512_accept_S5-->L513_accept_S5: Formula: (= v_meta.codel.drop_cnt_26 0)  InVars {}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_26}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 20016#L513_accept_S5 [2569] L513_accept_S5-->L514_accept_S5: Formula: (= v_meta.codel.last_drop_cnt_16 0)  InVars {}  OutVars{meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_16}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 19448#L514_accept_S5 [1867] L514_accept_S5-->L515_accept_S5: Formula: (= v_meta.codel.reset_drop_time_14 0)  InVars {}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_14}  AuxVars[]  AssignedVars[meta.codel.reset_drop_time] 19449#L515_accept_S5 [2339] L515_accept_S5-->L516_accept_S5: Formula: (= v_meta.codel.new_drop_time_16 0)  InVars {}  OutVars{meta.codel.new_drop_time=v_meta.codel.new_drop_time_16}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 20114#L516_accept_S5 [2692] L516_accept_S5-->L517_accept_S5: Formula: (= v_meta.codel.new_drop_time_helper_10 0)  InVars {}  OutVars{meta.codel.new_drop_time_helper=v_meta.codel.new_drop_time_helper_10}  AuxVars[]  AssignedVars[meta.codel.new_drop_time_helper] 19515#L517_accept_S5 [1907] L517_accept_S5-->L518_accept_S5: Formula: (= v_meta.codel.queue_id_36 0)  InVars {}  OutVars{meta.codel.queue_id=v_meta.codel.queue_id_36}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19516#L518_accept_S5 [2175] L518_accept_S5-->L519_accept_S5: Formula: (= v_meta.routing_metadata.tcpLength_21 0)  InVars {}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_21}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 19937#L519_accept_S5 [2344] L519_accept_S5-->L520_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value=v_c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value_11}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value] 19270#L520_accept_S5 [1792] L520_accept_S5-->L521_accept_S5: Formula: true  InVars {}  OutVars{c_codel_0_t_codel_control_law.action_run=v_c_codel_0_t_codel_control_law.action_run_12}  AuxVars[]  AssignedVars[c_codel_0_t_codel_control_law.action_run] 19271#L521_accept_S5 [1845] L521_accept_S5-->L522_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.egress_spec=v_forwarding_0.forward.egress_spec_10}  AuxVars[]  AssignedVars[forwarding_0.forward.egress_spec] 19401#L522_accept_S5 [2057] L522_accept_S5-->L523_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.forward.dst_mac=v_forwarding_0.forward.dst_mac_10}  AuxVars[]  AssignedVars[forwarding_0.forward.dst_mac] 19494#L523_accept_S5 [1892] L523_accept_S5-->havocProcedureFINAL_accept_S5: Formula: true  InVars {}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_12}  AuxVars[]  AssignedVars[forwarding_0.action_run] 19495#havocProcedureFINAL_accept_S5 [2288] havocProcedureFINAL_accept_S5-->havocProcedureEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20058#havocProcedureEXIT_accept_S5 >[2934] havocProcedureEXIT_accept_S5-->L535-D99: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20097#L535-D99 [2360] L535-D99-->L535_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19395#L535_accept_S5 [2418] L535_accept_S5-->L535_accept_S5-D66: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20193#L535_accept_S5-D66 [2659] L535_accept_S5-D66-->_parser_ParserImplENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19509#_parser_ParserImplENTRY_accept_S5 [2744] _parser_ParserImplENTRY_accept_S5-->_parser_ParserImplENTRY_accept_S5-D51: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19687#_parser_ParserImplENTRY_accept_S5-D51 [2008] _parser_ParserImplENTRY_accept_S5-D51-->startENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19688#startENTRY_accept_S5 [2490] startENTRY_accept_S5-->L643_accept_S5: Formula: v_hdr.ethernet.valid_17  InVars {}  OutVars{hdr.ethernet.valid=v_hdr.ethernet.valid_17}  AuxVars[]  AssignedVars[hdr.ethernet.valid] 20007#L643_accept_S5 [2242] L643_accept_S5-->L643-1_accept_S5: Formula: (not (= 2048 v_hdr.ethernet.ethertype_22))  InVars {hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  OutVars{hdr.ethernet.ethertype=v_hdr.ethernet.ethertype_22}  AuxVars[]  AssignedVars[] 19508#L643-1_accept_S5 [1902] L643-1_accept_S5-->startEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19510#startEXIT_accept_S5 >[2810] startEXIT_accept_S5-->_parser_ParserImplFINAL-D111: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19394#_parser_ParserImplFINAL-D111 [1842] _parser_ParserImplFINAL-D111-->_parser_ParserImplFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19396#_parser_ParserImplFINAL_accept_S5 [2136] _parser_ParserImplFINAL_accept_S5-->_parser_ParserImplEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19888#_parser_ParserImplEXIT_accept_S5 >[2891] _parser_ParserImplEXIT_accept_S5-->L536-D150: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19622#L536-D150 [1972] L536-D150-->L536_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19623#L536_accept_S5 [2534] L536_accept_S5-->L536_accept_S5-D93: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19700#L536_accept_S5-D93 [2016] L536_accept_S5-D93-->verifyChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19701#verifyChecksumFINAL_accept_S5 [2642] verifyChecksumFINAL_accept_S5-->verifyChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20307#verifyChecksumEXIT_accept_S5 >[2892] verifyChecksumEXIT_accept_S5-->L537-D147: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19893#L537-D147 [2141] L537-D147-->L537_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19598#L537_accept_S5 [2745] L537_accept_S5-->L537_accept_S5-D72: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19635#L537_accept_S5-D72 [1978] L537_accept_S5-D72-->ingressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19233#ingressENTRY_accept_S5 [2715] ingressENTRY_accept_S5-->ingressENTRY_accept_S5-D81: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 20337#ingressENTRY_accept_S5-D81 [2729] ingressENTRY_accept_S5-D81-->forwarding_0.applyENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19955#forwarding_0.applyENTRY_accept_S5 [2191] forwarding_0.applyENTRY_accept_S5-->L394_accept_S5: Formula: (not (= forwarding_0.action.forward v_forwarding_0.action_run_26))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_26}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_26}  AuxVars[]  AssignedVars[] 19956#L394_accept_S5 [2511] L394_accept_S5-->L394-1_accept_S5: Formula: (not (= forwarding_0.action.NoAction_1 v_forwarding_0.action_run_16))  InVars {forwarding_0.action_run=v_forwarding_0.action_run_16}  OutVars{forwarding_0.action_run=v_forwarding_0.action_run_16}  AuxVars[]  AssignedVars[] 20066#L394-1_accept_S5 [2049] L394-1_accept_S5-->forwarding_0.applyEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19854#forwarding_0.applyEXIT_accept_S5 >[2821] forwarding_0.applyEXIT_accept_S5-->ingressFINAL-D177: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19855#ingressFINAL-D177 [1957] ingressFINAL-D177-->ingressFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19608#ingressFINAL_accept_S5 [1964] ingressFINAL_accept_S5-->ingressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19609#ingressEXIT_accept_S5 >[2759] ingressEXIT_accept_S5-->L538-D144: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20034#L538-D144 [2265] L538-D144-->L538_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19162#L538_accept_S5 [1951] L538_accept_S5-->L538_accept_S5-D18: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19198#L538_accept_S5-D18 [1762] L538_accept_S5-D18-->egressENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19199#egressENTRY_accept_S5 [1908] egressENTRY_accept_S5-->L318_accept_S5: Formula: (= v_standard_metadata.ingress_port_18 1)  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_18}  AuxVars[]  AssignedVars[] 19161#L318_accept_S5 [1749] L318_accept_S5-->L319_accept_S5: Formula: (= v_meta.codel.queue_id_37 v_standard_metadata.egress_port_19)  InVars {standard_metadata.egress_port=v_standard_metadata.egress_port_19}  OutVars{standard_metadata.egress_port=v_standard_metadata.egress_port_19, meta.codel.queue_id=v_meta.codel.queue_id_37}  AuxVars[]  AssignedVars[meta.codel.queue_id] 19163#L319_accept_S5 [2164] L319_accept_S5-->L319_accept_S5-D75: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19573#L319_accept_S5-D75 [1938] L319_accept_S5-D75-->c_codel_0_a_codel_init_0ENTRY_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19184#c_codel_0_a_codel_init_0ENTRY_accept_S5 [1756] c_codel_0_a_codel_init_0ENTRY_accept_S5-->L266_accept_S5: Formula: (= 0 v_meta.codel.ok_to_drop_38)  InVars {}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_38}  AuxVars[]  AssignedVars[meta.codel.ok_to_drop] 19185#L266_accept_S5 [2685] L266_accept_S5-->L267_accept_S5: Formula: (= v_meta.codel.time_now_36 (mod (+ (mod v_standard_metadata.deq_timedelta_28 281474976710656) (mod v_standard_metadata.enq_timestamp_16 281474976710656)) 281474976710656))  InVars {standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_28, standard_metadata.enq_timestamp=v_standard_metadata.enq_timestamp_16, meta.codel.time_now=v_meta.codel.time_now_36}  AuxVars[]  AssignedVars[meta.codel.time_now] 20165#L267_accept_S5 [2392] L267_accept_S5-->L269_accept_S5: Formula: (= v_meta.codel.new_drop_time_24 (mod (+ 100000 (mod v_meta.codel.time_now_41 281474976710656)) 281474976710656))  InVars {meta.codel.time_now=v_meta.codel.time_now_41}  OutVars{meta.codel.time_now=v_meta.codel.time_now_41, meta.codel.new_drop_time=v_meta.codel.new_drop_time_24}  AuxVars[]  AssignedVars[meta.codel.new_drop_time] 19359#L269_accept_S5 [1824] L269_accept_S5-->L271_accept_S5: Formula: (= (select v_r_state_dropping_18 v_meta.codel.queue_id_53) v_meta.codel.state_dropping_27)  InVars {r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53}  OutVars{r_state_dropping=v_r_state_dropping_18, meta.codel.queue_id=v_meta.codel.queue_id_53, meta.codel.state_dropping=v_meta.codel.state_dropping_27}  AuxVars[]  AssignedVars[meta.codel.state_dropping] 19360#L271_accept_S5 [2261] L271_accept_S5-->L273_accept_S5: Formula: (= (select v_r_drop_count_20 v_meta.codel.queue_id_49) v_meta.codel.drop_cnt_38)  InVars {meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  OutVars{meta.codel.drop_cnt=v_meta.codel.drop_cnt_38, meta.codel.queue_id=v_meta.codel.queue_id_49, r_drop_count=v_r_drop_count_20}  AuxVars[]  AssignedVars[meta.codel.drop_cnt] 20027#L273_accept_S5 [2628] L273_accept_S5-->L275_accept_S5: Formula: (= (select v_r_last_drop_count_13 v_meta.codel.queue_id_42) v_meta.codel.last_drop_cnt_18)  InVars {r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42}  OutVars{r_last_drop_count=v_r_last_drop_count_13, meta.codel.queue_id=v_meta.codel.queue_id_42, meta.codel.last_drop_cnt=v_meta.codel.last_drop_cnt_18}  AuxVars[]  AssignedVars[meta.codel.last_drop_cnt] 19908#L275_accept_S5 [2151] L275_accept_S5-->L277_accept_S5: Formula: (= v_meta.codel.drop_next_35 (select v_r_next_drop_19 v_meta.codel.queue_id_46))  InVars {r_next_drop=v_r_next_drop_19, meta.codel.queue_id=v_meta.codel.queue_id_46}  OutVars{r_next_drop=v_r_next_drop_19, meta.codel.drop_next=v_meta.codel.drop_next_35, meta.codel.queue_id=v_meta.codel.queue_id_46}  AuxVars[]  AssignedVars[meta.codel.drop_next] 19517#L277_accept_S5 [1910] L277_accept_S5-->c_codel_0_a_codel_init_0FINAL_accept_S5: Formula: (= v_meta.codel.drop_time_43 (select v_r_drop_time_16 v_meta.codel.queue_id_54))  InVars {meta.codel.queue_id=v_meta.codel.queue_id_54, r_drop_time=v_r_drop_time_16}  OutVars{r_drop_time=v_r_drop_time_16, meta.codel.queue_id=v_meta.codel.queue_id_54, meta.codel.drop_time=v_meta.codel.drop_time_43}  AuxVars[]  AssignedVars[meta.codel.drop_time] 19518#c_codel_0_a_codel_init_0FINAL_accept_S5 [2464] c_codel_0_a_codel_init_0FINAL_accept_S5-->c_codel_0_a_codel_init_0EXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19526#c_codel_0_a_codel_init_0EXIT_accept_S5 >[2763] c_codel_0_a_codel_init_0EXIT_accept_S5-->L319-1-D126: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19527#L319-1-D126 [1959] L319-1-D126-->L319-1_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19602#L319-1_accept_S5 [2249] L319-1_accept_S5-->L320-1_accept_S5: Formula: (not (< v_standard_metadata.deq_timedelta_26 5000))  InVars {standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  OutVars{standard_metadata.deq_timedelta=v_standard_metadata.deq_timedelta_26}  AuxVars[]  AssignedVars[] 19409#L320-1_accept_S5 [2653] L320-1_accept_S5-->L329_accept_S5: Formula: (not (= v_meta.codel.reset_drop_time_19 1))  InVars {meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  OutVars{meta.codel.reset_drop_time=v_meta.codel.reset_drop_time_19}  AuxVars[]  AssignedVars[] 20303#L329_accept_S5 [2634] L329_accept_S5-->L335_accept_S5: Formula: (not (= v_meta.codel.drop_time_24 0))  InVars {meta.codel.drop_time=v_meta.codel.drop_time_24}  OutVars{meta.codel.drop_time=v_meta.codel.drop_time_24}  AuxVars[]  AssignedVars[] 19226#L335_accept_S5 [1773] L335_accept_S5-->L335-2_accept_S5: Formula: (not (<= v_meta.codel.drop_time_32 v_meta.codel.time_now_29))  InVars {meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  OutVars{meta.codel.time_now=v_meta.codel.time_now_29, meta.codel.drop_time=v_meta.codel.drop_time_32}  AuxVars[]  AssignedVars[] 19228#L335-2_accept_S5 [1804] L335-2_accept_S5-->L356_accept_S5: Formula: (not (= v_meta.codel.state_dropping_22 1))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_22}  OutVars{meta.codel.state_dropping=v_meta.codel.state_dropping_22}  AuxVars[]  AssignedVars[] 19299#L356_accept_S5 [1853] L356_accept_S5-->L317_accept_S5: Formula: (not (= v_meta.codel.ok_to_drop_31 1))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_31}  AuxVars[]  AssignedVars[] 19351#L317_accept_S5 [2602] L317_accept_S5-->L369_accept_S5: Formula: (not (< 500 v_hdr.ipv4.totalLen_19))  InVars {hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  OutVars{hdr.ipv4.totalLen=v_hdr.ipv4.totalLen_19}  AuxVars[]  AssignedVars[] 19731#L369_accept_S5 [2395] L369_accept_S5-->egressFINAL_accept_S5: Formula: (= (mod (+ 65516 (mod v_meta.routing_metadata.tcpLength_25 65536)) 65536) v_meta.routing_metadata.tcpLength_24)  InVars {meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_25}  OutVars{meta.routing_metadata.tcpLength=v_meta.routing_metadata.tcpLength_24}  AuxVars[]  AssignedVars[meta.routing_metadata.tcpLength] 20166#egressFINAL_accept_S5 [2647] egressFINAL_accept_S5-->egressEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20311#egressEXIT_accept_S5 >[2981] egressEXIT_accept_S5-->L539-D174: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20654#L539-D174 [1751] L539-D174-->L539_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19703#L539_accept_S5 [2668] L539_accept_S5-->L539_accept_S5-D36: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[]< 19702#L539_accept_S5-D36 [2017] L539_accept_S5-D36-->computeChecksumFINAL_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19704#computeChecksumFINAL_accept_S5 [1965] computeChecksumFINAL_accept_S5-->computeChecksumEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20169#computeChecksumEXIT_accept_S5 >[3016] computeChecksumEXIT_accept_S5-->L540-D105: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 20170#L540-D105 [2747] L540-D105-->L540_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19373#L540_accept_S5 [1831] L540_accept_S5-->L542_accept_S5: Formula: (not v_forward_20)  InVars {forward=v_forward_20}  OutVars{forward=v_forward_20}  AuxVars[]  AssignedVars[] 19374#L542_accept_S5 [1864] L542_accept_S5-->L541-1_accept_S5: Formula: v_drop_36  InVars {}  OutVars{drop=v_drop_36}  AuxVars[]  AssignedVars[drop] 19443#L541-1_accept_S5 [2278] L541-1_accept_S5-->L545_accept_S5: Formula: (let ((.cse0 (<= v_meta.codel.drop_time_45 v_meta.codel.time_now_43))) (or (and (not .cse0) (not v__p4ltl_0_7)) (and v__p4ltl_0_7 .cse0)))  InVars {meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  OutVars{_p4ltl_0=v__p4ltl_0_7, meta.codel.time_now=v_meta.codel.time_now_43, meta.codel.drop_time=v_meta.codel.drop_time_45}  AuxVars[]  AssignedVars[_p4ltl_0] 20048#L545_accept_S5 [2370] L545_accept_S5-->L546_accept_S5: Formula: (let ((.cse0 (= 0 v_meta.codel.ok_to_drop_40))) (or (and (not .cse0) (not v__p4ltl_1_6)) (and v__p4ltl_1_6 .cse0)))  InVars {meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40}  OutVars{meta.codel.ok_to_drop=v_meta.codel.ok_to_drop_40, _p4ltl_1=v__p4ltl_1_6}  AuxVars[]  AssignedVars[_p4ltl_1] 20144#L546_accept_S5 [2564] L546_accept_S5-->L547_accept_S5: Formula: (let ((.cse0 (= v_meta.codel.state_dropping_28 1))) (or (and v__p4ltl_2_6 .cse0) (and (not .cse0) (not v__p4ltl_2_6))))  InVars {meta.codel.state_dropping=v_meta.codel.state_dropping_28}  OutVars{_p4ltl_2=v__p4ltl_2_6, meta.codel.state_dropping=v_meta.codel.state_dropping_28}  AuxVars[]  AssignedVars[_p4ltl_2] 19196#L547_accept_S5 [1760] L547_accept_S5-->mainFINAL_accept_S5: Formula: (let ((.cse0 (= v_standard_metadata.ingress_port_26 1))) (or (and (not v__p4ltl_3_8) (not .cse0)) (and .cse0 v__p4ltl_3_8)))  InVars {standard_metadata.ingress_port=v_standard_metadata.ingress_port_26}  OutVars{standard_metadata.ingress_port=v_standard_metadata.ingress_port_26, _p4ltl_3=v__p4ltl_3_8}  AuxVars[]  AssignedVars[_p4ltl_3] 19197#mainFINAL_accept_S5 [1840] mainFINAL_accept_S5-->mainEXIT_accept_S5: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19388#mainEXIT_accept_S5 >[2967] mainEXIT_accept_S5-->L553-1-D129: AOR: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] LVA: Formula: true  InVars {}  OutVars{}  AuxVars[]  AssignedVars[] 19912#L553-1-D129 [2153] L553-1-D129-->L553-1_accept_S5: Formula: v__p4ltl_3_11  InVars {_p4ltl_3=v__p4ltl_3_11}  OutVars{_p4ltl_3=v__p4ltl_3_11}  AuxVars[]  AssignedVars[] 19514#L553-1_accept_S5 
[2023-02-07 02:28:20,077 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:20,077 INFO  L85        PathProgramCache]: Analyzing trace with hash 1366854684, now seen corresponding path program 1 times
[2023-02-07 02:28:20,077 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:20,077 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [129615309]
[2023-02-07 02:28:20,078 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:20,078 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:20,143 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,143 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2023-02-07 02:28:20,202 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,376 INFO  L130   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2023-02-07 02:28:20,376 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:20,377 INFO  L85        PathProgramCache]: Analyzing trace with hash -1268256367, now seen corresponding path program 1 times
[2023-02-07 02:28:20,377 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:20,377 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1147477162]
[2023-02-07 02:28:20,377 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:20,377 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:20,395 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,395 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2023-02-07 02:28:20,411 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,465 INFO  L130   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2023-02-07 02:28:20,466 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2023-02-07 02:28:20,466 INFO  L85        PathProgramCache]: Analyzing trace with hash 1755271148, now seen corresponding path program 1 times
[2023-02-07 02:28:20,466 INFO  L118   FreeRefinementEngine]: Executing refinement strategy CAMEL
[2023-02-07 02:28:20,466 INFO  L333   FreeRefinementEngine]: Using trace check IpTcStrategyModuleSmtInterpolCraig [1456935800]
[2023-02-07 02:28:20,466 INFO  L95    rtionOrderModulation]: Keeping assertion order NOT_INCREMENTALLY
[2023-02-07 02:28:20,466 INFO  L127          SolverBuilder]: Constructing new instance of SMTInterpol with explicit timeout -1 ms and remaining time -1 ms
[2023-02-07 02:28:20,566 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,566 INFO  L352             TraceCheck]: Trace is feasible, we will do another trace check, this time with branch encoders.
[2023-02-07 02:28:20,677 INFO  L136    AnnotateAndAsserter]: Conjunction of SSA is sat
[2023-02-07 02:28:20,855 INFO  L130   FreeRefinementEngine]: Strategy CAMEL found a feasible trace
[2023-02-07 02:29:07,292 WARN  L233               SmtUtils]: Spent 9.43s on a formula simplification. DAG size of input: 999 DAG size of output: 951 (called from [L 279] de.uni_freiburg.informatik.ultimate.lib.modelcheckerutils.cfg.transitions.TransFormulaUtils.sequentialComposition)
[2023-02-07 02:29:12,797 INFO  L744       QuantifierPusher]: Run 10 iterations of DualJunctionQuantifierElimination maybe there is a nontermination bug.
[2023-02-07 02:31:26,873 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 07.02 02:31:26 BasicIcfg
[2023-02-07 02:31:26,873 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2023-02-07 02:31:26,873 INFO  L158              Benchmark]: Toolchain (without parser) took 201599.61ms. Allocated memory was 34.6MB in the beginning and 1.3GB in the end (delta: 1.2GB). Free memory was 19.7MB in the beginning and 948.8MB in the end (delta: -929.1MB). Peak memory consumption was 1.1GB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,874 INFO  L158              Benchmark]: Boogie PL CUP Parser took 0.12ms. Allocated memory is still 34.6MB. Free memory was 16.4MB in the beginning and 16.4MB in the end (delta: 28.3kB). There was no memory consumed. Max. memory is 4.3GB.
[2023-02-07 02:31:26,874 INFO  L158              Benchmark]: Boogie Preprocessor took 36.61ms. Allocated memory is still 34.6MB. Free memory was 19.7MB in the beginning and 16.2MB in the end (delta: 3.5MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,874 INFO  L158              Benchmark]: ThufvSpecLang took 29.27ms. Allocated memory is still 34.6MB. Free memory was 16.2MB in the beginning and 14.0MB in the end (delta: 2.1MB). Peak memory consumption was 2.1MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,874 INFO  L158              Benchmark]: RCFGBuilder took 333.23ms. Allocated memory was 34.6MB in the beginning and 41.9MB in the end (delta: 7.3MB). Free memory was 14.0MB in the beginning and 21.1MB in the end (delta: -7.1MB). Peak memory consumption was 6.8MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,875 INFO  L158              Benchmark]: ThufvLTL2Aut took 45.73ms. Allocated memory is still 41.9MB. Free memory was 21.0MB in the beginning and 18.1MB in the end (delta: 2.8MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,875 INFO  L158              Benchmark]: BÃ¼chi Program Product took 692.08ms. Allocated memory was 41.9MB in the beginning and 60.8MB in the end (delta: 18.9MB). Free memory was 18.1MB in the beginning and 38.8MB in the end (delta: -20.7MB). Peak memory consumption was 23.6MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,875 INFO  L158              Benchmark]: BlockEncodingV2 took 64.91ms. Allocated memory is still 60.8MB. Free memory was 38.8MB in the beginning and 14.7MB in the end (delta: 24.1MB). Peak memory consumption was 24.1MB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,876 INFO  L158              Benchmark]: BuchiAutomizer took 200394.25ms. Allocated memory was 60.8MB in the beginning and 1.3GB in the end (delta: 1.2GB). Free memory was 14.7MB in the beginning and 948.8MB in the end (delta: -934.1MB). Peak memory consumption was 1.0GB. Max. memory is 4.3GB.
[2023-02-07 02:31:26,877 INFO  L339   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1023 locations, 1303 edges
  - StatisticsResult: Encoded RCFG
    1012 locations, 1287 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.12ms. Allocated memory is still 34.6MB. Free memory was 16.4MB in the beginning and 16.4MB in the end (delta: 28.3kB). There was no memory consumed. Max. memory is 4.3GB.
 * Boogie Preprocessor took 36.61ms. Allocated memory is still 34.6MB. Free memory was 19.7MB in the beginning and 16.2MB in the end (delta: 3.5MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
 * ThufvSpecLang took 29.27ms. Allocated memory is still 34.6MB. Free memory was 16.2MB in the beginning and 14.0MB in the end (delta: 2.1MB). Peak memory consumption was 2.1MB. Max. memory is 4.3GB.
 * RCFGBuilder took 333.23ms. Allocated memory was 34.6MB in the beginning and 41.9MB in the end (delta: 7.3MB). Free memory was 14.0MB in the beginning and 21.1MB in the end (delta: -7.1MB). Peak memory consumption was 6.8MB. Max. memory is 4.3GB.
 * ThufvLTL2Aut took 45.73ms. Allocated memory is still 41.9MB. Free memory was 21.0MB in the beginning and 18.1MB in the end (delta: 2.8MB). Peak memory consumption was 3.1MB. Max. memory is 4.3GB.
 * BÃ¼chi Program Product took 692.08ms. Allocated memory was 41.9MB in the beginning and 60.8MB in the end (delta: 18.9MB). Free memory was 18.1MB in the beginning and 38.8MB in the end (delta: -20.7MB). Peak memory consumption was 23.6MB. Max. memory is 4.3GB.
 * BlockEncodingV2 took 64.91ms. Allocated memory is still 60.8MB. Free memory was 38.8MB in the beginning and 14.7MB in the end (delta: 24.1MB). Peak memory consumption was 24.1MB. Max. memory is 4.3GB.
 * BuchiAutomizer took 200394.25ms. Allocated memory was 60.8MB in the beginning and 1.3GB in the end (delta: 1.2GB). Free memory was 14.7MB in the beginning and 948.8MB in the end (delta: -934.1MB). Peak memory consumption was 1.0GB. Max. memory is 4.3GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    3 locations, 5 edges
  - StatisticsResult: Initial RCFG
    278 locations, 338 edges
  - StatisticsResult: BuchiProgram size
    1023 locations, 1303 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 12 locations. The remainder module has 1598 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 200.3s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 188.5s. Construction of modules took 7.9s. BÃ¼chi inclusion checks took 3.4s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 3449 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had -1 states and ocurred in iteration -1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 0 mSolverCounterUnknown, 17229 SdHoareTripleChecker+Valid, 8.9s IncrementalHoareTripleChecker+Time, 0 mSdLazyCounter, 17136 mSDsluCounter, 16536 SdHoareTripleChecker+Invalid, 8.0s Time, 0 mProtectedAction, 0 SdHoareTripleChecker+Unchecked, 0 IncrementalHoareTripleChecker+Unchecked, 9877 mSDsCounter, 5723 IncrementalHoareTripleChecker+Valid, 0 mProtectedPredicate, 17969 IncrementalHoareTripleChecker+Invalid, 23692 SdHoareTripleChecker+Unknown, 0 mSolverCounterNotChecked, 5723 mSolverCounterUnsat, 6659 mSDtfsCounter, 17969 mSolverCounterSat, 0.2s SdHoareTripleChecker+Time, 0 IncrementalHoareTripleChecker+Unknown	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	InitialAbstractionConstructionTime: 0.0s
  - LTLInfiniteCounterExampleResult [Line: 553]: Violation of LTL property !(( []((_p4ltl_3 == true)) )) || ( ( [](( (_p4ltl_2 == true && _p4ltl_1 == true) ==> ( X(( ( []((!drop)) ) || ( (!drop) U (_p4ltl_0 == true) ) )) ) )) ))
    Found an infinite, lasso-shaped execution that violates the LTL property !(( []((_p4ltl_3 == true)) )) || ( ( [](( (_p4ltl_2 == true && _p4ltl_1 == true) ==> ( X(( ( []((!drop)) ) || ( (!drop) U (_p4ltl_0 == true) ) )) ) )) )).
Stem:
[L239]       CALL        call mainProcedure();
[L552]       COND TRUE   true
[L553]       CALL        call main();
[L535]       CALL        call havocProcedure();
[L401]                   drop := false;
[L402]                   forward := false;
[L403]                   havoc standard_metadata.ingress_port;
[L404]                   assume 0 <= standard_metadata.ingress_port && standard_metadata.ingress_port < 512;
[L405]                   standard_metadata.egress_spec := 0;
[L406]                   standard_metadata.egress_port := 0;
[L407]                   havoc standard_metadata.instance_type;
[L408]                   assume 0 <= standard_metadata.instance_type && standard_metadata.instance_type < 4294967296;
[L409]                   havoc standard_metadata.packet_length;
[L410]                   assume 0 <= standard_metadata.packet_length && standard_metadata.packet_length < 4294967296;
[L411]                   havoc standard_metadata.enq_timestamp;
[L412]                   assume 0 <= standard_metadata.enq_timestamp && standard_metadata.enq_timestamp < 4294967296;
[L413]                   standard_metadata.enq_qdepth := 0;
[L414]                   havoc standard_metadata.deq_timedelta;
[L415]                   assume 0 <= standard_metadata.deq_timedelta && standard_metadata.deq_timedelta < 4294967296;
[L416]                   havoc standard_metadata.deq_qdepth;
[L417]                   assume 0 <= standard_metadata.deq_qdepth && standard_metadata.deq_qdepth < 524288;
[L418]                   havoc standard_metadata.ingress_global_timestamp;
[L419]                   assume 0 <= standard_metadata.ingress_global_timestamp && standard_metadata.ingress_global_timestamp < 281474976710656;
[L420]                   havoc standard_metadata.egress_global_timestamp;
[L421]                   assume 0 <= standard_metadata.egress_global_timestamp && standard_metadata.egress_global_timestamp < 281474976710656;
[L422]                   standard_metadata.mcast_grp := 0;
[L423]                   standard_metadata.egress_rid := 0;
[L424]                   standard_metadata.checksum_error := 0;
[L425]                   standard_metadata.parser_error := 0;
[L426]                   standard_metadata.priority := 0;
[L427]                   hdr.ethernet.valid := false;
[L428]                   emit[hdr.ethernet] := false;
[L429]                   havoc hdr.ethernet.dst_addr;
[L430]                   assume 0 <= hdr.ethernet.dst_addr && hdr.ethernet.dst_addr < 281474976710656;
[L431]                   havoc hdr.ethernet.src_addr;
[L432]                   assume 0 <= hdr.ethernet.src_addr && hdr.ethernet.src_addr < 281474976710656;
[L433]                   havoc hdr.ethernet.ethertype;
[L434]                   assume 0 <= hdr.ethernet.ethertype && hdr.ethernet.ethertype < 65536;
[L435]                   hdr.ipv4.valid := false;
[L436]                   emit[hdr.ipv4] := false;
[L437]                   havoc hdr.ipv4.version;
[L438]                   assume 0 <= hdr.ipv4.version && hdr.ipv4.version < 16;
[L439]                   havoc hdr.ipv4.ihl;
[L440]                   assume 0 <= hdr.ipv4.ihl && hdr.ipv4.ihl < 16;
[L441]                   havoc hdr.ipv4.diffserv;
[L442]                   assume 0 <= hdr.ipv4.diffserv && hdr.ipv4.diffserv < 256;
[L443]                   havoc hdr.ipv4.totalLen;
[L444]                   assume 0 <= hdr.ipv4.totalLen && hdr.ipv4.totalLen < 65536;
[L445]                   havoc hdr.ipv4.identification;
[L446]                   assume 0 <= hdr.ipv4.identification && hdr.ipv4.identification < 65536;
[L447]                   havoc hdr.ipv4.flags;
[L448]                   assume 0 <= hdr.ipv4.flags && hdr.ipv4.flags < 8;
[L449]                   havoc hdr.ipv4.fragOffset;
[L450]                   assume 0 <= hdr.ipv4.fragOffset && hdr.ipv4.fragOffset < 8192;
[L451]                   havoc hdr.ipv4.ttl;
[L452]                   assume 0 <= hdr.ipv4.ttl && hdr.ipv4.ttl < 256;
[L453]                   havoc hdr.ipv4.protocol;
[L454]                   assume 0 <= hdr.ipv4.protocol && hdr.ipv4.protocol < 256;
[L455]                   havoc hdr.ipv4.hdrChecksum;
[L456]                   assume 0 <= hdr.ipv4.hdrChecksum && hdr.ipv4.hdrChecksum < 65536;
[L457]                   havoc hdr.ipv4.srcAddr;
[L458]                   assume 0 <= hdr.ipv4.srcAddr && hdr.ipv4.srcAddr < 4294967296;
[L459]                   havoc hdr.ipv4.dstAddr;
[L460]                   assume 0 <= hdr.ipv4.dstAddr && hdr.ipv4.dstAddr < 4294967296;
[L461]                   hdr.queue_delay.valid := false;
[L462]                   emit[hdr.queue_delay] := false;
[L463]                   havoc hdr.queue_delay.delay;
[L464]                   assume 0 <= hdr.queue_delay.delay && hdr.queue_delay.delay < 4294967296;
[L465]                   hdr.tcp.valid := false;
[L466]                   emit[hdr.tcp] := false;
[L467]                   havoc hdr.tcp.srcPort;
[L468]                   assume 0 <= hdr.tcp.srcPort && hdr.tcp.srcPort < 65536;
[L469]                   havoc hdr.tcp.dstPort;
[L470]                   assume 0 <= hdr.tcp.dstPort && hdr.tcp.dstPort < 65536;
[L471]                   havoc hdr.tcp.seqNo;
[L472]                   assume 0 <= hdr.tcp.seqNo && hdr.tcp.seqNo < 4294967296;
[L473]                   havoc hdr.tcp.ackNo;
[L474]                   assume 0 <= hdr.tcp.ackNo && hdr.tcp.ackNo < 4294967296;
[L475]                   havoc hdr.tcp.dataOffset;
[L476]                   assume 0 <= hdr.tcp.dataOffset && hdr.tcp.dataOffset < 16;
[L477]                   havoc hdr.tcp.res;
[L478]                   assume 0 <= hdr.tcp.res && hdr.tcp.res < 16;
[L479]                   havoc hdr.tcp.flags;
[L480]                   assume 0 <= hdr.tcp.flags && hdr.tcp.flags < 256;
[L481]                   havoc hdr.tcp.window;
[L482]                   assume 0 <= hdr.tcp.window && hdr.tcp.window < 65536;
[L483]                   havoc hdr.tcp.checksum;
[L484]                   assume 0 <= hdr.tcp.checksum && hdr.tcp.checksum < 65536;
[L485]                   havoc hdr.tcp.urgentPtr;
[L486]                   assume 0 <= hdr.tcp.urgentPtr && hdr.tcp.urgentPtr < 65536;
[L487]                   hdr.tcp_options.valid := false;
[L488]                   emit[hdr.tcp_options] := false;
[L489]                   havoc hdr.tcp_options.a;
[L490]                   assume 0 <= hdr.tcp_options.a && hdr.tcp_options.a < 4294967296;
[L491]                   havoc hdr.tcp_options.b;
[L492]                   assume 0 <= hdr.tcp_options.b && hdr.tcp_options.b < 4294967296;
[L493]                   havoc hdr.tcp_options.c;
[L494]                   assume 0 <= hdr.tcp_options.c && hdr.tcp_options.c < 4294967296;
[L495]                   hdr.udp.valid := false;
[L496]                   emit[hdr.udp] := false;
[L497]                   havoc hdr.udp.sourcePort;
[L498]                   assume 0 <= hdr.udp.sourcePort && hdr.udp.sourcePort < 65536;
[L499]                   havoc hdr.udp.destPort;
[L500]                   assume 0 <= hdr.udp.destPort && hdr.udp.destPort < 65536;
[L501]                   havoc hdr.udp.length_;
[L502]                   assume 0 <= hdr.udp.length_ && hdr.udp.length_ < 65536;
[L503]                   havoc hdr.udp.checksum;
[L504]                   assume 0 <= hdr.udp.checksum && hdr.udp.checksum < 65536;
[L505]                   meta.codel.drop_time := 0;
[L506]                   meta.codel.time_now := 0;
[L507]                   meta.codel.ok_to_drop := 0;
[L508]                   meta.codel.state_dropping := 0;
[L509]                   meta.codel.delta := 0;
[L510]                   meta.codel.time_since_last_dropping := 0;
[L511]                   meta.codel.drop_next := 0;
[L512]                   meta.codel.drop_cnt := 0;
[L513]                   meta.codel.last_drop_cnt := 0;
[L514]                   meta.codel.reset_drop_time := 0;
[L515]                   meta.codel.new_drop_time := 0;
[L516]                   meta.codel.new_drop_time_helper := 0;
[L517]                   meta.codel.queue_id := 0;
[L518]                   meta.routing_metadata.tcpLength := 0;
[L519]                   havoc c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value;
[L520]                   havoc c_codel_0_t_codel_control_law.action_run;
[L521]                   havoc forwarding_0.forward.egress_spec;
[L522]                   havoc forwarding_0.forward.dst_mac;
[L523]                   havoc forwarding_0.action_run;
[L535]       RET         call havocProcedure();
[L536]       CALL        call _parser_ParserImpl();
[L246]       CALL        call start();
[L642]                   hdr.ethernet.valid := true;
[L643]       COND FALSE  !(hdr.ethernet.ethertype == 2048)
[L246]       RET         call start();
[L536]       RET         call _parser_ParserImpl();
[L537]       CALL        call verifyChecksum();
[L537]       RET         call verifyChecksum();
[L538]       CALL        call ingress();
[L530]       CALL        call forwarding_0.apply();
[L391]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.forward)
[L394]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.NoAction_1)
[L530]       RET         call forwarding_0.apply();
[L538]       RET         call ingress();
[L539]       CALL        call egress();
[L317]       COND TRUE   standard_metadata.ingress_port == 1
[L318]                   meta.codel.queue_id := standard_metadata.egress_port;
[L319]       CALL        call c_codel_0_a_codel_init_0();
[L265]                   meta.codel.ok_to_drop := 0;
[L266]                   meta.codel.time_now := (standard_metadata.enq_timestamp % 281474976710656 + standard_metadata.deq_timedelta % 281474976710656) % 281474976710656;
[L267]                   meta.codel.new_drop_time := (meta.codel.time_now % 281474976710656 + 100000 % 281474976710656) % 281474976710656;
[L269]                   meta.codel.state_dropping := r_state_dropping[meta.codel.queue_id];
[L271]                   meta.codel.drop_cnt := r_drop_count[meta.codel.queue_id];
[L273]                   meta.codel.last_drop_cnt := r_last_drop_count[meta.codel.queue_id];
[L275]                   meta.codel.drop_next := r_next_drop[meta.codel.queue_id];
[L277]                   meta.codel.drop_time := r_drop_time[meta.codel.queue_id];
[L319]       RET         call c_codel_0_a_codel_init_0();
[L320-L322]              assume !(standard_metadata.deq_timedelta < 5000);
[L323]       COND FALSE  !(meta.codel.reset_drop_time == 1)
[L329]       COND FALSE  !(meta.codel.drop_time == 0)
[L335-L337]              assume !(meta.codel.time_now >= meta.codel.drop_time);
[L340]       COND TRUE   meta.codel.state_dropping == 1
[L341]       COND TRUE   meta.codel.ok_to_drop == 0
[L343]       CALL        call r_state_dropping.write(meta.codel.queue_id, 0);
[L628]                   r_state_dropping[index] := value;
[L343]       RET         call r_state_dropping.write(meta.codel.queue_id, 0);
[L369-L373]              assume !(hdr.ipv4.totalLen > 500);
[L374]                   meta.routing_metadata.tcpLength := (meta.routing_metadata.tcpLength % 65536 + 65516 % 65536) % 65536;
[L539]       RET         call egress();
[L540]       CALL        call computeChecksum();
[L540]       RET         call computeChecksum();
[L541]       COND TRUE   forward == false
[L542]                   drop := true;
[L544]                   _p4ltl_0 := meta.codel.time_now >= meta.codel.drop_time;
[L545]                   _p4ltl_1 := meta.codel.ok_to_drop == 0;
[L546]                   _p4ltl_2 := meta.codel.state_dropping == 1;
[L547]                   _p4ltl_3 := standard_metadata.ingress_port == 1;
[L553]       RET         call main();
[L552]       COND TRUE   true
[L553]       CALL        call main();
[L535]       CALL        call havocProcedure();
[L401]                   drop := false;
[L402]                   forward := false;
[L403]                   havoc standard_metadata.ingress_port;
[L404]                   assume 0 <= standard_metadata.ingress_port && standard_metadata.ingress_port < 512;
[L405]                   standard_metadata.egress_spec := 0;
[L406]                   standard_metadata.egress_port := 0;
[L407]                   havoc standard_metadata.instance_type;
[L408]                   assume 0 <= standard_metadata.instance_type && standard_metadata.instance_type < 4294967296;
[L409]                   havoc standard_metadata.packet_length;
[L410]                   assume 0 <= standard_metadata.packet_length && standard_metadata.packet_length < 4294967296;
[L411]                   havoc standard_metadata.enq_timestamp;
[L412]                   assume 0 <= standard_metadata.enq_timestamp && standard_metadata.enq_timestamp < 4294967296;
[L413]                   standard_metadata.enq_qdepth := 0;
[L414]                   havoc standard_metadata.deq_timedelta;
[L415]                   assume 0 <= standard_metadata.deq_timedelta && standard_metadata.deq_timedelta < 4294967296;
[L416]                   havoc standard_metadata.deq_qdepth;
[L417]                   assume 0 <= standard_metadata.deq_qdepth && standard_metadata.deq_qdepth < 524288;
[L418]                   havoc standard_metadata.ingress_global_timestamp;
[L419]                   assume 0 <= standard_metadata.ingress_global_timestamp && standard_metadata.ingress_global_timestamp < 281474976710656;
[L420]                   havoc standard_metadata.egress_global_timestamp;
[L421]                   assume 0 <= standard_metadata.egress_global_timestamp && standard_metadata.egress_global_timestamp < 281474976710656;
[L422]                   standard_metadata.mcast_grp := 0;
[L423]                   standard_metadata.egress_rid := 0;
[L424]                   standard_metadata.checksum_error := 0;
[L425]                   standard_metadata.parser_error := 0;
[L426]                   standard_metadata.priority := 0;
[L427]                   hdr.ethernet.valid := false;
[L428]                   emit[hdr.ethernet] := false;
[L429]                   havoc hdr.ethernet.dst_addr;
[L430]                   assume 0 <= hdr.ethernet.dst_addr && hdr.ethernet.dst_addr < 281474976710656;
[L431]                   havoc hdr.ethernet.src_addr;
[L432]                   assume 0 <= hdr.ethernet.src_addr && hdr.ethernet.src_addr < 281474976710656;
[L433]                   havoc hdr.ethernet.ethertype;
[L434]                   assume 0 <= hdr.ethernet.ethertype && hdr.ethernet.ethertype < 65536;
[L435]                   hdr.ipv4.valid := false;
[L436]                   emit[hdr.ipv4] := false;
[L437]                   havoc hdr.ipv4.version;
[L438]                   assume 0 <= hdr.ipv4.version && hdr.ipv4.version < 16;
[L439]                   havoc hdr.ipv4.ihl;
[L440]                   assume 0 <= hdr.ipv4.ihl && hdr.ipv4.ihl < 16;
[L441]                   havoc hdr.ipv4.diffserv;
[L442]                   assume 0 <= hdr.ipv4.diffserv && hdr.ipv4.diffserv < 256;
[L443]                   havoc hdr.ipv4.totalLen;
[L444]                   assume 0 <= hdr.ipv4.totalLen && hdr.ipv4.totalLen < 65536;
[L445]                   havoc hdr.ipv4.identification;
[L446]                   assume 0 <= hdr.ipv4.identification && hdr.ipv4.identification < 65536;
[L447]                   havoc hdr.ipv4.flags;
[L448]                   assume 0 <= hdr.ipv4.flags && hdr.ipv4.flags < 8;
[L449]                   havoc hdr.ipv4.fragOffset;
[L450]                   assume 0 <= hdr.ipv4.fragOffset && hdr.ipv4.fragOffset < 8192;
[L451]                   havoc hdr.ipv4.ttl;
[L452]                   assume 0 <= hdr.ipv4.ttl && hdr.ipv4.ttl < 256;
[L453]                   havoc hdr.ipv4.protocol;
[L454]                   assume 0 <= hdr.ipv4.protocol && hdr.ipv4.protocol < 256;
[L455]                   havoc hdr.ipv4.hdrChecksum;
[L456]                   assume 0 <= hdr.ipv4.hdrChecksum && hdr.ipv4.hdrChecksum < 65536;
[L457]                   havoc hdr.ipv4.srcAddr;
[L458]                   assume 0 <= hdr.ipv4.srcAddr && hdr.ipv4.srcAddr < 4294967296;
[L459]                   havoc hdr.ipv4.dstAddr;
[L460]                   assume 0 <= hdr.ipv4.dstAddr && hdr.ipv4.dstAddr < 4294967296;
[L461]                   hdr.queue_delay.valid := false;
[L462]                   emit[hdr.queue_delay] := false;
[L463]                   havoc hdr.queue_delay.delay;
[L464]                   assume 0 <= hdr.queue_delay.delay && hdr.queue_delay.delay < 4294967296;
[L465]                   hdr.tcp.valid := false;
[L466]                   emit[hdr.tcp] := false;
[L467]                   havoc hdr.tcp.srcPort;
[L468]                   assume 0 <= hdr.tcp.srcPort && hdr.tcp.srcPort < 65536;
[L469]                   havoc hdr.tcp.dstPort;
[L470]                   assume 0 <= hdr.tcp.dstPort && hdr.tcp.dstPort < 65536;
[L471]                   havoc hdr.tcp.seqNo;
[L472]                   assume 0 <= hdr.tcp.seqNo && hdr.tcp.seqNo < 4294967296;
[L473]                   havoc hdr.tcp.ackNo;
[L474]                   assume 0 <= hdr.tcp.ackNo && hdr.tcp.ackNo < 4294967296;
[L475]                   havoc hdr.tcp.dataOffset;
[L476]                   assume 0 <= hdr.tcp.dataOffset && hdr.tcp.dataOffset < 16;
[L477]                   havoc hdr.tcp.res;
[L478]                   assume 0 <= hdr.tcp.res && hdr.tcp.res < 16;
[L479]                   havoc hdr.tcp.flags;
[L480]                   assume 0 <= hdr.tcp.flags && hdr.tcp.flags < 256;
[L481]                   havoc hdr.tcp.window;
[L482]                   assume 0 <= hdr.tcp.window && hdr.tcp.window < 65536;
[L483]                   havoc hdr.tcp.checksum;
[L484]                   assume 0 <= hdr.tcp.checksum && hdr.tcp.checksum < 65536;
[L485]                   havoc hdr.tcp.urgentPtr;
[L486]                   assume 0 <= hdr.tcp.urgentPtr && hdr.tcp.urgentPtr < 65536;
[L487]                   hdr.tcp_options.valid := false;
[L488]                   emit[hdr.tcp_options] := false;
[L489]                   havoc hdr.tcp_options.a;
[L490]                   assume 0 <= hdr.tcp_options.a && hdr.tcp_options.a < 4294967296;
[L491]                   havoc hdr.tcp_options.b;
[L492]                   assume 0 <= hdr.tcp_options.b && hdr.tcp_options.b < 4294967296;
[L493]                   havoc hdr.tcp_options.c;
[L494]                   assume 0 <= hdr.tcp_options.c && hdr.tcp_options.c < 4294967296;
[L495]                   hdr.udp.valid := false;
[L496]                   emit[hdr.udp] := false;
[L497]                   havoc hdr.udp.sourcePort;
[L498]                   assume 0 <= hdr.udp.sourcePort && hdr.udp.sourcePort < 65536;
[L499]                   havoc hdr.udp.destPort;
[L500]                   assume 0 <= hdr.udp.destPort && hdr.udp.destPort < 65536;
[L501]                   havoc hdr.udp.length_;
[L502]                   assume 0 <= hdr.udp.length_ && hdr.udp.length_ < 65536;
[L503]                   havoc hdr.udp.checksum;
[L504]                   assume 0 <= hdr.udp.checksum && hdr.udp.checksum < 65536;
[L505]                   meta.codel.drop_time := 0;
[L506]                   meta.codel.time_now := 0;
[L507]                   meta.codel.ok_to_drop := 0;
[L508]                   meta.codel.state_dropping := 0;
[L509]                   meta.codel.delta := 0;
[L510]                   meta.codel.time_since_last_dropping := 0;
[L511]                   meta.codel.drop_next := 0;
[L512]                   meta.codel.drop_cnt := 0;
[L513]                   meta.codel.last_drop_cnt := 0;
[L514]                   meta.codel.reset_drop_time := 0;
[L515]                   meta.codel.new_drop_time := 0;
[L516]                   meta.codel.new_drop_time_helper := 0;
[L517]                   meta.codel.queue_id := 0;
[L518]                   meta.routing_metadata.tcpLength := 0;
[L519]                   havoc c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value;
[L520]                   havoc c_codel_0_t_codel_control_law.action_run;
[L521]                   havoc forwarding_0.forward.egress_spec;
[L522]                   havoc forwarding_0.forward.dst_mac;
[L523]                   havoc forwarding_0.action_run;
[L535]       RET         call havocProcedure();
[L536]       CALL        call _parser_ParserImpl();
[L246]       CALL        call start();
[L642]                   hdr.ethernet.valid := true;
[L643]       COND FALSE  !(hdr.ethernet.ethertype == 2048)
[L246]       RET         call start();
[L536]       RET         call _parser_ParserImpl();
[L537]       CALL        call verifyChecksum();
[L537]       RET         call verifyChecksum();
[L538]       CALL        call ingress();
[L530]       CALL        call forwarding_0.apply();
[L391]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.forward)
[L394]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.NoAction_1)
[L530]       RET         call forwarding_0.apply();
[L538]       RET         call ingress();
[L539]       CALL        call egress();
[L317]       COND TRUE   standard_metadata.ingress_port == 1
[L318]                   meta.codel.queue_id := standard_metadata.egress_port;
[L319]       CALL        call c_codel_0_a_codel_init_0();
[L265]                   meta.codel.ok_to_drop := 0;
[L266]                   meta.codel.time_now := (standard_metadata.enq_timestamp % 281474976710656 + standard_metadata.deq_timedelta % 281474976710656) % 281474976710656;
[L267]                   meta.codel.new_drop_time := (meta.codel.time_now % 281474976710656 + 100000 % 281474976710656) % 281474976710656;
[L269]                   meta.codel.state_dropping := r_state_dropping[meta.codel.queue_id];
[L271]                   meta.codel.drop_cnt := r_drop_count[meta.codel.queue_id];
[L273]                   meta.codel.last_drop_cnt := r_last_drop_count[meta.codel.queue_id];
[L275]                   meta.codel.drop_next := r_next_drop[meta.codel.queue_id];
[L277]                   meta.codel.drop_time := r_drop_time[meta.codel.queue_id];
[L319]       RET         call c_codel_0_a_codel_init_0();
[L320-L322]              assume !(standard_metadata.deq_timedelta < 5000);
[L323]       COND FALSE  !(meta.codel.reset_drop_time == 1)
[L329]       COND FALSE  !(meta.codel.drop_time == 0)
[L335-L337]              assume !(meta.codel.time_now >= meta.codel.drop_time);
[L340]       COND FALSE  !(meta.codel.state_dropping == 1)
[L356]       COND FALSE  !(meta.codel.ok_to_drop == 1)
[L369-L373]              assume !(hdr.ipv4.totalLen > 500);
[L374]                   meta.routing_metadata.tcpLength := (meta.routing_metadata.tcpLength % 65536 + 65516 % 65536) % 65536;
[L539]       RET         call egress();
[L540]       CALL        call computeChecksum();
[L540]       RET         call computeChecksum();
[L541]       COND TRUE   forward == false
[L542]                   drop := true;
[L544]                   _p4ltl_0 := meta.codel.time_now >= meta.codel.drop_time;
[L545]                   _p4ltl_1 := meta.codel.ok_to_drop == 0;
[L546]                   _p4ltl_2 := meta.codel.state_dropping == 1;
[L547]                   _p4ltl_3 := standard_metadata.ingress_port == 1;
[L553]       RET         call main();
Loop:
[L552]       COND TRUE   true
[L553]       CALL        call main();
[L535]       CALL        call havocProcedure();
[L401]                   drop := false;
[L402]                   forward := false;
[L403]                   havoc standard_metadata.ingress_port;
[L404]                   assume 0 <= standard_metadata.ingress_port && standard_metadata.ingress_port < 512;
[L405]                   standard_metadata.egress_spec := 0;
[L406]                   standard_metadata.egress_port := 0;
[L407]                   havoc standard_metadata.instance_type;
[L408]                   assume 0 <= standard_metadata.instance_type && standard_metadata.instance_type < 4294967296;
[L409]                   havoc standard_metadata.packet_length;
[L410]                   assume 0 <= standard_metadata.packet_length && standard_metadata.packet_length < 4294967296;
[L411]                   havoc standard_metadata.enq_timestamp;
[L412]                   assume 0 <= standard_metadata.enq_timestamp && standard_metadata.enq_timestamp < 4294967296;
[L413]                   standard_metadata.enq_qdepth := 0;
[L414]                   havoc standard_metadata.deq_timedelta;
[L415]                   assume 0 <= standard_metadata.deq_timedelta && standard_metadata.deq_timedelta < 4294967296;
[L416]                   havoc standard_metadata.deq_qdepth;
[L417]                   assume 0 <= standard_metadata.deq_qdepth && standard_metadata.deq_qdepth < 524288;
[L418]                   havoc standard_metadata.ingress_global_timestamp;
[L419]                   assume 0 <= standard_metadata.ingress_global_timestamp && standard_metadata.ingress_global_timestamp < 281474976710656;
[L420]                   havoc standard_metadata.egress_global_timestamp;
[L421]                   assume 0 <= standard_metadata.egress_global_timestamp && standard_metadata.egress_global_timestamp < 281474976710656;
[L422]                   standard_metadata.mcast_grp := 0;
[L423]                   standard_metadata.egress_rid := 0;
[L424]                   standard_metadata.checksum_error := 0;
[L425]                   standard_metadata.parser_error := 0;
[L426]                   standard_metadata.priority := 0;
[L427]                   hdr.ethernet.valid := false;
[L428]                   emit[hdr.ethernet] := false;
[L429]                   havoc hdr.ethernet.dst_addr;
[L430]                   assume 0 <= hdr.ethernet.dst_addr && hdr.ethernet.dst_addr < 281474976710656;
[L431]                   havoc hdr.ethernet.src_addr;
[L432]                   assume 0 <= hdr.ethernet.src_addr && hdr.ethernet.src_addr < 281474976710656;
[L433]                   havoc hdr.ethernet.ethertype;
[L434]                   assume 0 <= hdr.ethernet.ethertype && hdr.ethernet.ethertype < 65536;
[L435]                   hdr.ipv4.valid := false;
[L436]                   emit[hdr.ipv4] := false;
[L437]                   havoc hdr.ipv4.version;
[L438]                   assume 0 <= hdr.ipv4.version && hdr.ipv4.version < 16;
[L439]                   havoc hdr.ipv4.ihl;
[L440]                   assume 0 <= hdr.ipv4.ihl && hdr.ipv4.ihl < 16;
[L441]                   havoc hdr.ipv4.diffserv;
[L442]                   assume 0 <= hdr.ipv4.diffserv && hdr.ipv4.diffserv < 256;
[L443]                   havoc hdr.ipv4.totalLen;
[L444]                   assume 0 <= hdr.ipv4.totalLen && hdr.ipv4.totalLen < 65536;
[L445]                   havoc hdr.ipv4.identification;
[L446]                   assume 0 <= hdr.ipv4.identification && hdr.ipv4.identification < 65536;
[L447]                   havoc hdr.ipv4.flags;
[L448]                   assume 0 <= hdr.ipv4.flags && hdr.ipv4.flags < 8;
[L449]                   havoc hdr.ipv4.fragOffset;
[L450]                   assume 0 <= hdr.ipv4.fragOffset && hdr.ipv4.fragOffset < 8192;
[L451]                   havoc hdr.ipv4.ttl;
[L452]                   assume 0 <= hdr.ipv4.ttl && hdr.ipv4.ttl < 256;
[L453]                   havoc hdr.ipv4.protocol;
[L454]                   assume 0 <= hdr.ipv4.protocol && hdr.ipv4.protocol < 256;
[L455]                   havoc hdr.ipv4.hdrChecksum;
[L456]                   assume 0 <= hdr.ipv4.hdrChecksum && hdr.ipv4.hdrChecksum < 65536;
[L457]                   havoc hdr.ipv4.srcAddr;
[L458]                   assume 0 <= hdr.ipv4.srcAddr && hdr.ipv4.srcAddr < 4294967296;
[L459]                   havoc hdr.ipv4.dstAddr;
[L460]                   assume 0 <= hdr.ipv4.dstAddr && hdr.ipv4.dstAddr < 4294967296;
[L461]                   hdr.queue_delay.valid := false;
[L462]                   emit[hdr.queue_delay] := false;
[L463]                   havoc hdr.queue_delay.delay;
[L464]                   assume 0 <= hdr.queue_delay.delay && hdr.queue_delay.delay < 4294967296;
[L465]                   hdr.tcp.valid := false;
[L466]                   emit[hdr.tcp] := false;
[L467]                   havoc hdr.tcp.srcPort;
[L468]                   assume 0 <= hdr.tcp.srcPort && hdr.tcp.srcPort < 65536;
[L469]                   havoc hdr.tcp.dstPort;
[L470]                   assume 0 <= hdr.tcp.dstPort && hdr.tcp.dstPort < 65536;
[L471]                   havoc hdr.tcp.seqNo;
[L472]                   assume 0 <= hdr.tcp.seqNo && hdr.tcp.seqNo < 4294967296;
[L473]                   havoc hdr.tcp.ackNo;
[L474]                   assume 0 <= hdr.tcp.ackNo && hdr.tcp.ackNo < 4294967296;
[L475]                   havoc hdr.tcp.dataOffset;
[L476]                   assume 0 <= hdr.tcp.dataOffset && hdr.tcp.dataOffset < 16;
[L477]                   havoc hdr.tcp.res;
[L478]                   assume 0 <= hdr.tcp.res && hdr.tcp.res < 16;
[L479]                   havoc hdr.tcp.flags;
[L480]                   assume 0 <= hdr.tcp.flags && hdr.tcp.flags < 256;
[L481]                   havoc hdr.tcp.window;
[L482]                   assume 0 <= hdr.tcp.window && hdr.tcp.window < 65536;
[L483]                   havoc hdr.tcp.checksum;
[L484]                   assume 0 <= hdr.tcp.checksum && hdr.tcp.checksum < 65536;
[L485]                   havoc hdr.tcp.urgentPtr;
[L486]                   assume 0 <= hdr.tcp.urgentPtr && hdr.tcp.urgentPtr < 65536;
[L487]                   hdr.tcp_options.valid := false;
[L488]                   emit[hdr.tcp_options] := false;
[L489]                   havoc hdr.tcp_options.a;
[L490]                   assume 0 <= hdr.tcp_options.a && hdr.tcp_options.a < 4294967296;
[L491]                   havoc hdr.tcp_options.b;
[L492]                   assume 0 <= hdr.tcp_options.b && hdr.tcp_options.b < 4294967296;
[L493]                   havoc hdr.tcp_options.c;
[L494]                   assume 0 <= hdr.tcp_options.c && hdr.tcp_options.c < 4294967296;
[L495]                   hdr.udp.valid := false;
[L496]                   emit[hdr.udp] := false;
[L497]                   havoc hdr.udp.sourcePort;
[L498]                   assume 0 <= hdr.udp.sourcePort && hdr.udp.sourcePort < 65536;
[L499]                   havoc hdr.udp.destPort;
[L500]                   assume 0 <= hdr.udp.destPort && hdr.udp.destPort < 65536;
[L501]                   havoc hdr.udp.length_;
[L502]                   assume 0 <= hdr.udp.length_ && hdr.udp.length_ < 65536;
[L503]                   havoc hdr.udp.checksum;
[L504]                   assume 0 <= hdr.udp.checksum && hdr.udp.checksum < 65536;
[L505]                   meta.codel.drop_time := 0;
[L506]                   meta.codel.time_now := 0;
[L507]                   meta.codel.ok_to_drop := 0;
[L508]                   meta.codel.state_dropping := 0;
[L509]                   meta.codel.delta := 0;
[L510]                   meta.codel.time_since_last_dropping := 0;
[L511]                   meta.codel.drop_next := 0;
[L512]                   meta.codel.drop_cnt := 0;
[L513]                   meta.codel.last_drop_cnt := 0;
[L514]                   meta.codel.reset_drop_time := 0;
[L515]                   meta.codel.new_drop_time := 0;
[L516]                   meta.codel.new_drop_time_helper := 0;
[L517]                   meta.codel.queue_id := 0;
[L518]                   meta.routing_metadata.tcpLength := 0;
[L519]                   havoc c_codel_0_t_codel_control_law.c_codel_0_a_codel_control_law_0.value;
[L520]                   havoc c_codel_0_t_codel_control_law.action_run;
[L521]                   havoc forwarding_0.forward.egress_spec;
[L522]                   havoc forwarding_0.forward.dst_mac;
[L523]                   havoc forwarding_0.action_run;
[L535]       RET         call havocProcedure();
[L536]       CALL        call _parser_ParserImpl();
[L246]       CALL        call start();
[L642]                   hdr.ethernet.valid := true;
[L643]       COND FALSE  !(hdr.ethernet.ethertype == 2048)
[L246]       RET         call start();
[L536]       RET         call _parser_ParserImpl();
[L537]       CALL        call verifyChecksum();
[L537]       RET         call verifyChecksum();
[L538]       CALL        call ingress();
[L530]       CALL        call forwarding_0.apply();
[L391]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.forward)
[L394]       COND FALSE  !(forwarding_0.action_run == forwarding_0.action.NoAction_1)
[L530]       RET         call forwarding_0.apply();
[L538]       RET         call ingress();
[L539]       CALL        call egress();
[L317]       COND TRUE   standard_metadata.ingress_port == 1
[L318]                   meta.codel.queue_id := standard_metadata.egress_port;
[L319]       CALL        call c_codel_0_a_codel_init_0();
[L265]                   meta.codel.ok_to_drop := 0;
[L266]                   meta.codel.time_now := (standard_metadata.enq_timestamp % 281474976710656 + standard_metadata.deq_timedelta % 281474976710656) % 281474976710656;
[L267]                   meta.codel.new_drop_time := (meta.codel.time_now % 281474976710656 + 100000 % 281474976710656) % 281474976710656;
[L269]                   meta.codel.state_dropping := r_state_dropping[meta.codel.queue_id];
[L271]                   meta.codel.drop_cnt := r_drop_count[meta.codel.queue_id];
[L273]                   meta.codel.last_drop_cnt := r_last_drop_count[meta.codel.queue_id];
[L275]                   meta.codel.drop_next := r_next_drop[meta.codel.queue_id];
[L277]                   meta.codel.drop_time := r_drop_time[meta.codel.queue_id];
[L319]       RET         call c_codel_0_a_codel_init_0();
[L320-L322]              assume !(standard_metadata.deq_timedelta < 5000);
[L323]       COND FALSE  !(meta.codel.reset_drop_time == 1)
[L329]       COND FALSE  !(meta.codel.drop_time == 0)
[L335-L337]              assume !(meta.codel.time_now >= meta.codel.drop_time);
[L340]       COND FALSE  !(meta.codel.state_dropping == 1)
[L356]       COND FALSE  !(meta.codel.ok_to_drop == 1)
[L369-L373]              assume !(hdr.ipv4.totalLen > 500);
[L374]                   meta.routing_metadata.tcpLength := (meta.routing_metadata.tcpLength % 65536 + 65516 % 65536) % 65536;
[L539]       RET         call egress();
[L540]       CALL        call computeChecksum();
[L540]       RET         call computeChecksum();
[L541]       COND TRUE   forward == false
[L542]                   drop := true;
[L544]                   _p4ltl_0 := meta.codel.time_now >= meta.codel.drop_time;
[L545]                   _p4ltl_1 := meta.codel.ok_to_drop == 0;
[L546]                   _p4ltl_2 := meta.codel.state_dropping == 1;
[L547]                   _p4ltl_3 := standard_metadata.ingress_port == 1;
[L553]       RET         call main();
End of lasso representation.
RESULT: Ultimate proved your program to be incorrect!
Received shutdown request...
